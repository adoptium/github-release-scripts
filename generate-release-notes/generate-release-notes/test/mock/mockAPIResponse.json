{
    "url": "https://api.github.com/repos/adoptium/jdk17u/compare/jdk-17.0.5-ga...jdk-17.0.6+9",
    "html_url": "https://github.com/adoptium/jdk17u/compare/jdk-17.0.5-ga...jdk-17.0.6+9",
    "permalink_url": "https://github.com/adoptium/jdk17u/compare/adoptium:0a62527...adoptium:41c9d7d",
    "diff_url": "https://github.com/adoptium/jdk17u/compare/jdk-17.0.5-ga...jdk-17.0.6+9.diff",
    "patch_url": "https://github.com/adoptium/jdk17u/compare/jdk-17.0.5-ga...jdk-17.0.6+9.patch",
    "base_commit": {
      "sha": "0a6252780a862e6d5646a28c2b22a1c03eff37bf",
      "node_id": "C_kwDOF886Z9oAKDBhNjI1Mjc4MGE4NjJlNmQ1NjQ2YTI4YzJiMjJhMWMwM2VmZjM3YmY",
      "commit": {
        "author": {
          "name": "Christoph Langer",
          "email": "christoph.langer@sap.com",
          "date": "2022-10-10T13:07:22Z"
        },
        "committer": {
          "name": "Christoph Langer",
          "email": "clanger@openjdk.org",
          "date": "2022-10-10T13:07:22Z"
        },
        "message": "8295056: [17u] Remove designator DEFAULT_PROMOTED_VERSION_PRE=ea for release 17.0.5\n\nReviewed-by: goetz",
        "tree": {
          "sha": "0e0c69f9a0349a2d1efb72af104c8686c89faca4",
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/0e0c69f9a0349a2d1efb72af104c8686c89faca4"
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/0a6252780a862e6d5646a28c2b22a1c03eff37bf",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null
        }
      },
      "url": "https://api.github.com/repos/adoptium/jdk17u/commits/0a6252780a862e6d5646a28c2b22a1c03eff37bf",
      "html_url": "https://github.com/adoptium/jdk17u/commit/0a6252780a862e6d5646a28c2b22a1c03eff37bf",
      "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/0a6252780a862e6d5646a28c2b22a1c03eff37bf/comments",
      "author": {
        "login": "RealCLanger",
        "id": 26298889,
        "node_id": "MDQ6VXNlcjI2Mjk4ODg5",
        "avatar_url": "https://avatars.githubusercontent.com/u/26298889?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RealCLanger",
        "html_url": "https://github.com/RealCLanger",
        "followers_url": "https://api.github.com/users/RealCLanger/followers",
        "following_url": "https://api.github.com/users/RealCLanger/following{/other_user}",
        "gists_url": "https://api.github.com/users/RealCLanger/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RealCLanger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RealCLanger/subscriptions",
        "organizations_url": "https://api.github.com/users/RealCLanger/orgs",
        "repos_url": "https://api.github.com/users/RealCLanger/repos",
        "events_url": "https://api.github.com/users/RealCLanger/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RealCLanger/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "RealCLanger",
        "id": 26298889,
        "node_id": "MDQ6VXNlcjI2Mjk4ODg5",
        "avatar_url": "https://avatars.githubusercontent.com/u/26298889?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RealCLanger",
        "html_url": "https://github.com/RealCLanger",
        "followers_url": "https://api.github.com/users/RealCLanger/followers",
        "following_url": "https://api.github.com/users/RealCLanger/following{/other_user}",
        "gists_url": "https://api.github.com/users/RealCLanger/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RealCLanger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RealCLanger/subscriptions",
        "organizations_url": "https://api.github.com/users/RealCLanger/orgs",
        "repos_url": "https://api.github.com/users/RealCLanger/repos",
        "events_url": "https://api.github.com/users/RealCLanger/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RealCLanger/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ff5418eff8c07be96005ca0d8477436643cc14dd",
          "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ff5418eff8c07be96005ca0d8477436643cc14dd",
          "html_url": "https://github.com/adoptium/jdk17u/commit/ff5418eff8c07be96005ca0d8477436643cc14dd"
        }
      ]
    },
    "merge_base_commit": {
      "sha": "0a6252780a862e6d5646a28c2b22a1c03eff37bf",
      "node_id": "C_kwDOF886Z9oAKDBhNjI1Mjc4MGE4NjJlNmQ1NjQ2YTI4YzJiMjJhMWMwM2VmZjM3YmY",
      "commit": {
        "author": {
          "name": "Christoph Langer",
          "email": "christoph.langer@sap.com",
          "date": "2022-10-10T13:07:22Z"
        },
        "committer": {
          "name": "Christoph Langer",
          "email": "clanger@openjdk.org",
          "date": "2022-10-10T13:07:22Z"
        },
        "message": "8295056: [17u] Remove designator DEFAULT_PROMOTED_VERSION_PRE=ea for release 17.0.5\n\nReviewed-by: goetz",
        "tree": {
          "sha": "0e0c69f9a0349a2d1efb72af104c8686c89faca4",
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/0e0c69f9a0349a2d1efb72af104c8686c89faca4"
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/0a6252780a862e6d5646a28c2b22a1c03eff37bf",
        "comment_count": 0,
        "verification": {
          "verified": false,
          "reason": "unsigned",
          "signature": null,
          "payload": null
        }
      },
      "url": "https://api.github.com/repos/adoptium/jdk17u/commits/0a6252780a862e6d5646a28c2b22a1c03eff37bf",
      "html_url": "https://github.com/adoptium/jdk17u/commit/0a6252780a862e6d5646a28c2b22a1c03eff37bf",
      "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/0a6252780a862e6d5646a28c2b22a1c03eff37bf/comments",
      "author": {
        "login": "RealCLanger",
        "id": 26298889,
        "node_id": "MDQ6VXNlcjI2Mjk4ODg5",
        "avatar_url": "https://avatars.githubusercontent.com/u/26298889?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RealCLanger",
        "html_url": "https://github.com/RealCLanger",
        "followers_url": "https://api.github.com/users/RealCLanger/followers",
        "following_url": "https://api.github.com/users/RealCLanger/following{/other_user}",
        "gists_url": "https://api.github.com/users/RealCLanger/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RealCLanger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RealCLanger/subscriptions",
        "organizations_url": "https://api.github.com/users/RealCLanger/orgs",
        "repos_url": "https://api.github.com/users/RealCLanger/repos",
        "events_url": "https://api.github.com/users/RealCLanger/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RealCLanger/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "RealCLanger",
        "id": 26298889,
        "node_id": "MDQ6VXNlcjI2Mjk4ODg5",
        "avatar_url": "https://avatars.githubusercontent.com/u/26298889?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RealCLanger",
        "html_url": "https://github.com/RealCLanger",
        "followers_url": "https://api.github.com/users/RealCLanger/followers",
        "following_url": "https://api.github.com/users/RealCLanger/following{/other_user}",
        "gists_url": "https://api.github.com/users/RealCLanger/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RealCLanger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RealCLanger/subscriptions",
        "organizations_url": "https://api.github.com/users/RealCLanger/orgs",
        "repos_url": "https://api.github.com/users/RealCLanger/repos",
        "events_url": "https://api.github.com/users/RealCLanger/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RealCLanger/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ff5418eff8c07be96005ca0d8477436643cc14dd",
          "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ff5418eff8c07be96005ca0d8477436643cc14dd",
          "html_url": "https://github.com/adoptium/jdk17u/commit/ff5418eff8c07be96005ca0d8477436643cc14dd"
        }
      ]
    },
    "status": "ahead",
    "ahead_by": 265,
    "behind_by": 0,
    "total_commits": 265,
    "commits": [
      {
        "sha": "282efe5e1d1fe451e3fc8b78be4ca595058cc3de",
        "node_id": "C_kwDOF886Z9oAKDI4MmVmZTVlMWQxZmU0NTFlM2ZjOGI3OGJlNGNhNTk1MDU4Y2MzZGU",
        "commit": {
          "author": {
            "name": "Christoph Langer",
            "email": "clanger@openjdk.org",
            "date": "2022-09-01T05:07:34Z"
          },
          "committer": {
            "name": "Christoph Langer",
            "email": "clanger@openjdk.org",
            "date": "2022-09-01T05:07:34Z"
          },
          "message": "8292888: Bump update version for OpenJDK: jdk-17.0.6\n\nReviewed-by: sgehwolf",
          "tree": {
            "sha": "04e0ef1b7fd26b574bd960ca697954d62d8397ce",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/04e0ef1b7fd26b574bd960ca697954d62d8397ce"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/282efe5e1d1fe451e3fc8b78be4ca595058cc3de",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/282efe5e1d1fe451e3fc8b78be4ca595058cc3de",
        "html_url": "https://github.com/adoptium/jdk17u/commit/282efe5e1d1fe451e3fc8b78be4ca595058cc3de",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/282efe5e1d1fe451e3fc8b78be4ca595058cc3de/comments",
        "author": {
          "login": "RealCLanger",
          "id": 26298889,
          "node_id": "MDQ6VXNlcjI2Mjk4ODg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26298889?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RealCLanger",
          "html_url": "https://github.com/RealCLanger",
          "followers_url": "https://api.github.com/users/RealCLanger/followers",
          "following_url": "https://api.github.com/users/RealCLanger/following{/other_user}",
          "gists_url": "https://api.github.com/users/RealCLanger/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RealCLanger/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RealCLanger/subscriptions",
          "organizations_url": "https://api.github.com/users/RealCLanger/orgs",
          "repos_url": "https://api.github.com/users/RealCLanger/repos",
          "events_url": "https://api.github.com/users/RealCLanger/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RealCLanger/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "RealCLanger",
          "id": 26298889,
          "node_id": "MDQ6VXNlcjI2Mjk4ODg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26298889?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RealCLanger",
          "html_url": "https://github.com/RealCLanger",
          "followers_url": "https://api.github.com/users/RealCLanger/followers",
          "following_url": "https://api.github.com/users/RealCLanger/following{/other_user}",
          "gists_url": "https://api.github.com/users/RealCLanger/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RealCLanger/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RealCLanger/subscriptions",
          "organizations_url": "https://api.github.com/users/RealCLanger/orgs",
          "repos_url": "https://api.github.com/users/RealCLanger/repos",
          "events_url": "https://api.github.com/users/RealCLanger/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RealCLanger/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "bf7e3bf070d0c063c85367746bde2292c66fb987",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/bf7e3bf070d0c063c85367746bde2292c66fb987",
            "html_url": "https://github.com/adoptium/jdk17u/commit/bf7e3bf070d0c063c85367746bde2292c66fb987"
          }
        ]
      },
      {
        "sha": "e66fd866b8a69367cb3e8f75f3ac6ebf2e59a56c",
        "node_id": "C_kwDOF886Z9oAKGU2NmZkODY2YjhhNjkzNjdjYjNlOGY3NWYzYWM2ZWJmMmU1OWE1NmM",
        "commit": {
          "author": {
            "name": "Jonathan Dowland",
            "email": "jdowland@openjdk.org",
            "date": "2022-09-01T08:13:26Z"
          },
          "committer": {
            "name": "Jonathan Dowland",
            "email": "jdowland@openjdk.org",
            "date": "2022-09-01T08:13:26Z"
          },
          "message": "8292083: Detected container memory limit may exceed physical machine memory\n\nReviewed-by: sgehwolf\nBackport-of: f694f8a7671002559e7d23fdb65d5e9c768f9c03",
          "tree": {
            "sha": "cf2c1fe72c8a36afac2a8ab2be8876c2ea2dea99",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/cf2c1fe72c8a36afac2a8ab2be8876c2ea2dea99"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/e66fd866b8a69367cb3e8f75f3ac6ebf2e59a56c",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/e66fd866b8a69367cb3e8f75f3ac6ebf2e59a56c",
        "html_url": "https://github.com/adoptium/jdk17u/commit/e66fd866b8a69367cb3e8f75f3ac6ebf2e59a56c",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/e66fd866b8a69367cb3e8f75f3ac6ebf2e59a56c/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "282efe5e1d1fe451e3fc8b78be4ca595058cc3de",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/282efe5e1d1fe451e3fc8b78be4ca595058cc3de",
            "html_url": "https://github.com/adoptium/jdk17u/commit/282efe5e1d1fe451e3fc8b78be4ca595058cc3de"
          }
        ]
      },
      {
        "sha": "94618a2fa342065f09b73c981361761858cd845f",
        "node_id": "C_kwDOF886Z9oAKDk0NjE4YTJmYTM0MjA2NWYwOWI3M2M5ODEzNjE3NjE4NThjZDg0NWY",
        "commit": {
          "author": {
            "name": "Sergey Nazarkin",
            "email": "snazarki@openjdk.org",
            "date": "2022-09-02T11:13:28Z"
          },
          "committer": {
            "name": "Yuri Nesterenko",
            "email": "yan@openjdk.org",
            "date": "2022-09-02T11:13:28Z"
          },
          "message": "8289044: ARM32: missing LIR_Assembler::cmove metadata type support\n\nBackport-of: 20f55abd2744323a756872e080885d107e6c56e5",
          "tree": {
            "sha": "9d51b33add15a52cce77adac6027a30c9bcf9a76",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/9d51b33add15a52cce77adac6027a30c9bcf9a76"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/94618a2fa342065f09b73c981361761858cd845f",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/94618a2fa342065f09b73c981361761858cd845f",
        "html_url": "https://github.com/adoptium/jdk17u/commit/94618a2fa342065f09b73c981361761858cd845f",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/94618a2fa342065f09b73c981361761858cd845f/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "e66fd866b8a69367cb3e8f75f3ac6ebf2e59a56c",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/e66fd866b8a69367cb3e8f75f3ac6ebf2e59a56c",
            "html_url": "https://github.com/adoptium/jdk17u/commit/e66fd866b8a69367cb3e8f75f3ac6ebf2e59a56c"
          }
        ]
      },
      {
        "sha": "c4721bc24c1446a3eca39aaa832a135aa3874d5a",
        "node_id": "C_kwDOF886Z9oAKGM0NzIxYmMyNGMxNDQ2YTNlY2EzOWFhYTgzMmExMzVhYTM4NzRkNWE",
        "commit": {
          "author": {
            "name": "Matthias Baesken",
            "email": "mbaesken@openjdk.org",
            "date": "2022-09-06T07:54:50Z"
          },
          "committer": {
            "name": "Matthias Baesken",
            "email": "mbaesken@openjdk.org",
            "date": "2022-09-06T07:54:50Z"
          },
          "message": "8289146: containers/docker/TestMemoryWithCgroupV1.java fails on linux ppc64le machine with missing Memory and Swap Limit output\n\nBackport-of: d8f4e97bd3f4e50902e80b4b6b4eb3268c6d4a9d",
          "tree": {
            "sha": "fb8e029000f7f7c26e1776371fe230244f03968f",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/fb8e029000f7f7c26e1776371fe230244f03968f"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/c4721bc24c1446a3eca39aaa832a135aa3874d5a",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/c4721bc24c1446a3eca39aaa832a135aa3874d5a",
        "html_url": "https://github.com/adoptium/jdk17u/commit/c4721bc24c1446a3eca39aaa832a135aa3874d5a",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/c4721bc24c1446a3eca39aaa832a135aa3874d5a/comments",
        "author": {
          "login": "MBaesken",
          "id": 26144289,
          "node_id": "MDQ6VXNlcjI2MTQ0Mjg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26144289?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MBaesken",
          "html_url": "https://github.com/MBaesken",
          "followers_url": "https://api.github.com/users/MBaesken/followers",
          "following_url": "https://api.github.com/users/MBaesken/following{/other_user}",
          "gists_url": "https://api.github.com/users/MBaesken/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MBaesken/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MBaesken/subscriptions",
          "organizations_url": "https://api.github.com/users/MBaesken/orgs",
          "repos_url": "https://api.github.com/users/MBaesken/repos",
          "events_url": "https://api.github.com/users/MBaesken/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MBaesken/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "MBaesken",
          "id": 26144289,
          "node_id": "MDQ6VXNlcjI2MTQ0Mjg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26144289?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MBaesken",
          "html_url": "https://github.com/MBaesken",
          "followers_url": "https://api.github.com/users/MBaesken/followers",
          "following_url": "https://api.github.com/users/MBaesken/following{/other_user}",
          "gists_url": "https://api.github.com/users/MBaesken/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MBaesken/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MBaesken/subscriptions",
          "organizations_url": "https://api.github.com/users/MBaesken/orgs",
          "repos_url": "https://api.github.com/users/MBaesken/repos",
          "events_url": "https://api.github.com/users/MBaesken/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MBaesken/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "94618a2fa342065f09b73c981361761858cd845f",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/94618a2fa342065f09b73c981361761858cd845f",
            "html_url": "https://github.com/adoptium/jdk17u/commit/94618a2fa342065f09b73c981361761858cd845f"
          }
        ]
      },
      {
        "sha": "328ea9d0ff13a2b3f8c539589aa13178c2f50007",
        "node_id": "C_kwDOF886Z9oAKDMyOGVhOWQwZmYxM2EyYjNmOGM1Mzk1ODlhYTEzMTc4YzJmNTAwMDc",
        "commit": {
          "author": {
            "name": "Yi-Fan Tsai",
            "email": "yftsai@amazon.com",
            "date": "2022-09-06T16:43:39Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-06T16:43:39Z"
          },
          "message": "8288445: AArch64: C2 compilation fails with guarantee(!true || (true && (shift != 0))) failed: impossible encoding\n\nReviewed-by: phh\nBackport-of: b4490386fe348250e88347526172c1c27ef01eba",
          "tree": {
            "sha": "9debcb67e05a3fdf2467f503cbb001a5dd5b12ec",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/9debcb67e05a3fdf2467f503cbb001a5dd5b12ec"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/328ea9d0ff13a2b3f8c539589aa13178c2f50007",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/328ea9d0ff13a2b3f8c539589aa13178c2f50007",
        "html_url": "https://github.com/adoptium/jdk17u/commit/328ea9d0ff13a2b3f8c539589aa13178c2f50007",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/328ea9d0ff13a2b3f8c539589aa13178c2f50007/comments",
        "author": {
          "login": "yftsai",
          "id": 5721497,
          "node_id": "MDQ6VXNlcjU3MjE0OTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5721497?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/yftsai",
          "html_url": "https://github.com/yftsai",
          "followers_url": "https://api.github.com/users/yftsai/followers",
          "following_url": "https://api.github.com/users/yftsai/following{/other_user}",
          "gists_url": "https://api.github.com/users/yftsai/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/yftsai/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/yftsai/subscriptions",
          "organizations_url": "https://api.github.com/users/yftsai/orgs",
          "repos_url": "https://api.github.com/users/yftsai/repos",
          "events_url": "https://api.github.com/users/yftsai/events{/privacy}",
          "received_events_url": "https://api.github.com/users/yftsai/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": null,
        "parents": [
          {
            "sha": "c4721bc24c1446a3eca39aaa832a135aa3874d5a",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/c4721bc24c1446a3eca39aaa832a135aa3874d5a",
            "html_url": "https://github.com/adoptium/jdk17u/commit/c4721bc24c1446a3eca39aaa832a135aa3874d5a"
          }
        ]
      },
      {
        "sha": "12576b99fc7056fc0651dd306508377f820c821a",
        "node_id": "C_kwDOF886Z9oAKDEyNTc2Yjk5ZmM3MDU2ZmMwNjUxZGQzMDY1MDgzNzdmODIwYzgyMWE",
        "commit": {
          "author": {
            "name": "Jonathan Dowland",
            "email": "jdowland@openjdk.org",
            "date": "2022-09-06T18:20:11Z"
          },
          "committer": {
            "name": "Jonathan Dowland",
            "email": "jdowland@openjdk.org",
            "date": "2022-09-06T18:20:11Z"
          },
          "message": "8292541: [Metrics] Reported memory limit may exceed physical machine memory\n\nBackport-of: 9a0d1e7ce86368cdcade713a9e220604f7d77ecf",
          "tree": {
            "sha": "03386d573cbfc7ceeca210784f29e90a0f771db2",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/03386d573cbfc7ceeca210784f29e90a0f771db2"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/12576b99fc7056fc0651dd306508377f820c821a",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/12576b99fc7056fc0651dd306508377f820c821a",
        "html_url": "https://github.com/adoptium/jdk17u/commit/12576b99fc7056fc0651dd306508377f820c821a",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/12576b99fc7056fc0651dd306508377f820c821a/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "328ea9d0ff13a2b3f8c539589aa13178c2f50007",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/328ea9d0ff13a2b3f8c539589aa13178c2f50007",
            "html_url": "https://github.com/adoptium/jdk17u/commit/328ea9d0ff13a2b3f8c539589aa13178c2f50007"
          }
        ]
      },
      {
        "sha": "13ed26b8c6dbc8252e58ba2eb6b69130fb2269f3",
        "node_id": "C_kwDOF886Z9oAKDEzZWQyNmI4YzZkYmM4MjUyZTU4YmEyZWI2YjY5MTMwZmIyMjY5ZjM",
        "commit": {
          "author": {
            "name": "bobpengxie",
            "email": "bobpengxie@tencent.com",
            "date": "2022-09-07T02:13:19Z"
          },
          "committer": {
            "name": "Jie Fu",
            "email": "jiefu@openjdk.org",
            "date": "2022-09-07T02:13:19Z"
          },
          "message": "8293319: [C2 cleanup] Remove unused other_path arg in Parse::adjust_map_after_if\n\nBackport-of: e1e67324c0c3d8b26af8ae5382073d8f477dbe3c",
          "tree": {
            "sha": "52b618301bf3ff808e7142474b2e737c51315486",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/52b618301bf3ff808e7142474b2e737c51315486"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/13ed26b8c6dbc8252e58ba2eb6b69130fb2269f3",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/13ed26b8c6dbc8252e58ba2eb6b69130fb2269f3",
        "html_url": "https://github.com/adoptium/jdk17u/commit/13ed26b8c6dbc8252e58ba2eb6b69130fb2269f3",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/13ed26b8c6dbc8252e58ba2eb6b69130fb2269f3/comments",
        "author": null,
        "committer": {
          "login": "DamonFool",
          "id": 19923746,
          "node_id": "MDQ6VXNlcjE5OTIzNzQ2",
          "avatar_url": "https://avatars.githubusercontent.com/u/19923746?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/DamonFool",
          "html_url": "https://github.com/DamonFool",
          "followers_url": "https://api.github.com/users/DamonFool/followers",
          "following_url": "https://api.github.com/users/DamonFool/following{/other_user}",
          "gists_url": "https://api.github.com/users/DamonFool/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/DamonFool/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/DamonFool/subscriptions",
          "organizations_url": "https://api.github.com/users/DamonFool/orgs",
          "repos_url": "https://api.github.com/users/DamonFool/repos",
          "events_url": "https://api.github.com/users/DamonFool/events{/privacy}",
          "received_events_url": "https://api.github.com/users/DamonFool/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "12576b99fc7056fc0651dd306508377f820c821a",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/12576b99fc7056fc0651dd306508377f820c821a",
            "html_url": "https://github.com/adoptium/jdk17u/commit/12576b99fc7056fc0651dd306508377f820c821a"
          }
        ]
      },
      {
        "sha": "cd7da2dfe7585d694c2f1f5ad38c22c4bcc0fef8",
        "node_id": "C_kwDOF886Z9oAKGNkN2RhMmRmZTc1ODVkNjk0YzJmMWY1YWQzOGMyMmM0YmNjMGZlZjg",
        "commit": {
          "author": {
            "name": "Jonathan Dowland",
            "email": "jdowland@openjdk.org",
            "date": "2022-09-07T18:50:40Z"
          },
          "committer": {
            "name": "Jonathan Dowland",
            "email": "jdowland@openjdk.org",
            "date": "2022-09-07T18:50:40Z"
          },
          "message": "8283383: [macos] a11y : Screen magnifier shows extra characters (0) at the end JButton accessibility name\n\nBackport-of: b021d37cec557059e288d5937a73577233b0b172",
          "tree": {
            "sha": "6dc567f19aedcb0b0d5850a71ca9460172bc253b",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/6dc567f19aedcb0b0d5850a71ca9460172bc253b"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/cd7da2dfe7585d694c2f1f5ad38c22c4bcc0fef8",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/cd7da2dfe7585d694c2f1f5ad38c22c4bcc0fef8",
        "html_url": "https://github.com/adoptium/jdk17u/commit/cd7da2dfe7585d694c2f1f5ad38c22c4bcc0fef8",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/cd7da2dfe7585d694c2f1f5ad38c22c4bcc0fef8/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "13ed26b8c6dbc8252e58ba2eb6b69130fb2269f3",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/13ed26b8c6dbc8252e58ba2eb6b69130fb2269f3",
            "html_url": "https://github.com/adoptium/jdk17u/commit/13ed26b8c6dbc8252e58ba2eb6b69130fb2269f3"
          }
        ]
      },
      {
        "sha": "f0acd72f2de73ba341998bf19b61af2a1656541c",
        "node_id": "C_kwDOF886Z9oAKGYwYWNkNzJmMmRlNzNiYTM0MTk5OGJmMTliNjFhZjJhMTY1NjU0MWM",
        "commit": {
          "author": {
            "name": "Ryan Flegel",
            "email": "ryan.flegel@fcc-fac.ca",
            "date": "2022-09-12T18:13:56Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-12T18:13:56Z"
          },
          "message": "8275535: Retrying a failed authentication on multiple LDAP servers can lead to users blocked\n\nBackport-of: 3be394e1606dd17c2c14ce806c796f5eb2b1ad6e",
          "tree": {
            "sha": "80966745fc6a64087d7cb4c187f6ed69b4d6a067",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/80966745fc6a64087d7cb4c187f6ed69b4d6a067"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/f0acd72f2de73ba341998bf19b61af2a1656541c",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/f0acd72f2de73ba341998bf19b61af2a1656541c",
        "html_url": "https://github.com/adoptium/jdk17u/commit/f0acd72f2de73ba341998bf19b61af2a1656541c",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/f0acd72f2de73ba341998bf19b61af2a1656541c/comments",
        "author": {
          "login": "ryanflegel",
          "id": 590867,
          "node_id": "MDQ6VXNlcjU5MDg2Nw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/590867?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanflegel",
          "html_url": "https://github.com/ryanflegel",
          "followers_url": "https://api.github.com/users/ryanflegel/followers",
          "following_url": "https://api.github.com/users/ryanflegel/following{/other_user}",
          "gists_url": "https://api.github.com/users/ryanflegel/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ryanflegel/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ryanflegel/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanflegel/orgs",
          "repos_url": "https://api.github.com/users/ryanflegel/repos",
          "events_url": "https://api.github.com/users/ryanflegel/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ryanflegel/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": null,
        "parents": [
          {
            "sha": "cd7da2dfe7585d694c2f1f5ad38c22c4bcc0fef8",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/cd7da2dfe7585d694c2f1f5ad38c22c4bcc0fef8",
            "html_url": "https://github.com/adoptium/jdk17u/commit/cd7da2dfe7585d694c2f1f5ad38c22c4bcc0fef8"
          }
        ]
      },
      {
        "sha": "02fa3639327ddea13bd399a16be7808e425c40d3",
        "node_id": "C_kwDOF886Z9oAKDAyZmEzNjM5MzI3ZGRlYTEzYmQzOTlhMTZiZTc4MDhlNDI1YzQwZDM",
        "commit": {
          "author": {
            "name": "Dmitry Chuyko",
            "email": "dchuyko@openjdk.org",
            "date": "2022-09-12T22:20:29Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-12T22:20:29Z"
          },
          "message": "8287349: AArch64: Merge LDR instructions to improve C1 OSR performance\n\nReviewed-by: aph\nBackport-of: 08400f18badb23ea3d00282e8b71e76844398a67",
          "tree": {
            "sha": "918459ffc0bef3bb368ab019b9754de218105e0a",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/918459ffc0bef3bb368ab019b9754de218105e0a"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/02fa3639327ddea13bd399a16be7808e425c40d3",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/02fa3639327ddea13bd399a16be7808e425c40d3",
        "html_url": "https://github.com/adoptium/jdk17u/commit/02fa3639327ddea13bd399a16be7808e425c40d3",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/02fa3639327ddea13bd399a16be7808e425c40d3/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "f0acd72f2de73ba341998bf19b61af2a1656541c",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/f0acd72f2de73ba341998bf19b61af2a1656541c",
            "html_url": "https://github.com/adoptium/jdk17u/commit/f0acd72f2de73ba341998bf19b61af2a1656541c"
          }
        ]
      },
      {
        "sha": "36dd0a71b79a327f8df386b9618589c105a546cd",
        "node_id": "C_kwDOF886Z9oAKDM2ZGQwYTcxYjc5YTMyN2Y4ZGYzODZiOTYxODU4OWMxMDVhNTQ2Y2Q",
        "commit": {
          "author": {
            "name": "Boris Ulasevich",
            "email": "bulasevich@openjdk.org",
            "date": "2022-09-13T14:33:11Z"
          },
          "committer": {
            "name": "Dmitry Samersoff",
            "email": "dsamersoff@openjdk.org",
            "date": "2022-09-13T14:33:11Z"
          },
          "message": "8270848: Redundant unsafe opmask register allocation in some instruction patterns.\n\nReviewed-by: phh, dsamersoff\nBackport-of: 71ca0c08f09e87673f1cf3f918a0802961359166",
          "tree": {
            "sha": "11d93c161a4386a5a4a34f3f4ccd936a00f06e41",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/11d93c161a4386a5a4a34f3f4ccd936a00f06e41"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/36dd0a71b79a327f8df386b9618589c105a546cd",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/36dd0a71b79a327f8df386b9618589c105a546cd",
        "html_url": "https://github.com/adoptium/jdk17u/commit/36dd0a71b79a327f8df386b9618589c105a546cd",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/36dd0a71b79a327f8df386b9618589c105a546cd/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "02fa3639327ddea13bd399a16be7808e425c40d3",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/02fa3639327ddea13bd399a16be7808e425c40d3",
            "html_url": "https://github.com/adoptium/jdk17u/commit/02fa3639327ddea13bd399a16be7808e425c40d3"
          }
        ]
      },
      {
        "sha": "486cffeab4b52f942c596e7d2bb942152275b2ef",
        "node_id": "C_kwDOF886Z9oAKDQ4NmNmZmVhYjRiNTJmOTQyYzU5NmU3ZDJiYjk0MjE1MjI3NWIyZWY",
        "commit": {
          "author": {
            "name": "Boris Ulasevich",
            "email": "bulasevich@openjdk.org",
            "date": "2022-09-13T14:34:31Z"
          },
          "committer": {
            "name": "Dmitry Samersoff",
            "email": "dsamersoff@openjdk.org",
            "date": "2022-09-13T14:34:31Z"
          },
          "message": "8282347: AARCH64: Untaken branch in has_negatives stub\n\nReviewed-by: phh, dsamersoff\nBackport-of: 3efd6aa4c9b6420520709281ab1ca46ba4242c87",
          "tree": {
            "sha": "39918f389ff462a2ae1f1af4f807da7c34be7e79",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/39918f389ff462a2ae1f1af4f807da7c34be7e79"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/486cffeab4b52f942c596e7d2bb942152275b2ef",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/486cffeab4b52f942c596e7d2bb942152275b2ef",
        "html_url": "https://github.com/adoptium/jdk17u/commit/486cffeab4b52f942c596e7d2bb942152275b2ef",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/486cffeab4b52f942c596e7d2bb942152275b2ef/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "36dd0a71b79a327f8df386b9618589c105a546cd",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/36dd0a71b79a327f8df386b9618589c105a546cd",
            "html_url": "https://github.com/adoptium/jdk17u/commit/36dd0a71b79a327f8df386b9618589c105a546cd"
          }
        ]
      },
      {
        "sha": "061ddcabbcc8518e99fe054584d267e42bfabd96",
        "node_id": "C_kwDOF886Z9oAKDA2MWRkY2FiYmNjODUxOGU5OWZlMDU0NTg0ZDI2N2U0MmJmYWJkOTY",
        "commit": {
          "author": {
            "name": "Boris Ulasevich",
            "email": "bulasevich@openjdk.org",
            "date": "2022-09-13T14:35:43Z"
          },
          "committer": {
            "name": "Dmitry Samersoff",
            "email": "dsamersoff@openjdk.org",
            "date": "2022-09-13T14:35:43Z"
          },
          "message": "8280124: Reduce branches decoding latin-1 chars from UTF-8 encoded bytes\n\nReviewed-by: phh, dsamersoff\nBackport-of: e314a4cfda30cc680b3f0aef8c62b75ff81bdbb1",
          "tree": {
            "sha": "379291cca667060fde25a0c8b079ae5909eba902",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/379291cca667060fde25a0c8b079ae5909eba902"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/061ddcabbcc8518e99fe054584d267e42bfabd96",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/061ddcabbcc8518e99fe054584d267e42bfabd96",
        "html_url": "https://github.com/adoptium/jdk17u/commit/061ddcabbcc8518e99fe054584d267e42bfabd96",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/061ddcabbcc8518e99fe054584d267e42bfabd96/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "486cffeab4b52f942c596e7d2bb942152275b2ef",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/486cffeab4b52f942c596e7d2bb942152275b2ef",
            "html_url": "https://github.com/adoptium/jdk17u/commit/486cffeab4b52f942c596e7d2bb942152275b2ef"
          }
        ]
      },
      {
        "sha": "b196bc4c7f5af16266b6af57f4c972b5a4227a60",
        "node_id": "C_kwDOF886Z9oAKGIxOTZiYzRjN2Y1YWYxNjI2NmI2YWY1N2Y0Yzk3MmI1YTQyMjdhNjA",
        "commit": {
          "author": {
            "name": "Dmitry Chuyko",
            "email": "dchuyko@openjdk.org",
            "date": "2022-09-13T16:55:27Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-13T16:55:27Z"
          },
          "message": "8277411: C2 fast_unlock intrinsic on AArch64 has unnecessary ownership check\n\nBackport-of: 3d810ad6912b7bca03e212b604cf60412da11c18",
          "tree": {
            "sha": "e629060594d8993c98e2906d7e5f426aa0c58436",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/e629060594d8993c98e2906d7e5f426aa0c58436"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/b196bc4c7f5af16266b6af57f4c972b5a4227a60",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b196bc4c7f5af16266b6af57f4c972b5a4227a60",
        "html_url": "https://github.com/adoptium/jdk17u/commit/b196bc4c7f5af16266b6af57f4c972b5a4227a60",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/b196bc4c7f5af16266b6af57f4c972b5a4227a60/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "061ddcabbcc8518e99fe054584d267e42bfabd96",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/061ddcabbcc8518e99fe054584d267e42bfabd96",
            "html_url": "https://github.com/adoptium/jdk17u/commit/061ddcabbcc8518e99fe054584d267e42bfabd96"
          }
        ]
      },
      {
        "sha": "a18e936beef85ad2602f70cef4c2bef216099f56",
        "node_id": "C_kwDOF886Z9oAKGExOGU5MzZiZWVmODVhZDI2MDJmNzBjZWY0YzJiZWYyMTYwOTlmNTY",
        "commit": {
          "author": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-14T21:12:13Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-14T21:12:13Z"
          },
          "message": "8274563: jfr/event/oldobject/TestClassLoaderLeak.java fails when GC cycles are not happening\n\nBackport-of: 47bfc8aa9367ff852ea5d901f1fa3c6ef316913e",
          "tree": {
            "sha": "63695499e870b9edaecf3fd888c1f21396993986",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/63695499e870b9edaecf3fd888c1f21396993986"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/a18e936beef85ad2602f70cef4c2bef216099f56",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a18e936beef85ad2602f70cef4c2bef216099f56",
        "html_url": "https://github.com/adoptium/jdk17u/commit/a18e936beef85ad2602f70cef4c2bef216099f56",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/a18e936beef85ad2602f70cef4c2bef216099f56/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "b196bc4c7f5af16266b6af57f4c972b5a4227a60",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b196bc4c7f5af16266b6af57f4c972b5a4227a60",
            "html_url": "https://github.com/adoptium/jdk17u/commit/b196bc4c7f5af16266b6af57f4c972b5a4227a60"
          }
        ]
      },
      {
        "sha": "6f6b0722d7288b6fcaf30be44e8824b6a4889fef",
        "node_id": "C_kwDOF886Z9oAKDZmNmIwNzIyZDcyODhiNmZjYWYzMGJlNDRlODgyNGI2YTQ4ODlmZWY",
        "commit": {
          "author": {
            "name": "Alexey Pavlyutkin",
            "email": "apavlyutkin@azul.com",
            "date": "2022-09-15T10:03:46Z"
          },
          "committer": {
            "name": "Yuri Nesterenko",
            "email": "yan@openjdk.org",
            "date": "2022-09-15T10:03:46Z"
          },
          "message": "8272776: NullPointerException not reported\n\nBackport-of: 93eec9a103de7f4d9a87eac5b295c9a50702ee94",
          "tree": {
            "sha": "337e918b6ee60daee13c7ec19a9715d05eef77dd",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/337e918b6ee60daee13c7ec19a9715d05eef77dd"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/6f6b0722d7288b6fcaf30be44e8824b6a4889fef",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6f6b0722d7288b6fcaf30be44e8824b6a4889fef",
        "html_url": "https://github.com/adoptium/jdk17u/commit/6f6b0722d7288b6fcaf30be44e8824b6a4889fef",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/6f6b0722d7288b6fcaf30be44e8824b6a4889fef/comments",
        "author": {
          "login": "apavlyutkin",
          "id": 92360856,
          "node_id": "U_kgDOBYFQmA",
          "avatar_url": "https://avatars.githubusercontent.com/u/92360856?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/apavlyutkin",
          "html_url": "https://github.com/apavlyutkin",
          "followers_url": "https://api.github.com/users/apavlyutkin/followers",
          "following_url": "https://api.github.com/users/apavlyutkin/following{/other_user}",
          "gists_url": "https://api.github.com/users/apavlyutkin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/apavlyutkin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/apavlyutkin/subscriptions",
          "organizations_url": "https://api.github.com/users/apavlyutkin/orgs",
          "repos_url": "https://api.github.com/users/apavlyutkin/repos",
          "events_url": "https://api.github.com/users/apavlyutkin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/apavlyutkin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": null,
        "parents": [
          {
            "sha": "a18e936beef85ad2602f70cef4c2bef216099f56",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a18e936beef85ad2602f70cef4c2bef216099f56",
            "html_url": "https://github.com/adoptium/jdk17u/commit/a18e936beef85ad2602f70cef4c2bef216099f56"
          }
        ]
      },
      {
        "sha": "46f94adbef1fb57538211cc8eddf701a25ea4543",
        "node_id": "C_kwDOF886Z9oAKDQ2Zjk0YWRiZWYxZmI1NzUzODIxMWNjOGVkZGY3MDFhMjVlYTQ1NDM",
        "commit": {
          "author": {
            "name": "Dmitry Chuyko",
            "email": "dchuyko@openjdk.org",
            "date": "2022-09-15T15:07:32Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-15T15:07:32Z"
          },
          "message": "8282049: AArch64: Use ZR for integer zero immediate volatile stores\n\nBackport-of: 413bef6890e9ba820590aa48017c4c7b1d691d24",
          "tree": {
            "sha": "457b2e194e7fac8e191207e8681dc12c6b387f8c",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/457b2e194e7fac8e191207e8681dc12c6b387f8c"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/46f94adbef1fb57538211cc8eddf701a25ea4543",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/46f94adbef1fb57538211cc8eddf701a25ea4543",
        "html_url": "https://github.com/adoptium/jdk17u/commit/46f94adbef1fb57538211cc8eddf701a25ea4543",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/46f94adbef1fb57538211cc8eddf701a25ea4543/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "6f6b0722d7288b6fcaf30be44e8824b6a4889fef",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6f6b0722d7288b6fcaf30be44e8824b6a4889fef",
            "html_url": "https://github.com/adoptium/jdk17u/commit/6f6b0722d7288b6fcaf30be44e8824b6a4889fef"
          }
        ]
      },
      {
        "sha": "1e209d7dc03010be43012ad0688c0819284507fc",
        "node_id": "C_kwDOF886Z9oAKDFlMjA5ZDdkYzAzMDEwYmU0MzAxMmFkMDY4OGMwODE5Mjg0NTA3ZmM",
        "commit": {
          "author": {
            "name": "Martin Balao",
            "email": "mbalao@openjdk.org",
            "date": "2022-09-15T20:27:41Z"
          },
          "committer": {
            "name": "Martin Balao",
            "email": "mbalao@openjdk.org",
            "date": "2022-09-15T20:27:41Z"
          },
          "message": "8276108: Wrong instruction generation in aarch64 backend\n\nBackport-of: 72bacf8d256071773d8fd9f9c2d0aebb2cb32dea",
          "tree": {
            "sha": "739be3b57fbb0f7b47df4d0e0f7e1bbddcdba904",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/739be3b57fbb0f7b47df4d0e0f7e1bbddcdba904"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/1e209d7dc03010be43012ad0688c0819284507fc",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/1e209d7dc03010be43012ad0688c0819284507fc",
        "html_url": "https://github.com/adoptium/jdk17u/commit/1e209d7dc03010be43012ad0688c0819284507fc",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/1e209d7dc03010be43012ad0688c0819284507fc/comments",
        "author": {
          "login": "martinuy",
          "id": 22035856,
          "node_id": "MDQ6VXNlcjIyMDM1ODU2",
          "avatar_url": "https://avatars.githubusercontent.com/u/22035856?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/martinuy",
          "html_url": "https://github.com/martinuy",
          "followers_url": "https://api.github.com/users/martinuy/followers",
          "following_url": "https://api.github.com/users/martinuy/following{/other_user}",
          "gists_url": "https://api.github.com/users/martinuy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/martinuy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/martinuy/subscriptions",
          "organizations_url": "https://api.github.com/users/martinuy/orgs",
          "repos_url": "https://api.github.com/users/martinuy/repos",
          "events_url": "https://api.github.com/users/martinuy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/martinuy/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "martinuy",
          "id": 22035856,
          "node_id": "MDQ6VXNlcjIyMDM1ODU2",
          "avatar_url": "https://avatars.githubusercontent.com/u/22035856?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/martinuy",
          "html_url": "https://github.com/martinuy",
          "followers_url": "https://api.github.com/users/martinuy/followers",
          "following_url": "https://api.github.com/users/martinuy/following{/other_user}",
          "gists_url": "https://api.github.com/users/martinuy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/martinuy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/martinuy/subscriptions",
          "organizations_url": "https://api.github.com/users/martinuy/orgs",
          "repos_url": "https://api.github.com/users/martinuy/repos",
          "events_url": "https://api.github.com/users/martinuy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/martinuy/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "46f94adbef1fb57538211cc8eddf701a25ea4543",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/46f94adbef1fb57538211cc8eddf701a25ea4543",
            "html_url": "https://github.com/adoptium/jdk17u/commit/46f94adbef1fb57538211cc8eddf701a25ea4543"
          }
        ]
      },
      {
        "sha": "a800fe4286e2123447861c2c40b8ad12bab247ca",
        "node_id": "C_kwDOF886Z9oAKGE4MDBmZTQyODZlMjEyMzQ0Nzg2MWMyYzQwYjhhZDEyYmFiMjQ3Y2E",
        "commit": {
          "author": {
            "name": "Martin Balao",
            "email": "mbalao@openjdk.org",
            "date": "2022-09-15T21:27:27Z"
          },
          "committer": {
            "name": "Martin Balao",
            "email": "mbalao@openjdk.org",
            "date": "2022-09-15T21:27:27Z"
          },
          "message": "8277928: Fix compilation on macosx-aarch64 after 8276108\n\nBackport-of: 2622ab3fe94814fb4f7f22e4015ef1519e546905",
          "tree": {
            "sha": "1d34ac4bd9d808f4535249c5bd7335f55b4c4b87",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/1d34ac4bd9d808f4535249c5bd7335f55b4c4b87"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/a800fe4286e2123447861c2c40b8ad12bab247ca",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a800fe4286e2123447861c2c40b8ad12bab247ca",
        "html_url": "https://github.com/adoptium/jdk17u/commit/a800fe4286e2123447861c2c40b8ad12bab247ca",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/a800fe4286e2123447861c2c40b8ad12bab247ca/comments",
        "author": {
          "login": "martinuy",
          "id": 22035856,
          "node_id": "MDQ6VXNlcjIyMDM1ODU2",
          "avatar_url": "https://avatars.githubusercontent.com/u/22035856?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/martinuy",
          "html_url": "https://github.com/martinuy",
          "followers_url": "https://api.github.com/users/martinuy/followers",
          "following_url": "https://api.github.com/users/martinuy/following{/other_user}",
          "gists_url": "https://api.github.com/users/martinuy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/martinuy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/martinuy/subscriptions",
          "organizations_url": "https://api.github.com/users/martinuy/orgs",
          "repos_url": "https://api.github.com/users/martinuy/repos",
          "events_url": "https://api.github.com/users/martinuy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/martinuy/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "martinuy",
          "id": 22035856,
          "node_id": "MDQ6VXNlcjIyMDM1ODU2",
          "avatar_url": "https://avatars.githubusercontent.com/u/22035856?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/martinuy",
          "html_url": "https://github.com/martinuy",
          "followers_url": "https://api.github.com/users/martinuy/followers",
          "following_url": "https://api.github.com/users/martinuy/following{/other_user}",
          "gists_url": "https://api.github.com/users/martinuy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/martinuy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/martinuy/subscriptions",
          "organizations_url": "https://api.github.com/users/martinuy/orgs",
          "repos_url": "https://api.github.com/users/martinuy/repos",
          "events_url": "https://api.github.com/users/martinuy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/martinuy/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "1e209d7dc03010be43012ad0688c0819284507fc",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/1e209d7dc03010be43012ad0688c0819284507fc",
            "html_url": "https://github.com/adoptium/jdk17u/commit/1e209d7dc03010be43012ad0688c0819284507fc"
          }
        ]
      },
      {
        "sha": "fe980c2e01493af5e40580b8568d9d12912fbde5",
        "node_id": "C_kwDOF886Z9oAKGZlOTgwYzJlMDE0OTNhZjVlNDA1ODBiODU2OGQ5ZDEyOTEyZmJkZTU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:41:33Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:41:33Z"
          },
          "message": "8290207: Missing notice in dom.md\n\nBackport-of: 73b83e018838d3870733970b2bb22a8394b53330",
          "tree": {
            "sha": "5bd4fb30d360beed8873668d28a70a992ea2b295",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/5bd4fb30d360beed8873668d28a70a992ea2b295"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/fe980c2e01493af5e40580b8568d9d12912fbde5",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/fe980c2e01493af5e40580b8568d9d12912fbde5",
        "html_url": "https://github.com/adoptium/jdk17u/commit/fe980c2e01493af5e40580b8568d9d12912fbde5",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/fe980c2e01493af5e40580b8568d9d12912fbde5/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "a800fe4286e2123447861c2c40b8ad12bab247ca",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a800fe4286e2123447861c2c40b8ad12bab247ca",
            "html_url": "https://github.com/adoptium/jdk17u/commit/a800fe4286e2123447861c2c40b8ad12bab247ca"
          }
        ]
      },
      {
        "sha": "160dac0587ad2ee0de1c9268583ae49097f51c7c",
        "node_id": "C_kwDOF886Z9oAKDE2MGRhYzA1ODdhZDJlZTBkZTFjOTI2ODU4M2FlNDkwOTdmNTFjN2M",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:45:56Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:45:56Z"
          },
          "message": "8290209: jcup.md missing additional text\n\nBackport-of: 2bf6285c80f078d8451afb5682ee307bb13be179",
          "tree": {
            "sha": "b0cf128330a9008fd9d4a9a95c18e27af5976013",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/b0cf128330a9008fd9d4a9a95c18e27af5976013"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/160dac0587ad2ee0de1c9268583ae49097f51c7c",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/160dac0587ad2ee0de1c9268583ae49097f51c7c",
        "html_url": "https://github.com/adoptium/jdk17u/commit/160dac0587ad2ee0de1c9268583ae49097f51c7c",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/160dac0587ad2ee0de1c9268583ae49097f51c7c/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "fe980c2e01493af5e40580b8568d9d12912fbde5",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/fe980c2e01493af5e40580b8568d9d12912fbde5",
            "html_url": "https://github.com/adoptium/jdk17u/commit/fe980c2e01493af5e40580b8568d9d12912fbde5"
          }
        ]
      },
      {
        "sha": "2434530e5ee4263cf92b5b55812140fc0b7f751e",
        "node_id": "C_kwDOF886Z9oAKDI0MzQ1MzBlNWVlNDI2M2NmOTJiNWI1NTgxMjE0MGZjMGI3Zjc1MWU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:48:51Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:48:51Z"
          },
          "message": "8277576: ProblemList runtime/ErrorHandling/CreateCoredumpOnCrash.java on macosx-X64\n8277577: ProblemList compiler/onSpinWait/TestOnSpinWaitAArch64DefaultFlags.java on linux-aarch64\n8277578: ProblemList applications/jcstress/acqrel.java on linux-aarch64\n\nBackport-of: 1049aba1fb65fd70bd723c80a84250512a68d653",
          "tree": {
            "sha": "fd69e95df3ed4f442acbd49a98542b320b50574b",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/fd69e95df3ed4f442acbd49a98542b320b50574b"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/2434530e5ee4263cf92b5b55812140fc0b7f751e",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/2434530e5ee4263cf92b5b55812140fc0b7f751e",
        "html_url": "https://github.com/adoptium/jdk17u/commit/2434530e5ee4263cf92b5b55812140fc0b7f751e",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/2434530e5ee4263cf92b5b55812140fc0b7f751e/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "160dac0587ad2ee0de1c9268583ae49097f51c7c",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/160dac0587ad2ee0de1c9268583ae49097f51c7c",
            "html_url": "https://github.com/adoptium/jdk17u/commit/160dac0587ad2ee0de1c9268583ae49097f51c7c"
          }
        ]
      },
      {
        "sha": "eb1c5cb97af227e1a6dcfe7e41845a56066f6999",
        "node_id": "C_kwDOF886Z9oAKGViMWM1Y2I5N2FmMjI3ZTFhNmRjZmU3ZTQxODQ1YTU2MDY2ZjY5OTk",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:51:17Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:51:17Z"
          },
          "message": "8269029: compiler/codegen/TestCharVect2.java fails for client VMs\n\nBackport-of: cbec37d45d77533081c27b3fc649098dfcca0425",
          "tree": {
            "sha": "5f6556f99e1073b56564a4ca79bf9ffa1f23f1b2",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/5f6556f99e1073b56564a4ca79bf9ffa1f23f1b2"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/eb1c5cb97af227e1a6dcfe7e41845a56066f6999",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/eb1c5cb97af227e1a6dcfe7e41845a56066f6999",
        "html_url": "https://github.com/adoptium/jdk17u/commit/eb1c5cb97af227e1a6dcfe7e41845a56066f6999",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/eb1c5cb97af227e1a6dcfe7e41845a56066f6999/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "2434530e5ee4263cf92b5b55812140fc0b7f751e",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/2434530e5ee4263cf92b5b55812140fc0b7f751e",
            "html_url": "https://github.com/adoptium/jdk17u/commit/2434530e5ee4263cf92b5b55812140fc0b7f751e"
          }
        ]
      },
      {
        "sha": "ed29cbb0a4b40490338eacb1504fef788ef4e748",
        "node_id": "C_kwDOF886Z9oAKGVkMjljYmIwYTRiNDA0OTAzMzhlYWNiMTUwNGZlZjc4OGVmNGU3NDg",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:54:23Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T06:54:23Z"
          },
          "message": "8271015: Split cds/SharedBaseAddress.java test into smaller parts\n\nBackport-of: 0790f04d8a41aa61b4633e822120d913ec89d900",
          "tree": {
            "sha": "6d60328f0e29801f17f7ff848b4d8bd3a1bd4a2f",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/6d60328f0e29801f17f7ff848b4d8bd3a1bd4a2f"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/ed29cbb0a4b40490338eacb1504fef788ef4e748",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ed29cbb0a4b40490338eacb1504fef788ef4e748",
        "html_url": "https://github.com/adoptium/jdk17u/commit/ed29cbb0a4b40490338eacb1504fef788ef4e748",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/ed29cbb0a4b40490338eacb1504fef788ef4e748/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "eb1c5cb97af227e1a6dcfe7e41845a56066f6999",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/eb1c5cb97af227e1a6dcfe7e41845a56066f6999",
            "html_url": "https://github.com/adoptium/jdk17u/commit/eb1c5cb97af227e1a6dcfe7e41845a56066f6999"
          }
        ]
      },
      {
        "sha": "fec638f382cae99e06e01715627023a8b4869d16",
        "node_id": "C_kwDOF886Z9oAKGZlYzYzOGYzODJjYWU5OWUwNmUwMTcxNTYyNzAyM2E4YjQ4NjlkMTY",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:09:37Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:09:37Z"
          },
          "message": "7188098: TEST_BUG: closed/javax/sound/midi/Synthesizer/Receiver/bug6186488.java fails\n\nBackport-of: c640fe42c2b5e6668a2a875678be44443942c868",
          "tree": {
            "sha": "cf14dcc4a0b9ea0b400bb98124b8aa3eb863a2ed",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/cf14dcc4a0b9ea0b400bb98124b8aa3eb863a2ed"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/fec638f382cae99e06e01715627023a8b4869d16",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/fec638f382cae99e06e01715627023a8b4869d16",
        "html_url": "https://github.com/adoptium/jdk17u/commit/fec638f382cae99e06e01715627023a8b4869d16",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/fec638f382cae99e06e01715627023a8b4869d16/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "ed29cbb0a4b40490338eacb1504fef788ef4e748",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ed29cbb0a4b40490338eacb1504fef788ef4e748",
            "html_url": "https://github.com/adoptium/jdk17u/commit/ed29cbb0a4b40490338eacb1504fef788ef4e748"
          }
        ]
      },
      {
        "sha": "28df1d94e6ad5eaf37d5d279b07c40603e52dfc8",
        "node_id": "C_kwDOF886Z9oAKDI4ZGYxZDk0ZTZhZDVlYWYzN2Q1ZDI3OWIwN2M0MDYwM2U1MmRmYzg",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:11:02Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:11:02Z"
          },
          "message": "8273043: [TEST_BUG] Automate NimbusJTreeSelTextColor.java\n\nBackport-of: 270a9d929307dce52e6961e57492c03a633ed044",
          "tree": {
            "sha": "86935f3bff86a9539cd3a9cbc2998bec7c0ca693",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/86935f3bff86a9539cd3a9cbc2998bec7c0ca693"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/28df1d94e6ad5eaf37d5d279b07c40603e52dfc8",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/28df1d94e6ad5eaf37d5d279b07c40603e52dfc8",
        "html_url": "https://github.com/adoptium/jdk17u/commit/28df1d94e6ad5eaf37d5d279b07c40603e52dfc8",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/28df1d94e6ad5eaf37d5d279b07c40603e52dfc8/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "fec638f382cae99e06e01715627023a8b4869d16",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/fec638f382cae99e06e01715627023a8b4869d16",
            "html_url": "https://github.com/adoptium/jdk17u/commit/fec638f382cae99e06e01715627023a8b4869d16"
          }
        ]
      },
      {
        "sha": "baf3b5c33eed9fcdb648df6322a62fefa09ce2d6",
        "node_id": "C_kwDOF886Z9oAKGJhZjNiNWMzM2VlZDlmY2RiNjQ4ZGY2MzIyYTYyZmVmYTA5Y2UyZDY",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:13:34Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:13:34Z"
          },
          "message": "8270609: [TESTBUG] java/awt/print/Dialog/DialogCopies.java does not show instruction\n\nBackport-of: 4da45c430139fe66fab020c2f96686dc9cf26a97",
          "tree": {
            "sha": "a7f4e815370c3b01f6ba83202a1e4e1a00eed532",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/a7f4e815370c3b01f6ba83202a1e4e1a00eed532"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/baf3b5c33eed9fcdb648df6322a62fefa09ce2d6",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/baf3b5c33eed9fcdb648df6322a62fefa09ce2d6",
        "html_url": "https://github.com/adoptium/jdk17u/commit/baf3b5c33eed9fcdb648df6322a62fefa09ce2d6",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/baf3b5c33eed9fcdb648df6322a62fefa09ce2d6/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "28df1d94e6ad5eaf37d5d279b07c40603e52dfc8",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/28df1d94e6ad5eaf37d5d279b07c40603e52dfc8",
            "html_url": "https://github.com/adoptium/jdk17u/commit/28df1d94e6ad5eaf37d5d279b07c40603e52dfc8"
          }
        ]
      },
      {
        "sha": "c5a9e68a0fd0d1c97064791f8fcc49606efbee54",
        "node_id": "C_kwDOF886Z9oAKGM1YTllNjhhMGZkMGQxYzk3MDY0NzkxZjhmY2M0OTYwNmVmYmVlNTQ",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:17:04Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:17:04Z"
          },
          "message": "8274032: Remove jtreg tag manual=yesno for java/awt/print/PrinterJob/ImagePrinting/ImageTypes.java & show test UI\n\nBackport-of: 7dc2db4aacfeea0caffcc76fd352eabf64ee34c4",
          "tree": {
            "sha": "e700e05c3dcf77775ea8370da9f6111f0e16845a",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/e700e05c3dcf77775ea8370da9f6111f0e16845a"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/c5a9e68a0fd0d1c97064791f8fcc49606efbee54",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/c5a9e68a0fd0d1c97064791f8fcc49606efbee54",
        "html_url": "https://github.com/adoptium/jdk17u/commit/c5a9e68a0fd0d1c97064791f8fcc49606efbee54",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/c5a9e68a0fd0d1c97064791f8fcc49606efbee54/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "baf3b5c33eed9fcdb648df6322a62fefa09ce2d6",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/baf3b5c33eed9fcdb648df6322a62fefa09ce2d6",
            "html_url": "https://github.com/adoptium/jdk17u/commit/baf3b5c33eed9fcdb648df6322a62fefa09ce2d6"
          }
        ]
      },
      {
        "sha": "02414956feaa80a51c5672c7c2eddfe161bce029",
        "node_id": "C_kwDOF886Z9oAKDAyNDE0OTU2ZmVhYTgwYTUxYzU2NzJjN2MyZWRkZmUxNjFiY2UwMjk",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:18:51Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-16T07:18:51Z"
          },
          "message": "8274160: java/awt/Window/ShapedAndTranslucentWindows/Common.java delay is too high\n\nBackport-of: 895e2bd7c0bded5283eca8792fbfb287bb75016b",
          "tree": {
            "sha": "453810e2f6623eb685060885d725591b0207d7ef",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/453810e2f6623eb685060885d725591b0207d7ef"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/02414956feaa80a51c5672c7c2eddfe161bce029",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/02414956feaa80a51c5672c7c2eddfe161bce029",
        "html_url": "https://github.com/adoptium/jdk17u/commit/02414956feaa80a51c5672c7c2eddfe161bce029",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/02414956feaa80a51c5672c7c2eddfe161bce029/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "c5a9e68a0fd0d1c97064791f8fcc49606efbee54",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/c5a9e68a0fd0d1c97064791f8fcc49606efbee54",
            "html_url": "https://github.com/adoptium/jdk17u/commit/c5a9e68a0fd0d1c97064791f8fcc49606efbee54"
          }
        ]
      },
      {
        "sha": "ba6898b9891715898d1abcf50ee0f5e339c020a9",
        "node_id": "C_kwDOF886Z9oAKGJhNjg5OGI5ODkxNzE1ODk4ZDFhYmNmNTBlZTBmNWUzMzljMDIwYTk",
        "commit": {
          "author": {
            "name": "Alexey Pavlyutkin",
            "email": "apavlyutkin@azul.com",
            "date": "2022-09-19T12:43:40Z"
          },
          "committer": {
            "name": "Yuri Nesterenko",
            "email": "yan@openjdk.org",
            "date": "2022-09-19T12:43:40Z"
          },
          "message": "8266082: AssertionError in Annotate.fromAnnotations with -Xdoclint\n\nBackport-of: 0b8a0e2b58dbdd5c9553e502212d32c033a5efb5",
          "tree": {
            "sha": "9bb7bef0698b4ba30fb52494c2f990e4c77665f3",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/9bb7bef0698b4ba30fb52494c2f990e4c77665f3"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/ba6898b9891715898d1abcf50ee0f5e339c020a9",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ba6898b9891715898d1abcf50ee0f5e339c020a9",
        "html_url": "https://github.com/adoptium/jdk17u/commit/ba6898b9891715898d1abcf50ee0f5e339c020a9",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/ba6898b9891715898d1abcf50ee0f5e339c020a9/comments",
        "author": {
          "login": "apavlyutkin",
          "id": 92360856,
          "node_id": "U_kgDOBYFQmA",
          "avatar_url": "https://avatars.githubusercontent.com/u/92360856?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/apavlyutkin",
          "html_url": "https://github.com/apavlyutkin",
          "followers_url": "https://api.github.com/users/apavlyutkin/followers",
          "following_url": "https://api.github.com/users/apavlyutkin/following{/other_user}",
          "gists_url": "https://api.github.com/users/apavlyutkin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/apavlyutkin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/apavlyutkin/subscriptions",
          "organizations_url": "https://api.github.com/users/apavlyutkin/orgs",
          "repos_url": "https://api.github.com/users/apavlyutkin/repos",
          "events_url": "https://api.github.com/users/apavlyutkin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/apavlyutkin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": null,
        "parents": [
          {
            "sha": "02414956feaa80a51c5672c7c2eddfe161bce029",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/02414956feaa80a51c5672c7c2eddfe161bce029",
            "html_url": "https://github.com/adoptium/jdk17u/commit/02414956feaa80a51c5672c7c2eddfe161bce029"
          }
        ]
      },
      {
        "sha": "6089db0768a165c46bb4cc14a406030bdf728e5b",
        "node_id": "C_kwDOF886Z9oAKDYwODlkYjA3NjhhMTY1YzQ2YmI0Y2MxNGE0MDYwMzBiZGY3MjhlNWI",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:11:51Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:11:51Z"
          },
          "message": "8273881: Metaspace: test repeated deallocations\n\nBackport-of: 83c37719290039672cf261701028c8eb044a2e77",
          "tree": {
            "sha": "b3509e2b6d73fea0ad9885165b25546cbfeb3a84",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/b3509e2b6d73fea0ad9885165b25546cbfeb3a84"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/6089db0768a165c46bb4cc14a406030bdf728e5b",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6089db0768a165c46bb4cc14a406030bdf728e5b",
        "html_url": "https://github.com/adoptium/jdk17u/commit/6089db0768a165c46bb4cc14a406030bdf728e5b",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/6089db0768a165c46bb4cc14a406030bdf728e5b/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "ba6898b9891715898d1abcf50ee0f5e339c020a9",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ba6898b9891715898d1abcf50ee0f5e339c020a9",
            "html_url": "https://github.com/adoptium/jdk17u/commit/ba6898b9891715898d1abcf50ee0f5e339c020a9"
          }
        ]
      },
      {
        "sha": "e78a58f725dd2679e532cc04daf8988b2a8cc705",
        "node_id": "C_kwDOF886Z9oAKGU3OGE1OGY3MjVkZDI2NzllNTMyY2MwNGRhZjg5ODhiMmE4Y2M3MDU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:15:02Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:15:02Z"
          },
          "message": "8233558: [TESTBUG] WindowOwnedByEmbeddedFrameTest.java fails on macos\n\nBackport-of: d1e3ca4ee35bf4c2ce9b6dae2518f533f36a98dd",
          "tree": {
            "sha": "3a35a252dad955b9c6fa282a415dcf0acb0b0578",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/3a35a252dad955b9c6fa282a415dcf0acb0b0578"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/e78a58f725dd2679e532cc04daf8988b2a8cc705",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/e78a58f725dd2679e532cc04daf8988b2a8cc705",
        "html_url": "https://github.com/adoptium/jdk17u/commit/e78a58f725dd2679e532cc04daf8988b2a8cc705",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/e78a58f725dd2679e532cc04daf8988b2a8cc705/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "6089db0768a165c46bb4cc14a406030bdf728e5b",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6089db0768a165c46bb4cc14a406030bdf728e5b",
            "html_url": "https://github.com/adoptium/jdk17u/commit/6089db0768a165c46bb4cc14a406030bdf728e5b"
          }
        ]
      },
      {
        "sha": "a5dceb743971e4343b7cb78526da4609ac60592f",
        "node_id": "C_kwDOF886Z9oAKGE1ZGNlYjc0Mzk3MWU0MzQzYjdjYjc4NTI2ZGE0NjA5YWM2MDU5MmY",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:17:03Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:17:03Z"
          },
          "message": "8268779: ZGC: runtime/InternalApi/ThreadCpuTimesDeadlock.java#id1 failed with \"OutOfMemoryError: Java heap space\"\n\nBackport-of: a6fa6ed1edc6f473a7fea1fa00edd467ab778983",
          "tree": {
            "sha": "0b8fb29143d1736f367d54cf0d2b5d3515356ac5",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/0b8fb29143d1736f367d54cf0d2b5d3515356ac5"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/a5dceb743971e4343b7cb78526da4609ac60592f",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a5dceb743971e4343b7cb78526da4609ac60592f",
        "html_url": "https://github.com/adoptium/jdk17u/commit/a5dceb743971e4343b7cb78526da4609ac60592f",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/a5dceb743971e4343b7cb78526da4609ac60592f/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "e78a58f725dd2679e532cc04daf8988b2a8cc705",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/e78a58f725dd2679e532cc04daf8988b2a8cc705",
            "html_url": "https://github.com/adoptium/jdk17u/commit/e78a58f725dd2679e532cc04daf8988b2a8cc705"
          }
        ]
      },
      {
        "sha": "2e5287ba931d624e2dcd4835dc1bc9773fba6799",
        "node_id": "C_kwDOF886Z9oAKDJlNTI4N2JhOTMxZDYyNGUyZGNkNDgzNWRjMWJjOTc3M2ZiYTY3OTk",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:22:40Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:22:40Z"
          },
          "message": "8277092: TestMetaspaceAllocationMT2.java#ndebug-default fails with \"RuntimeException: Committed seems high: NNNN expected at most MMMM\"\n\nBackport-of: a3406a1d8ab4228b06b4f2978f87275093c39468",
          "tree": {
            "sha": "d4b7293916707e94e74ffa205cadb60c99985418",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/d4b7293916707e94e74ffa205cadb60c99985418"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/2e5287ba931d624e2dcd4835dc1bc9773fba6799",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/2e5287ba931d624e2dcd4835dc1bc9773fba6799",
        "html_url": "https://github.com/adoptium/jdk17u/commit/2e5287ba931d624e2dcd4835dc1bc9773fba6799",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/2e5287ba931d624e2dcd4835dc1bc9773fba6799/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "a5dceb743971e4343b7cb78526da4609ac60592f",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a5dceb743971e4343b7cb78526da4609ac60592f",
            "html_url": "https://github.com/adoptium/jdk17u/commit/a5dceb743971e4343b7cb78526da4609ac60592f"
          }
        ]
      },
      {
        "sha": "027be4971d7addfac81c4e96bb4c43266ff4cbe8",
        "node_id": "C_kwDOF886Z9oAKDAyN2JlNDk3MWQ3YWRkZmFjODFjNGU5NmJiNGM0MzI2NmZmNGNiZTg",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:28:10Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:28:10Z"
          },
          "message": "8279066: entries.remove(entry) is useless in PKCS12KeyStore\n\nBackport-of: fb623f1d2ee858fbc6edfeaaa702b5fcd832a0aa",
          "tree": {
            "sha": "b37a223f181fbb6ac167bf051d75a6adab50ac6b",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/b37a223f181fbb6ac167bf051d75a6adab50ac6b"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/027be4971d7addfac81c4e96bb4c43266ff4cbe8",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/027be4971d7addfac81c4e96bb4c43266ff4cbe8",
        "html_url": "https://github.com/adoptium/jdk17u/commit/027be4971d7addfac81c4e96bb4c43266ff4cbe8",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/027be4971d7addfac81c4e96bb4c43266ff4cbe8/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "2e5287ba931d624e2dcd4835dc1bc9773fba6799",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/2e5287ba931d624e2dcd4835dc1bc9773fba6799",
            "html_url": "https://github.com/adoptium/jdk17u/commit/2e5287ba931d624e2dcd4835dc1bc9773fba6799"
          }
        ]
      },
      {
        "sha": "3880076ebaac29f3ff86bde6860e3297fdd3fbe7",
        "node_id": "C_kwDOF886Z9oAKDM4ODAwNzZlYmFhYzI5ZjNmZjg2YmRlNjg2MGUzMjk3ZmRkM2ZiZTc",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:31:29Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:31:29Z"
          },
          "message": "8268297: jdk/jfr/api/consumer/streaming/TestLatestEvent.java times out\n\nBackport-of: 730f67081dcda37df7fc40eda99ebd39028be15f",
          "tree": {
            "sha": "6d1c812be798488b75e6a64f137186b6bc31a2ec",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/6d1c812be798488b75e6a64f137186b6bc31a2ec"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/3880076ebaac29f3ff86bde6860e3297fdd3fbe7",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3880076ebaac29f3ff86bde6860e3297fdd3fbe7",
        "html_url": "https://github.com/adoptium/jdk17u/commit/3880076ebaac29f3ff86bde6860e3297fdd3fbe7",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/3880076ebaac29f3ff86bde6860e3297fdd3fbe7/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "027be4971d7addfac81c4e96bb4c43266ff4cbe8",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/027be4971d7addfac81c4e96bb4c43266ff4cbe8",
            "html_url": "https://github.com/adoptium/jdk17u/commit/027be4971d7addfac81c4e96bb4c43266ff4cbe8"
          }
        ]
      },
      {
        "sha": "8c5cb310e3d355c85a200235d8dc0db58b9e1a05",
        "node_id": "C_kwDOF886Z9oAKDhjNWNiMzEwZTNkMzU1Yzg1YTIwMDIzNWQ4ZGMwZGI1OGI5ZTFhMDU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:34:33Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-19T14:34:33Z"
          },
          "message": "8279398: jdk/jfr/api/recording/time/TestTimeMultiple.java failed with \"RuntimeException: getStopTime() > afterStop\"\n\nBackport-of: 40df5df95edb67331d39d829b895094e961fe21f",
          "tree": {
            "sha": "c0ef171efce64ab01184a74c000051119c613845",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/c0ef171efce64ab01184a74c000051119c613845"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/8c5cb310e3d355c85a200235d8dc0db58b9e1a05",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/8c5cb310e3d355c85a200235d8dc0db58b9e1a05",
        "html_url": "https://github.com/adoptium/jdk17u/commit/8c5cb310e3d355c85a200235d8dc0db58b9e1a05",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/8c5cb310e3d355c85a200235d8dc0db58b9e1a05/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "3880076ebaac29f3ff86bde6860e3297fdd3fbe7",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3880076ebaac29f3ff86bde6860e3297fdd3fbe7",
            "html_url": "https://github.com/adoptium/jdk17u/commit/3880076ebaac29f3ff86bde6860e3297fdd3fbe7"
          }
        ]
      },
      {
        "sha": "4b0ec09abc8d55ac7b89a85926f1f570489b67fe",
        "node_id": "C_kwDOF886Z9oAKDRiMGVjMDlhYmM4ZDU1YWM3Yjg5YTg1OTI2ZjFmNTcwNDg5YjY3ZmU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-21T09:49:04Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-21T09:49:04Z"
          },
          "message": "Merge",
          "tree": {
            "sha": "14a9407a5e4ad6ec973b46b204db628f73e17365",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/14a9407a5e4ad6ec973b46b204db628f73e17365"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/4b0ec09abc8d55ac7b89a85926f1f570489b67fe",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/4b0ec09abc8d55ac7b89a85926f1f570489b67fe",
        "html_url": "https://github.com/adoptium/jdk17u/commit/4b0ec09abc8d55ac7b89a85926f1f570489b67fe",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/4b0ec09abc8d55ac7b89a85926f1f570489b67fe/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "8c5cb310e3d355c85a200235d8dc0db58b9e1a05",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/8c5cb310e3d355c85a200235d8dc0db58b9e1a05",
            "html_url": "https://github.com/adoptium/jdk17u/commit/8c5cb310e3d355c85a200235d8dc0db58b9e1a05"
          },
          {
            "sha": "6bc6980a7d975dbe06b319bf6ac9625749663060",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6bc6980a7d975dbe06b319bf6ac9625749663060",
            "html_url": "https://github.com/adoptium/jdk17u/commit/6bc6980a7d975dbe06b319bf6ac9625749663060"
          }
        ]
      },
      {
        "sha": "6e40c5c9106de67ce2b0be4727b7bcbdcc4c2097",
        "node_id": "C_kwDOF886Z9oAKDZlNDBjNWM5MTA2ZGU2N2NlMmIwYmU0NzI3YjdiY2JkY2M0YzIwOTc",
        "commit": {
          "author": {
            "name": "Smita Kamath",
            "email": "svkamath@openjdk.org",
            "date": "2022-09-21T18:28:03Z"
          },
          "committer": {
            "name": "Derek White",
            "email": "drwhite@openjdk.org",
            "date": "2022-09-21T18:28:03Z"
          },
          "message": "8277358: Accelerate CRC32-C\n\nBackport-of: e0f1fc783cb492dd1eb18f2d56c57bdc160a410d",
          "tree": {
            "sha": "b6be1ad7ca0d4e8c70bb7e593fa0555daeb773a1",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/b6be1ad7ca0d4e8c70bb7e593fa0555daeb773a1"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/6e40c5c9106de67ce2b0be4727b7bcbdcc4c2097",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6e40c5c9106de67ce2b0be4727b7bcbdcc4c2097",
        "html_url": "https://github.com/adoptium/jdk17u/commit/6e40c5c9106de67ce2b0be4727b7bcbdcc4c2097",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/6e40c5c9106de67ce2b0be4727b7bcbdcc4c2097/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "4b0ec09abc8d55ac7b89a85926f1f570489b67fe",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/4b0ec09abc8d55ac7b89a85926f1f570489b67fe",
            "html_url": "https://github.com/adoptium/jdk17u/commit/4b0ec09abc8d55ac7b89a85926f1f570489b67fe"
          }
        ]
      },
      {
        "sha": "c59f741276d55d98d2628c01bf41eeb571eac7be",
        "node_id": "C_kwDOF886Z9oAKGM1OWY3NDEyNzZkNTVkOThkMjYyOGMwMWJmNDFlZWI1NzFlYWM3YmU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T09:49:18Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T09:49:18Z"
          },
          "message": "8274296: Update or Problem List tests which may fail with uiScale=2 on macOS\n\nBackport-of: 753b25633bf07eed40fd25b4b89313644763cd56",
          "tree": {
            "sha": "bc49ac45daa5b5c4d7e2c1bfdca75ce8d4ad5864",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/bc49ac45daa5b5c4d7e2c1bfdca75ce8d4ad5864"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/c59f741276d55d98d2628c01bf41eeb571eac7be",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/c59f741276d55d98d2628c01bf41eeb571eac7be",
        "html_url": "https://github.com/adoptium/jdk17u/commit/c59f741276d55d98d2628c01bf41eeb571eac7be",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/c59f741276d55d98d2628c01bf41eeb571eac7be/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "6e40c5c9106de67ce2b0be4727b7bcbdcc4c2097",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6e40c5c9106de67ce2b0be4727b7bcbdcc4c2097",
            "html_url": "https://github.com/adoptium/jdk17u/commit/6e40c5c9106de67ce2b0be4727b7bcbdcc4c2097"
          }
        ]
      },
      {
        "sha": "2bdea0f0a12ada44314694f2df614ed08cdb0e19",
        "node_id": "C_kwDOF886Z9oAKDJiZGVhMGYwYTEyYWRhNDQzMTQ2OTRmMmRmNjE0ZWQwOGNkYjBlMTk",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T09:52:35Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T09:52:35Z"
          },
          "message": "8210558: serviceability/sa/TestJhsdbJstackLock.java fails to find '^\\s+- waiting to lock <0x[0-9a-f]+> \\(a java\\.lang\\.Class ...'\n\nBackport-of: 587e5409c2488cf8c3579a4932c588efc5a02749",
          "tree": {
            "sha": "11738c9120e043475928534f09db120f32bf7dc3",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/11738c9120e043475928534f09db120f32bf7dc3"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/2bdea0f0a12ada44314694f2df614ed08cdb0e19",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/2bdea0f0a12ada44314694f2df614ed08cdb0e19",
        "html_url": "https://github.com/adoptium/jdk17u/commit/2bdea0f0a12ada44314694f2df614ed08cdb0e19",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/2bdea0f0a12ada44314694f2df614ed08cdb0e19/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "c59f741276d55d98d2628c01bf41eeb571eac7be",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/c59f741276d55d98d2628c01bf41eeb571eac7be",
            "html_url": "https://github.com/adoptium/jdk17u/commit/c59f741276d55d98d2628c01bf41eeb571eac7be"
          }
        ]
      },
      {
        "sha": "690ac7003cceadc2263539d4b288733c76f442f1",
        "node_id": "C_kwDOF886Z9oAKDY5MGFjNzAwM2NjZWFkYzIyNjM1MzlkNGIyODg3MzNjNzZmNDQyZjE",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T09:54:31Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T09:54:31Z"
          },
          "message": "7001973: java/awt/Graphics2D/CopyAreaOOB.java fails\n\nBackport-of: 22b7295e75d3bc7ba2c2cd7b871bb2bb5bf290eb",
          "tree": {
            "sha": "de82345126aa62714964493ede5eaae4aadb43ce",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/de82345126aa62714964493ede5eaae4aadb43ce"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/690ac7003cceadc2263539d4b288733c76f442f1",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/690ac7003cceadc2263539d4b288733c76f442f1",
        "html_url": "https://github.com/adoptium/jdk17u/commit/690ac7003cceadc2263539d4b288733c76f442f1",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/690ac7003cceadc2263539d4b288733c76f442f1/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "2bdea0f0a12ada44314694f2df614ed08cdb0e19",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/2bdea0f0a12ada44314694f2df614ed08cdb0e19",
            "html_url": "https://github.com/adoptium/jdk17u/commit/2bdea0f0a12ada44314694f2df614ed08cdb0e19"
          }
        ]
      },
      {
        "sha": "bdabf8e4583dd1e9f8d5107d6e28f62a028d5d7a",
        "node_id": "C_kwDOF886Z9oAKGJkYWJmOGU0NTgzZGQxZTlmOGQ1MTA3ZDZlMjhmNjJhMDI4ZDVkN2E",
        "commit": {
          "author": {
            "name": "Matthias Baesken",
            "email": "mbaesken@openjdk.org",
            "date": "2022-09-22T10:21:03Z"
          },
          "committer": {
            "name": "Matthias Baesken",
            "email": "mbaesken@openjdk.org",
            "date": "2022-09-22T10:21:03Z"
          },
          "message": "8292903: enhance round_up_power_of_2 assertion output\n\nBackport-of: 8d3d4397ccbfadab99fe572f0d0a8504d268a0dc",
          "tree": {
            "sha": "0e0132192858b709ff4de909d7e9f0b883ae8a5e",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/0e0132192858b709ff4de909d7e9f0b883ae8a5e"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/bdabf8e4583dd1e9f8d5107d6e28f62a028d5d7a",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/bdabf8e4583dd1e9f8d5107d6e28f62a028d5d7a",
        "html_url": "https://github.com/adoptium/jdk17u/commit/bdabf8e4583dd1e9f8d5107d6e28f62a028d5d7a",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/bdabf8e4583dd1e9f8d5107d6e28f62a028d5d7a/comments",
        "author": {
          "login": "MBaesken",
          "id": 26144289,
          "node_id": "MDQ6VXNlcjI2MTQ0Mjg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26144289?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MBaesken",
          "html_url": "https://github.com/MBaesken",
          "followers_url": "https://api.github.com/users/MBaesken/followers",
          "following_url": "https://api.github.com/users/MBaesken/following{/other_user}",
          "gists_url": "https://api.github.com/users/MBaesken/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MBaesken/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MBaesken/subscriptions",
          "organizations_url": "https://api.github.com/users/MBaesken/orgs",
          "repos_url": "https://api.github.com/users/MBaesken/repos",
          "events_url": "https://api.github.com/users/MBaesken/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MBaesken/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "MBaesken",
          "id": 26144289,
          "node_id": "MDQ6VXNlcjI2MTQ0Mjg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26144289?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MBaesken",
          "html_url": "https://github.com/MBaesken",
          "followers_url": "https://api.github.com/users/MBaesken/followers",
          "following_url": "https://api.github.com/users/MBaesken/following{/other_user}",
          "gists_url": "https://api.github.com/users/MBaesken/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MBaesken/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MBaesken/subscriptions",
          "organizations_url": "https://api.github.com/users/MBaesken/orgs",
          "repos_url": "https://api.github.com/users/MBaesken/repos",
          "events_url": "https://api.github.com/users/MBaesken/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MBaesken/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "690ac7003cceadc2263539d4b288733c76f442f1",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/690ac7003cceadc2263539d4b288733c76f442f1",
            "html_url": "https://github.com/adoptium/jdk17u/commit/690ac7003cceadc2263539d4b288733c76f442f1"
          }
        ]
      },
      {
        "sha": "33bf1aa0a12c1c077a1850bab4a5843ebf8719a5",
        "node_id": "C_kwDOF886Z9oAKDMzYmYxYWEwYTEyYzFjMDc3YTE4NTBiYWI0YTU4NDNlYmY4NzE5YTU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:32:12Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:32:12Z"
          },
          "message": "8268033: compiler/intrinsics/bmi/verifycode/BzhiTestI2L.java fails with \"fatal error: Not compilable at tier 3: CodeBuffer overflow\"\n\nBackport-of: ed0df2fa1f1cb019eadd0083a5006b3142ac0eb5",
          "tree": {
            "sha": "bdac7ab4fe43999171e319da2369f57c758f8452",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/bdac7ab4fe43999171e319da2369f57c758f8452"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/33bf1aa0a12c1c077a1850bab4a5843ebf8719a5",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/33bf1aa0a12c1c077a1850bab4a5843ebf8719a5",
        "html_url": "https://github.com/adoptium/jdk17u/commit/33bf1aa0a12c1c077a1850bab4a5843ebf8719a5",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/33bf1aa0a12c1c077a1850bab4a5843ebf8719a5/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "bdabf8e4583dd1e9f8d5107d6e28f62a028d5d7a",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/bdabf8e4583dd1e9f8d5107d6e28f62a028d5d7a",
            "html_url": "https://github.com/adoptium/jdk17u/commit/bdabf8e4583dd1e9f8d5107d6e28f62a028d5d7a"
          }
        ]
      },
      {
        "sha": "0b39137fc6ebbedec3df0064f7457eeeaaaf0d9c",
        "node_id": "C_kwDOF886Z9oAKDBiMzkxMzdmYzZlYmJlZGVjM2RmMDA2NGY3NDU3ZWVlYWFhZjBkOWM",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:41:12Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:41:12Z"
          },
          "message": "8280555: serviceability/sa/TestObjectMonitorIterate.java is failing due to ObjectMonitor referencing a null Object\n\nBackport-of: 0740ac474cbda439684223e660827e38964e6b1f",
          "tree": {
            "sha": "ec24ba84d6d4bf98ccb9ed9d083a8ee617ca6f52",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/ec24ba84d6d4bf98ccb9ed9d083a8ee617ca6f52"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/0b39137fc6ebbedec3df0064f7457eeeaaaf0d9c",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/0b39137fc6ebbedec3df0064f7457eeeaaaf0d9c",
        "html_url": "https://github.com/adoptium/jdk17u/commit/0b39137fc6ebbedec3df0064f7457eeeaaaf0d9c",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/0b39137fc6ebbedec3df0064f7457eeeaaaf0d9c/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "33bf1aa0a12c1c077a1850bab4a5843ebf8719a5",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/33bf1aa0a12c1c077a1850bab4a5843ebf8719a5",
            "html_url": "https://github.com/adoptium/jdk17u/commit/33bf1aa0a12c1c077a1850bab4a5843ebf8719a5"
          }
        ]
      },
      {
        "sha": "6e07afa20512dc20140e3fc24629c5cbd800a7e3",
        "node_id": "C_kwDOF886Z9oAKDZlMDdhZmEyMDUxMmRjMjAxNDBlM2ZjMjQ2MjljNWNiZDgwMGE3ZTM",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:50:32Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:50:32Z"
          },
          "message": "8280554: resourcehogs/serviceability/sa/ClhsdbRegionDetailsScanOopsForG1.java can fail if GC is triggered\n\nBackport-of: 4532c3a1639af0b4ff8c4f42c3796fa73ca5be83",
          "tree": {
            "sha": "1dd26e99e25dce6611495804322a8863d776948d",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/1dd26e99e25dce6611495804322a8863d776948d"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/6e07afa20512dc20140e3fc24629c5cbd800a7e3",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6e07afa20512dc20140e3fc24629c5cbd800a7e3",
        "html_url": "https://github.com/adoptium/jdk17u/commit/6e07afa20512dc20140e3fc24629c5cbd800a7e3",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/6e07afa20512dc20140e3fc24629c5cbd800a7e3/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "0b39137fc6ebbedec3df0064f7457eeeaaaf0d9c",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/0b39137fc6ebbedec3df0064f7457eeeaaaf0d9c",
            "html_url": "https://github.com/adoptium/jdk17u/commit/0b39137fc6ebbedec3df0064f7457eeeaaaf0d9c"
          }
        ]
      },
      {
        "sha": "b8f2a8d423ad33ace8adb13834b0d285bd82d69a",
        "node_id": "C_kwDOF886Z9oAKGI4ZjJhOGQ0MjNhZDMzYWNlOGFkYjEzODM0YjBkMjg1YmQ4MmQ2OWE",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:52:55Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:52:55Z"
          },
          "message": "8279662: serviceability/sa/ClhsdbScanOops.java can fail due to unexpected GC\n\nBackport-of: fe0118f8040ce7e5e3d605942443e3a5d442fa92",
          "tree": {
            "sha": "5b2752ed046cc44b6b9fc0dc6a8598429a45c4e1",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/5b2752ed046cc44b6b9fc0dc6a8598429a45c4e1"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/b8f2a8d423ad33ace8adb13834b0d285bd82d69a",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b8f2a8d423ad33ace8adb13834b0d285bd82d69a",
        "html_url": "https://github.com/adoptium/jdk17u/commit/b8f2a8d423ad33ace8adb13834b0d285bd82d69a",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/b8f2a8d423ad33ace8adb13834b0d285bd82d69a/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "6e07afa20512dc20140e3fc24629c5cbd800a7e3",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6e07afa20512dc20140e3fc24629c5cbd800a7e3",
            "html_url": "https://github.com/adoptium/jdk17u/commit/6e07afa20512dc20140e3fc24629c5cbd800a7e3"
          }
        ]
      },
      {
        "sha": "b37756ea25c468e24abb32abda9c88c895d2b3b8",
        "node_id": "C_kwDOF886Z9oAKGIzNzc1NmVhMjVjNDY4ZTI0YWJiMzJhYmRhOWM4OGM4OTVkMmIzYjg",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:56:12Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:56:12Z"
          },
          "message": "8262721: Add Tests to verify single iteration loops are properly optimized\n\nBackport-of: 69e390a0e86f82eaa7bcdbc3ef509734dbe3b22f",
          "tree": {
            "sha": "1804c5924f30d85a37f5e3a743d035143af56ba4",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/1804c5924f30d85a37f5e3a743d035143af56ba4"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/b37756ea25c468e24abb32abda9c88c895d2b3b8",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b37756ea25c468e24abb32abda9c88c895d2b3b8",
        "html_url": "https://github.com/adoptium/jdk17u/commit/b37756ea25c468e24abb32abda9c88c895d2b3b8",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/b37756ea25c468e24abb32abda9c88c895d2b3b8/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "b8f2a8d423ad33ace8adb13834b0d285bd82d69a",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b8f2a8d423ad33ace8adb13834b0d285bd82d69a",
            "html_url": "https://github.com/adoptium/jdk17u/commit/b8f2a8d423ad33ace8adb13834b0d285bd82d69a"
          }
        ]
      },
      {
        "sha": "3be9252e2b8b31450ab1c78a551533fd3f905db1",
        "node_id": "C_kwDOF886Z9oAKDNiZTkyNTJlMmI4YjMxNDUwYWIxYzc4YTU1MTUzM2ZkM2Y5MDVkYjE",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:57:21Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:57:21Z"
          },
          "message": "8282276: Problem list failing two Robot Screen Capture tests\n\nBackport-of: 2557ef8a02fe19784bd5e605b11d6bd574cde2c2",
          "tree": {
            "sha": "c27ec5a077dace79aeee7d36d8d5b90c8d6263d6",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/c27ec5a077dace79aeee7d36d8d5b90c8d6263d6"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/3be9252e2b8b31450ab1c78a551533fd3f905db1",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3be9252e2b8b31450ab1c78a551533fd3f905db1",
        "html_url": "https://github.com/adoptium/jdk17u/commit/3be9252e2b8b31450ab1c78a551533fd3f905db1",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/3be9252e2b8b31450ab1c78a551533fd3f905db1/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "b37756ea25c468e24abb32abda9c88c895d2b3b8",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b37756ea25c468e24abb32abda9c88c895d2b3b8",
            "html_url": "https://github.com/adoptium/jdk17u/commit/b37756ea25c468e24abb32abda9c88c895d2b3b8"
          }
        ]
      },
      {
        "sha": "b75b93209703aeae14a8df57aa04e9721e1f0621",
        "node_id": "C_kwDOF886Z9oAKGI3NWI5MzIwOTcwM2FlYWUxNGE4ZGY1N2FhMDRlOTcyMWUxZjA2MjE",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:58:52Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T11:58:52Z"
          },
          "message": "8273553: sun.security.ssl.SSLEngineImpl.closeInbound also has similar error of JDK-8253368\n\nBackport-of: 0b09f70a730404ceb827673f1d3c82fbf495bb41",
          "tree": {
            "sha": "c83c3c456f7f42cf379c744a149eb9f2f86c7662",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/c83c3c456f7f42cf379c744a149eb9f2f86c7662"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/b75b93209703aeae14a8df57aa04e9721e1f0621",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b75b93209703aeae14a8df57aa04e9721e1f0621",
        "html_url": "https://github.com/adoptium/jdk17u/commit/b75b93209703aeae14a8df57aa04e9721e1f0621",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/b75b93209703aeae14a8df57aa04e9721e1f0621/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "3be9252e2b8b31450ab1c78a551533fd3f905db1",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3be9252e2b8b31450ab1c78a551533fd3f905db1",
            "html_url": "https://github.com/adoptium/jdk17u/commit/3be9252e2b8b31450ab1c78a551533fd3f905db1"
          }
        ]
      },
      {
        "sha": "8a9420ae34071479ca2d479115f1d35ede08ff1f",
        "node_id": "C_kwDOF886Z9oAKDhhOTQyMGFlMzQwNzE0NzljYTJkNDc5MTE1ZjFkMzVlZGUwOGZmMWY",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:00:35Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:00:35Z"
          },
          "message": "8284892: java/net/httpclient/http2/TLSConnection.java fails intermittently\n\nBackport-of: 1e22c70ff2e010740cb22856a642dd4afa1017cc",
          "tree": {
            "sha": "e34275e2217fef1799a75eaa4cfa3787a472932d",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/e34275e2217fef1799a75eaa4cfa3787a472932d"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/8a9420ae34071479ca2d479115f1d35ede08ff1f",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/8a9420ae34071479ca2d479115f1d35ede08ff1f",
        "html_url": "https://github.com/adoptium/jdk17u/commit/8a9420ae34071479ca2d479115f1d35ede08ff1f",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/8a9420ae34071479ca2d479115f1d35ede08ff1f/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "b75b93209703aeae14a8df57aa04e9721e1f0621",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b75b93209703aeae14a8df57aa04e9721e1f0621",
            "html_url": "https://github.com/adoptium/jdk17u/commit/b75b93209703aeae14a8df57aa04e9721e1f0621"
          }
        ]
      },
      {
        "sha": "7d0854b46433843bf56552e7731c584b4f56c926",
        "node_id": "C_kwDOF886Z9oAKDdkMDg1NGI0NjQzMzg0M2JmNTY1NTJlNzczMWM1ODRiNGY1NmM5MjY",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:03:48Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:03:48Z"
          },
          "message": "8159599: [TEST_BUG] java/awt/Modal/ModalInternalFrameTest/ModalInternalFrameTest.java\n\nBackport-of: f5beafa53f93a6ec03278dfd7063d7b3b0b9d241",
          "tree": {
            "sha": "00ee7754469ddbcc21ef69f09f10229cb5d02836",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/00ee7754469ddbcc21ef69f09f10229cb5d02836"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/7d0854b46433843bf56552e7731c584b4f56c926",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/7d0854b46433843bf56552e7731c584b4f56c926",
        "html_url": "https://github.com/adoptium/jdk17u/commit/7d0854b46433843bf56552e7731c584b4f56c926",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/7d0854b46433843bf56552e7731c584b4f56c926/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "8a9420ae34071479ca2d479115f1d35ede08ff1f",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/8a9420ae34071479ca2d479115f1d35ede08ff1f",
            "html_url": "https://github.com/adoptium/jdk17u/commit/8a9420ae34071479ca2d479115f1d35ede08ff1f"
          }
        ]
      },
      {
        "sha": "9cfcae0ab9fbe360872344ae40e266e82611b324",
        "node_id": "C_kwDOF886Z9oAKDljZmNhZTBhYjlmYmUzNjA4NzIzNDRhZTQwZTI2NmU4MjYxMWIzMjQ",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:29:55Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:29:55Z"
          },
          "message": "8129827: [TEST_BUG] Test java/awt/Robot/RobotWheelTest/RobotWheelTest.java fails\n\nBackport-of: a1efb95536fb3995780336604cc727f921770c63",
          "tree": {
            "sha": "789a0568e3c45c4184acfda969a9eddb6649f462",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/789a0568e3c45c4184acfda969a9eddb6649f462"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/9cfcae0ab9fbe360872344ae40e266e82611b324",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/9cfcae0ab9fbe360872344ae40e266e82611b324",
        "html_url": "https://github.com/adoptium/jdk17u/commit/9cfcae0ab9fbe360872344ae40e266e82611b324",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/9cfcae0ab9fbe360872344ae40e266e82611b324/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "7d0854b46433843bf56552e7731c584b4f56c926",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/7d0854b46433843bf56552e7731c584b4f56c926",
            "html_url": "https://github.com/adoptium/jdk17u/commit/7d0854b46433843bf56552e7731c584b4f56c926"
          }
        ]
      },
      {
        "sha": "4efb85f154faeebf1599a50b67083fa3d76488fa",
        "node_id": "C_kwDOF886Z9oAKDRlZmI4NWYxNTRmYWVlYmYxNTk5YTUwYjY3MDgzZmEzZDc2NDg4ZmE",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:31:20Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:31:20Z"
          },
          "message": "8286263: compiler/c1/TestPinnedIntrinsics.java failed with \"RuntimeException: testCurrentTimeMillis failed with -3\"\n\nBackport-of: bb52ea6820ee749b1ac07485cf1ef65c40048f13",
          "tree": {
            "sha": "5b33ecebb1248c936b10b8ef59675a17987fbba1",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/5b33ecebb1248c936b10b8ef59675a17987fbba1"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/4efb85f154faeebf1599a50b67083fa3d76488fa",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/4efb85f154faeebf1599a50b67083fa3d76488fa",
        "html_url": "https://github.com/adoptium/jdk17u/commit/4efb85f154faeebf1599a50b67083fa3d76488fa",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/4efb85f154faeebf1599a50b67083fa3d76488fa/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "9cfcae0ab9fbe360872344ae40e266e82611b324",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/9cfcae0ab9fbe360872344ae40e266e82611b324",
            "html_url": "https://github.com/adoptium/jdk17u/commit/9cfcae0ab9fbe360872344ae40e266e82611b324"
          }
        ]
      },
      {
        "sha": "eeb4562e3ddc4b6c516d033855d51f2cdb4bd1c0",
        "node_id": "C_kwDOF886Z9oAKGVlYjQ1NjJlM2RkYzRiNmM1MTZkMDMzODU1ZDUxZjJjZGI0YmQxYzA",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:35:27Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:35:27Z"
          },
          "message": "8284980: Test vmTestbase/nsk/stress/except/except010.java times out with -Xcomp  -XX:+DeoptimizeALot\n\nBackport-of: 7704eb18664606361bc87d54d102533530f1d2dd",
          "tree": {
            "sha": "06cfcbddd122513bbfad1c40ff07f910c4d4b89c",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/06cfcbddd122513bbfad1c40ff07f910c4d4b89c"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/eeb4562e3ddc4b6c516d033855d51f2cdb4bd1c0",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/eeb4562e3ddc4b6c516d033855d51f2cdb4bd1c0",
        "html_url": "https://github.com/adoptium/jdk17u/commit/eeb4562e3ddc4b6c516d033855d51f2cdb4bd1c0",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/eeb4562e3ddc4b6c516d033855d51f2cdb4bd1c0/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "4efb85f154faeebf1599a50b67083fa3d76488fa",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/4efb85f154faeebf1599a50b67083fa3d76488fa",
            "html_url": "https://github.com/adoptium/jdk17u/commit/4efb85f154faeebf1599a50b67083fa3d76488fa"
          }
        ]
      },
      {
        "sha": "5db0eea96286efa1f128dc23cec304827ef40dbc",
        "node_id": "C_kwDOF886Z9oAKDVkYjBlZWE5NjI4NmVmYTFmMTI4ZGMyM2NlYzMwNDgyN2VmNDBkYmM",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:39:26Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-22T12:39:26Z"
          },
          "message": "8285698: Create a test to check the focus stealing of JPopupMenu from JComboBox\n\nBackport-of: 7612bba0f1ae63b2c762eb103544dc43d4e8304f",
          "tree": {
            "sha": "700e6f4ed9822100572d051cdb49fc11f65e64c6",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/700e6f4ed9822100572d051cdb49fc11f65e64c6"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/5db0eea96286efa1f128dc23cec304827ef40dbc",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/5db0eea96286efa1f128dc23cec304827ef40dbc",
        "html_url": "https://github.com/adoptium/jdk17u/commit/5db0eea96286efa1f128dc23cec304827ef40dbc",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/5db0eea96286efa1f128dc23cec304827ef40dbc/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "eeb4562e3ddc4b6c516d033855d51f2cdb4bd1c0",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/eeb4562e3ddc4b6c516d033855d51f2cdb4bd1c0",
            "html_url": "https://github.com/adoptium/jdk17u/commit/eeb4562e3ddc4b6c516d033855d51f2cdb4bd1c0"
          }
        ]
      },
      {
        "sha": "ab6f746c725e17882f2e504817d369790c26ebec",
        "node_id": "C_kwDOF886Z9oAKGFiNmY3NDZjNzI1ZTE3ODgyZjJlNTA0ODE3ZDM2OTc5MGMyNmViZWM",
        "commit": {
          "author": {
            "name": "Victor Rudometov",
            "email": "vrudomet@openjdk.org",
            "date": "2022-09-22T22:39:41Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-22T22:39:41Z"
          },
          "message": "8293828: JFR: jfr/event/oldobject/TestClassLoaderLeak.java still fails when GC cycles are not happening\n\nBackport-of: 5002eaa5cc7301b91a45f8c0f65b5943fea225d8",
          "tree": {
            "sha": "4a3a44387fb74bf91d9fc2f7ddf16eed258fc181",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/4a3a44387fb74bf91d9fc2f7ddf16eed258fc181"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/ab6f746c725e17882f2e504817d369790c26ebec",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ab6f746c725e17882f2e504817d369790c26ebec",
        "html_url": "https://github.com/adoptium/jdk17u/commit/ab6f746c725e17882f2e504817d369790c26ebec",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/ab6f746c725e17882f2e504817d369790c26ebec/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "5db0eea96286efa1f128dc23cec304827ef40dbc",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/5db0eea96286efa1f128dc23cec304827ef40dbc",
            "html_url": "https://github.com/adoptium/jdk17u/commit/5db0eea96286efa1f128dc23cec304827ef40dbc"
          }
        ]
      },
      {
        "sha": "f5c0fc3784da0a93350e0be17d70476cd128d698",
        "node_id": "C_kwDOF886Z9oAKGY1YzBmYzM3ODRkYTBhOTMzNTBlMGJlMTdkNzA0NzZjZDEyOGQ2OTg",
        "commit": {
          "author": {
            "name": "Gaurav Chaudhari",
            "email": "Gaurav.Chaudhari@ibm.com",
            "date": "2022-09-24T06:20:57Z"
          },
          "committer": {
            "name": "Christoph Langer",
            "email": "clanger@openjdk.org",
            "date": "2022-09-24T06:20:57Z"
          },
          "message": "8288377: [REDO] DST not applying properly with zone id offset set with TZ env variable\n\nBackport-of: 3c3256414f7df049cdd6c8519fbcea0d818a1a33",
          "tree": {
            "sha": "d2f8a29469eabe4009b8542f41e032e8c291ca66",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/d2f8a29469eabe4009b8542f41e032e8c291ca66"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/f5c0fc3784da0a93350e0be17d70476cd128d698",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/f5c0fc3784da0a93350e0be17d70476cd128d698",
        "html_url": "https://github.com/adoptium/jdk17u/commit/f5c0fc3784da0a93350e0be17d70476cd128d698",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/f5c0fc3784da0a93350e0be17d70476cd128d698/comments",
        "author": {
          "login": "Deigue",
          "id": 6877595,
          "node_id": "MDQ6VXNlcjY4Nzc1OTU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6877595?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Deigue",
          "html_url": "https://github.com/Deigue",
          "followers_url": "https://api.github.com/users/Deigue/followers",
          "following_url": "https://api.github.com/users/Deigue/following{/other_user}",
          "gists_url": "https://api.github.com/users/Deigue/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Deigue/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Deigue/subscriptions",
          "organizations_url": "https://api.github.com/users/Deigue/orgs",
          "repos_url": "https://api.github.com/users/Deigue/repos",
          "events_url": "https://api.github.com/users/Deigue/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Deigue/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "RealCLanger",
          "id": 26298889,
          "node_id": "MDQ6VXNlcjI2Mjk4ODg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26298889?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RealCLanger",
          "html_url": "https://github.com/RealCLanger",
          "followers_url": "https://api.github.com/users/RealCLanger/followers",
          "following_url": "https://api.github.com/users/RealCLanger/following{/other_user}",
          "gists_url": "https://api.github.com/users/RealCLanger/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RealCLanger/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RealCLanger/subscriptions",
          "organizations_url": "https://api.github.com/users/RealCLanger/orgs",
          "repos_url": "https://api.github.com/users/RealCLanger/repos",
          "events_url": "https://api.github.com/users/RealCLanger/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RealCLanger/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "ab6f746c725e17882f2e504817d369790c26ebec",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ab6f746c725e17882f2e504817d369790c26ebec",
            "html_url": "https://github.com/adoptium/jdk17u/commit/ab6f746c725e17882f2e504817d369790c26ebec"
          }
        ]
      },
      {
        "sha": "ae5f2de4fbb57453da85eeb255494b27d3dbd982",
        "node_id": "C_kwDOF886Z9oAKGFlNWYyZGU0ZmJiNTc0NTNkYTg1ZWViMjU1NDk0YjI3ZDNkYmQ5ODI",
        "commit": {
          "author": {
            "name": "Tyler Steele",
            "email": "tsteele@openjdk.org",
            "date": "2022-09-26T06:29:49Z"
          },
          "committer": {
            "name": "Christoph Langer",
            "email": "clanger@openjdk.org",
            "date": "2022-09-26T06:29:49Z"
          },
          "message": "8292816: GPL Classpath exception missing from assemblyprefix.h\n\nBackport-of: 71ab5c95af28497fb31aba8ba9597da71bc4d3d5",
          "tree": {
            "sha": "890c473cb138745d7e84c9e0daead9ae040d1e0a",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/890c473cb138745d7e84c9e0daead9ae040d1e0a"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/ae5f2de4fbb57453da85eeb255494b27d3dbd982",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ae5f2de4fbb57453da85eeb255494b27d3dbd982",
        "html_url": "https://github.com/adoptium/jdk17u/commit/ae5f2de4fbb57453da85eeb255494b27d3dbd982",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/ae5f2de4fbb57453da85eeb255494b27d3dbd982/comments",
        "author": null,
        "committer": {
          "login": "RealCLanger",
          "id": 26298889,
          "node_id": "MDQ6VXNlcjI2Mjk4ODg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26298889?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RealCLanger",
          "html_url": "https://github.com/RealCLanger",
          "followers_url": "https://api.github.com/users/RealCLanger/followers",
          "following_url": "https://api.github.com/users/RealCLanger/following{/other_user}",
          "gists_url": "https://api.github.com/users/RealCLanger/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RealCLanger/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RealCLanger/subscriptions",
          "organizations_url": "https://api.github.com/users/RealCLanger/orgs",
          "repos_url": "https://api.github.com/users/RealCLanger/repos",
          "events_url": "https://api.github.com/users/RealCLanger/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RealCLanger/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "f5c0fc3784da0a93350e0be17d70476cd128d698",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/f5c0fc3784da0a93350e0be17d70476cd128d698",
            "html_url": "https://github.com/adoptium/jdk17u/commit/f5c0fc3784da0a93350e0be17d70476cd128d698"
          }
        ]
      },
      {
        "sha": "a0ccdbffffcf97fad751b77c454dfa4c5c2caa07",
        "node_id": "C_kwDOF886Z9oAKGEwY2NkYmZmZmZjZjk3ZmFkNzUxYjc3YzQ1NGRmYTRjNWMyY2FhMDc",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-26T07:07:38Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-26T07:07:38Z"
          },
          "message": "8275234: java/awt/GraphicsDevice/DisplayModes/CycleDMImage.java is entered twice in ProblemList\n\nBackport-of: 1e0184d142deb18e719fc28814a293b44bab6c63",
          "tree": {
            "sha": "f14cc43ece846de7ec73fdb7aea27a993130f1dc",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/f14cc43ece846de7ec73fdb7aea27a993130f1dc"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/a0ccdbffffcf97fad751b77c454dfa4c5c2caa07",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a0ccdbffffcf97fad751b77c454dfa4c5c2caa07",
        "html_url": "https://github.com/adoptium/jdk17u/commit/a0ccdbffffcf97fad751b77c454dfa4c5c2caa07",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/a0ccdbffffcf97fad751b77c454dfa4c5c2caa07/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "ae5f2de4fbb57453da85eeb255494b27d3dbd982",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ae5f2de4fbb57453da85eeb255494b27d3dbd982",
            "html_url": "https://github.com/adoptium/jdk17u/commit/ae5f2de4fbb57453da85eeb255494b27d3dbd982"
          }
        ]
      },
      {
        "sha": "3b48de562908c6ca076315b04874b109edfcd422",
        "node_id": "C_kwDOF886Z9oAKDNiNDhkZTU2MjkwOGM2Y2EwNzYzMTViMDQ4NzRiMTA5ZWRmY2Q0MjI",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-26T07:09:20Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-26T07:09:20Z"
          },
          "message": "8286460: Remove dependence on JAR filename in CDS tests\n\nBackport-of: 52dbfa99fe34d7b9469fba626e3577a22fd1d1fe",
          "tree": {
            "sha": "e7e11d7b02d5ff10e3ac0590a0bc48100c63b7c5",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/e7e11d7b02d5ff10e3ac0590a0bc48100c63b7c5"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/3b48de562908c6ca076315b04874b109edfcd422",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3b48de562908c6ca076315b04874b109edfcd422",
        "html_url": "https://github.com/adoptium/jdk17u/commit/3b48de562908c6ca076315b04874b109edfcd422",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/3b48de562908c6ca076315b04874b109edfcd422/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "a0ccdbffffcf97fad751b77c454dfa4c5c2caa07",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a0ccdbffffcf97fad751b77c454dfa4c5c2caa07",
            "html_url": "https://github.com/adoptium/jdk17u/commit/a0ccdbffffcf97fad751b77c454dfa4c5c2caa07"
          }
        ]
      },
      {
        "sha": "6230aa8f96e4793282efe6165b828c5578a335d3",
        "node_id": "C_kwDOF886Z9oAKDYyMzBhYThmOTZlNDc5MzI4MmVmZTYxNjViODI4YzU1NzhhMzM1ZDM",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-26T07:59:32Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-26T07:59:32Z"
          },
          "message": "8286551: JDK-8286460 causes tests to fail to compile in Tier2\n\nBackport-of: 070a0cda31f83a3cf18a612b91c30d66cf407c3c",
          "tree": {
            "sha": "96a49c7e477f57301b603f9ddd6b65e6d1956dcc",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/96a49c7e477f57301b603f9ddd6b65e6d1956dcc"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/6230aa8f96e4793282efe6165b828c5578a335d3",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6230aa8f96e4793282efe6165b828c5578a335d3",
        "html_url": "https://github.com/adoptium/jdk17u/commit/6230aa8f96e4793282efe6165b828c5578a335d3",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/6230aa8f96e4793282efe6165b828c5578a335d3/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "3b48de562908c6ca076315b04874b109edfcd422",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3b48de562908c6ca076315b04874b109edfcd422",
            "html_url": "https://github.com/adoptium/jdk17u/commit/3b48de562908c6ca076315b04874b109edfcd422"
          }
        ]
      },
      {
        "sha": "0c551b6c01bed302a2fbd1271773c3e231920ddd",
        "node_id": "C_kwDOF886Z9oAKDBjNTUxYjZjMDFiZWQzMDJhMmZiZDEyNzE3NzNjM2UyMzE5MjBkZGQ",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-26T08:07:08Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-26T08:07:08Z"
          },
          "message": "8285612: Remove jtreg tag manual=yesno for java/awt/print/PrinterJob/ImagePrinting/ClippedImages.java\n\nReviewed-by: mbaesken\nBackport-of: 57a76708864c3fed5fc2543f6a8552f38670488c",
          "tree": {
            "sha": "8bd5c83d959f1908c3078e40edb85c6c9f4c476a",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/8bd5c83d959f1908c3078e40edb85c6c9f4c476a"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/0c551b6c01bed302a2fbd1271773c3e231920ddd",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/0c551b6c01bed302a2fbd1271773c3e231920ddd",
        "html_url": "https://github.com/adoptium/jdk17u/commit/0c551b6c01bed302a2fbd1271773c3e231920ddd",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/0c551b6c01bed302a2fbd1271773c3e231920ddd/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "6230aa8f96e4793282efe6165b828c5578a335d3",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6230aa8f96e4793282efe6165b828c5578a335d3",
            "html_url": "https://github.com/adoptium/jdk17u/commit/6230aa8f96e4793282efe6165b828c5578a335d3"
          }
        ]
      },
      {
        "sha": "a91d9b54f4789e13974d51f035d523accc869b5b",
        "node_id": "C_kwDOF886Z9oAKGE5MWQ5YjU0ZjQ3ODllMTM5NzRkNTFmMDM1ZDUyM2FjY2M4NjliNWI",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T06:31:43Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T06:31:43Z"
          },
          "message": "Merge",
          "tree": {
            "sha": "edd706213a5025e471039e4c71ba150d52442132",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/edd706213a5025e471039e4c71ba150d52442132"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/a91d9b54f4789e13974d51f035d523accc869b5b",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a91d9b54f4789e13974d51f035d523accc869b5b",
        "html_url": "https://github.com/adoptium/jdk17u/commit/a91d9b54f4789e13974d51f035d523accc869b5b",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/a91d9b54f4789e13974d51f035d523accc869b5b/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "0c551b6c01bed302a2fbd1271773c3e231920ddd",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/0c551b6c01bed302a2fbd1271773c3e231920ddd",
            "html_url": "https://github.com/adoptium/jdk17u/commit/0c551b6c01bed302a2fbd1271773c3e231920ddd"
          },
          {
            "sha": "114f0c400548675bf2ecd2b3dbf10aeecda539d9",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/114f0c400548675bf2ecd2b3dbf10aeecda539d9",
            "html_url": "https://github.com/adoptium/jdk17u/commit/114f0c400548675bf2ecd2b3dbf10aeecda539d9"
          }
        ]
      },
      {
        "sha": "a67e07a1fbed9298ce9d0fa57216f1f63cf0ba1d",
        "node_id": "C_kwDOF886Z9oAKGE2N2UwN2ExZmJlZDkyOThjZTlkMGZhNTcyMTZmMWY2M2NmMGJhMWQ",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:04:20Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:04:20Z"
          },
          "message": "8233557: [TESTBUG] DoubleClickTitleBarTest.java fails on macOs\n\nBackport-of: 7b1916efda95a46439cf42e006593361d12a8823",
          "tree": {
            "sha": "7404df9f17c8e665ac24c40d802369a2b50d1c85",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/7404df9f17c8e665ac24c40d802369a2b50d1c85"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/a67e07a1fbed9298ce9d0fa57216f1f63cf0ba1d",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a67e07a1fbed9298ce9d0fa57216f1f63cf0ba1d",
        "html_url": "https://github.com/adoptium/jdk17u/commit/a67e07a1fbed9298ce9d0fa57216f1f63cf0ba1d",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/a67e07a1fbed9298ce9d0fa57216f1f63cf0ba1d/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "a91d9b54f4789e13974d51f035d523accc869b5b",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a91d9b54f4789e13974d51f035d523accc869b5b",
            "html_url": "https://github.com/adoptium/jdk17u/commit/a91d9b54f4789e13974d51f035d523accc869b5b"
          }
        ]
      },
      {
        "sha": "152ad7885acf5034196027bcbdceff47f200d117",
        "node_id": "C_kwDOF886Z9oAKDE1MmFkNzg4NWFjZjUwMzQxOTYwMjdiY2JkY2VmZjQ3ZjIwMGQxMTc",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:05:46Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:05:46Z"
          },
          "message": "8286452: The array length of testSmallConstArray should be small and const\n\nBackport-of: d65fba412ec8e5a076d4940c932b70c629bb9dc7",
          "tree": {
            "sha": "0186489df3c3a5410da49f0027069f100ae22d3b",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/0186489df3c3a5410da49f0027069f100ae22d3b"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/152ad7885acf5034196027bcbdceff47f200d117",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/152ad7885acf5034196027bcbdceff47f200d117",
        "html_url": "https://github.com/adoptium/jdk17u/commit/152ad7885acf5034196027bcbdceff47f200d117",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/152ad7885acf5034196027bcbdceff47f200d117/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "a67e07a1fbed9298ce9d0fa57216f1f63cf0ba1d",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/a67e07a1fbed9298ce9d0fa57216f1f63cf0ba1d",
            "html_url": "https://github.com/adoptium/jdk17u/commit/a67e07a1fbed9298ce9d0fa57216f1f63cf0ba1d"
          }
        ]
      },
      {
        "sha": "7c2b227c8dd52505b6230872bd51cdc1b130bcdc",
        "node_id": "C_kwDOF886Z9oAKDdjMmIyMjdjOGRkNTI1MDViNjIzMDg3MmJkNTFjZGMxYjEzMGJjZGM",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:07:09Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:07:09Z"
          },
          "message": "8285687: Remove jtreg tag manual=yesno for java/awt/print/PrinterJob/PageRangesDlgTest.java\n\nBackport-of: fc3edf2412461f41ac4dfd8b047257432620ba6d",
          "tree": {
            "sha": "7923fbf653530480267e29e2434e1de8c7ce1b41",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/7923fbf653530480267e29e2434e1de8c7ce1b41"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/7c2b227c8dd52505b6230872bd51cdc1b130bcdc",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/7c2b227c8dd52505b6230872bd51cdc1b130bcdc",
        "html_url": "https://github.com/adoptium/jdk17u/commit/7c2b227c8dd52505b6230872bd51cdc1b130bcdc",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/7c2b227c8dd52505b6230872bd51cdc1b130bcdc/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "152ad7885acf5034196027bcbdceff47f200d117",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/152ad7885acf5034196027bcbdceff47f200d117",
            "html_url": "https://github.com/adoptium/jdk17u/commit/152ad7885acf5034196027bcbdceff47f200d117"
          }
        ]
      },
      {
        "sha": "36f01165ef82c0761a9f184fd1e3cd31d679a445",
        "node_id": "C_kwDOF886Z9oAKDM2ZjAxMTY1ZWY4MmMwNzYxYTlmMTg0ZmQxZTNjZDMxZDY3OWE0NDU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:08:42Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:08:42Z"
          },
          "message": "8275170: Some jtreg sound tests should be marked with sound keyword\n\nBackport-of: 25669bb667466b3cc814f8f08d4e3a2982a4cf2e",
          "tree": {
            "sha": "b95ffd27be2e2470aa346d12d8900a8ad2a99bff",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/b95ffd27be2e2470aa346d12d8900a8ad2a99bff"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/36f01165ef82c0761a9f184fd1e3cd31d679a445",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/36f01165ef82c0761a9f184fd1e3cd31d679a445",
        "html_url": "https://github.com/adoptium/jdk17u/commit/36f01165ef82c0761a9f184fd1e3cd31d679a445",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/36f01165ef82c0761a9f184fd1e3cd31d679a445/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "7c2b227c8dd52505b6230872bd51cdc1b130bcdc",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/7c2b227c8dd52505b6230872bd51cdc1b130bcdc",
            "html_url": "https://github.com/adoptium/jdk17u/commit/7c2b227c8dd52505b6230872bd51cdc1b130bcdc"
          }
        ]
      },
      {
        "sha": "f4ef78773f84dfa97fb912203041ed371b717dfe",
        "node_id": "C_kwDOF886Z9oAKGY0ZWY3ODc3M2Y4NGRmYTk3ZmI5MTIyMDMwNDFlZDM3MWI3MTdkZmU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:10:40Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:10:40Z"
          },
          "message": "8282857: Create a regression test for JDK-4702690\n\nBackport-of: 8df5f1058fb7244b65fa67bff8fd5a5282d70594",
          "tree": {
            "sha": "42a0c2039b573b91d79b1e4bc537d57ca89e9dfb",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/42a0c2039b573b91d79b1e4bc537d57ca89e9dfb"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/f4ef78773f84dfa97fb912203041ed371b717dfe",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/f4ef78773f84dfa97fb912203041ed371b717dfe",
        "html_url": "https://github.com/adoptium/jdk17u/commit/f4ef78773f84dfa97fb912203041ed371b717dfe",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/f4ef78773f84dfa97fb912203041ed371b717dfe/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "36f01165ef82c0761a9f184fd1e3cd31d679a445",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/36f01165ef82c0761a9f184fd1e3cd31d679a445",
            "html_url": "https://github.com/adoptium/jdk17u/commit/36f01165ef82c0761a9f184fd1e3cd31d679a445"
          }
        ]
      },
      {
        "sha": "e5dd0b4c288b98a571559779c7b012c68f5b43c5",
        "node_id": "C_kwDOF886Z9oAKGU1ZGQwYjRjMjg4Yjk4YTU3MTU1OTc3OWM3YjAxMmM2OGY1YjQzYzU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:12:30Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:12:30Z"
          },
          "message": "8285373: Create an automated test for JDK-4702233\n\nBackport-of: 6f526e1bc3e0af4189fbb7d3b48d614717f266b0",
          "tree": {
            "sha": "37aceaa16c517d084abb55b994f09dfb4d4015f3",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/37aceaa16c517d084abb55b994f09dfb4d4015f3"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/e5dd0b4c288b98a571559779c7b012c68f5b43c5",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/e5dd0b4c288b98a571559779c7b012c68f5b43c5",
        "html_url": "https://github.com/adoptium/jdk17u/commit/e5dd0b4c288b98a571559779c7b012c68f5b43c5",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/e5dd0b4c288b98a571559779c7b012c68f5b43c5/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "f4ef78773f84dfa97fb912203041ed371b717dfe",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/f4ef78773f84dfa97fb912203041ed371b717dfe",
            "html_url": "https://github.com/adoptium/jdk17u/commit/f4ef78773f84dfa97fb912203041ed371b717dfe"
          }
        ]
      },
      {
        "sha": "3461ff3b3af7d0843bea97e1c739b6a320f2a5da",
        "node_id": "C_kwDOF886Z9oAKDM0NjFmZjNiM2FmN2QwODQzYmVhOTdlMWM3MzliNmEzMjBmMmE1ZGE",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:26:16Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:26:16Z"
          },
          "message": "8287826: javax/accessibility/4702233/AccessiblePropertiesTest.java fails to compile\n\nBackport-of: 005a330387b8ee1179d1be31b53ea2c5d49c32f8",
          "tree": {
            "sha": "fe02df839b64866e35d626cb0f28b3445108c1fa",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/fe02df839b64866e35d626cb0f28b3445108c1fa"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/3461ff3b3af7d0843bea97e1c739b6a320f2a5da",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3461ff3b3af7d0843bea97e1c739b6a320f2a5da",
        "html_url": "https://github.com/adoptium/jdk17u/commit/3461ff3b3af7d0843bea97e1c739b6a320f2a5da",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/3461ff3b3af7d0843bea97e1c739b6a320f2a5da/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "e5dd0b4c288b98a571559779c7b012c68f5b43c5",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/e5dd0b4c288b98a571559779c7b012c68f5b43c5",
            "html_url": "https://github.com/adoptium/jdk17u/commit/e5dd0b4c288b98a571559779c7b012c68f5b43c5"
          }
        ]
      },
      {
        "sha": "79288de50f99f41b62dba38e6f7d765f0fa31c25",
        "node_id": "C_kwDOF886Z9oAKDc5Mjg4ZGU1MGY5OWY0MWI2MmRiYTM4ZTZmN2Q3NjVmMGZhMzFjMjU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:28:29Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:28:29Z"
          },
          "message": "8285305: Create an automated test for JDK-4495286\n\nBackport-of: 25e9901aeacd45f8baec6d1e52a6823e7f087fa3",
          "tree": {
            "sha": "c63a659c27aa9f3df1522e709fe4b1245cf17886",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/c63a659c27aa9f3df1522e709fe4b1245cf17886"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/79288de50f99f41b62dba38e6f7d765f0fa31c25",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/79288de50f99f41b62dba38e6f7d765f0fa31c25",
        "html_url": "https://github.com/adoptium/jdk17u/commit/79288de50f99f41b62dba38e6f7d765f0fa31c25",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/79288de50f99f41b62dba38e6f7d765f0fa31c25/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "3461ff3b3af7d0843bea97e1c739b6a320f2a5da",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3461ff3b3af7d0843bea97e1c739b6a320f2a5da",
            "html_url": "https://github.com/adoptium/jdk17u/commit/3461ff3b3af7d0843bea97e1c739b6a320f2a5da"
          }
        ]
      },
      {
        "sha": "ad9e9f2c8be8c7cf60572456d5f159052315ca9c",
        "node_id": "C_kwDOF886Z9oAKGFkOWU5ZjJjOGJlOGM3Y2Y2MDU3MjQ1NmQ1ZjE1OTA1MjMxNWNhOWM",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:30:16Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:30:16Z"
          },
          "message": "8286663: Resolve IDE warnings in WTrayIconPeer and SystemTray\n\nBackport-of: a9b9831f2a88ed3b7701d402b167a096b94aeb98",
          "tree": {
            "sha": "84a613dc158b0ed64c18f9fb59f2c660152045d2",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/84a613dc158b0ed64c18f9fb59f2c660152045d2"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/ad9e9f2c8be8c7cf60572456d5f159052315ca9c",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ad9e9f2c8be8c7cf60572456d5f159052315ca9c",
        "html_url": "https://github.com/adoptium/jdk17u/commit/ad9e9f2c8be8c7cf60572456d5f159052315ca9c",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/ad9e9f2c8be8c7cf60572456d5f159052315ca9c/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "79288de50f99f41b62dba38e6f7d765f0fa31c25",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/79288de50f99f41b62dba38e6f7d765f0fa31c25",
            "html_url": "https://github.com/adoptium/jdk17u/commit/79288de50f99f41b62dba38e6f7d765f0fa31c25"
          }
        ]
      },
      {
        "sha": "f49ffca28f2a9393b7f0fb8c9cb0d2eacf3b9ecd",
        "node_id": "C_kwDOF886Z9oAKGY0OWZmY2EyOGYyYTkzOTNiN2YwZmI4YzljYjBkMmVhY2YzYjllY2Q",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:55:16Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:55:16Z"
          },
          "message": "8286772: java/awt/dnd/DropTargetInInternalFrameTest/DropTargetInInternalFrameTest.html times out and fails in Windows\n\nBackport-of: d76c1089efc8816c6f804b78371e62e697fc62c5",
          "tree": {
            "sha": "f9d3aa58f197b8a5e52e2e258c18a2aa40536773",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/f9d3aa58f197b8a5e52e2e258c18a2aa40536773"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/f49ffca28f2a9393b7f0fb8c9cb0d2eacf3b9ecd",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/f49ffca28f2a9393b7f0fb8c9cb0d2eacf3b9ecd",
        "html_url": "https://github.com/adoptium/jdk17u/commit/f49ffca28f2a9393b7f0fb8c9cb0d2eacf3b9ecd",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/f49ffca28f2a9393b7f0fb8c9cb0d2eacf3b9ecd/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "ad9e9f2c8be8c7cf60572456d5f159052315ca9c",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ad9e9f2c8be8c7cf60572456d5f159052315ca9c",
            "html_url": "https://github.com/adoptium/jdk17u/commit/ad9e9f2c8be8c7cf60572456d5f159052315ca9c"
          }
        ]
      },
      {
        "sha": "4ea55269f4177d4776e87041043006436ccb007f",
        "node_id": "C_kwDOF886Z9oAKDRlYTU1MjY5ZjQxNzdkNDc3NmU4NzA0MTA0MzAwNjQzNmNjYjAwN2Y",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:57:42Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-28T07:57:42Z"
          },
          "message": "8282777: Create a Regression test for JDK-4515031\n\nBackport-of: 523d553e13e7d6fbf0a3befb1c18431738fe8d7f",
          "tree": {
            "sha": "78337df8a73dfa614f955a82d0ed2ce1b34ed9b4",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/78337df8a73dfa614f955a82d0ed2ce1b34ed9b4"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/4ea55269f4177d4776e87041043006436ccb007f",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/4ea55269f4177d4776e87041043006436ccb007f",
        "html_url": "https://github.com/adoptium/jdk17u/commit/4ea55269f4177d4776e87041043006436ccb007f",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/4ea55269f4177d4776e87041043006436ccb007f/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "f49ffca28f2a9393b7f0fb8c9cb0d2eacf3b9ecd",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/f49ffca28f2a9393b7f0fb8c9cb0d2eacf3b9ecd",
            "html_url": "https://github.com/adoptium/jdk17u/commit/f49ffca28f2a9393b7f0fb8c9cb0d2eacf3b9ecd"
          }
        ]
      },
      {
        "sha": "fa8feb4253b1c0cd3e1d6568366534ceea36bfd5",
        "node_id": "C_kwDOF886Z9oAKGZhOGZlYjQyNTNiMWMwY2QzZTFkNjU2ODM2NjUzNGNlZWEzNmJmZDU",
        "commit": {
          "author": {
            "name": "Matthias Baesken",
            "email": "mbaesken@openjdk.org",
            "date": "2022-09-28T13:14:07Z"
          },
          "committer": {
            "name": "Matthias Baesken",
            "email": "mbaesken@openjdk.org",
            "date": "2022-09-28T13:14:07Z"
          },
          "message": "8290532: Adjust PKCS11Exception and handle more PKCS11 error codes\n\nBackport-of: 07f0612c9aa5641491516d9a0232392689d4c1ca",
          "tree": {
            "sha": "07564d68280c58e6680bac25aadf9d8c7fc4ca05",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/07564d68280c58e6680bac25aadf9d8c7fc4ca05"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/fa8feb4253b1c0cd3e1d6568366534ceea36bfd5",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/fa8feb4253b1c0cd3e1d6568366534ceea36bfd5",
        "html_url": "https://github.com/adoptium/jdk17u/commit/fa8feb4253b1c0cd3e1d6568366534ceea36bfd5",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/fa8feb4253b1c0cd3e1d6568366534ceea36bfd5/comments",
        "author": {
          "login": "MBaesken",
          "id": 26144289,
          "node_id": "MDQ6VXNlcjI2MTQ0Mjg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26144289?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MBaesken",
          "html_url": "https://github.com/MBaesken",
          "followers_url": "https://api.github.com/users/MBaesken/followers",
          "following_url": "https://api.github.com/users/MBaesken/following{/other_user}",
          "gists_url": "https://api.github.com/users/MBaesken/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MBaesken/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MBaesken/subscriptions",
          "organizations_url": "https://api.github.com/users/MBaesken/orgs",
          "repos_url": "https://api.github.com/users/MBaesken/repos",
          "events_url": "https://api.github.com/users/MBaesken/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MBaesken/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "MBaesken",
          "id": 26144289,
          "node_id": "MDQ6VXNlcjI2MTQ0Mjg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26144289?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MBaesken",
          "html_url": "https://github.com/MBaesken",
          "followers_url": "https://api.github.com/users/MBaesken/followers",
          "following_url": "https://api.github.com/users/MBaesken/following{/other_user}",
          "gists_url": "https://api.github.com/users/MBaesken/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MBaesken/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MBaesken/subscriptions",
          "organizations_url": "https://api.github.com/users/MBaesken/orgs",
          "repos_url": "https://api.github.com/users/MBaesken/repos",
          "events_url": "https://api.github.com/users/MBaesken/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MBaesken/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "4ea55269f4177d4776e87041043006436ccb007f",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/4ea55269f4177d4776e87041043006436ccb007f",
            "html_url": "https://github.com/adoptium/jdk17u/commit/4ea55269f4177d4776e87041043006436ccb007f"
          }
        ]
      },
      {
        "sha": "742556429d3e4b9bc4f38cfd66455b610b0cc1b3",
        "node_id": "C_kwDOF886Z9oAKDc0MjU1NjQyOWQzZTRiOWJjNGYzOGNmZDY2NDU1YjYxMGIwY2MxYjM",
        "commit": {
          "author": {
            "name": "Matthias Baesken",
            "email": "mbaesken@openjdk.org",
            "date": "2022-09-28T14:12:21Z"
          },
          "committer": {
            "name": "Matthias Baesken",
            "email": "mbaesken@openjdk.org",
            "date": "2022-09-28T14:12:21Z"
          },
          "message": "8293808: mscapi destroyKeyContainer enhance KeyStoreException: Access is denied exception\n\nBackport-of: 36c9034ff1274f37969550a3f9239f1bb16a0b25",
          "tree": {
            "sha": "0ff7d3b99b4de87a280286bdce4158e1fd210bee",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/0ff7d3b99b4de87a280286bdce4158e1fd210bee"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/742556429d3e4b9bc4f38cfd66455b610b0cc1b3",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/742556429d3e4b9bc4f38cfd66455b610b0cc1b3",
        "html_url": "https://github.com/adoptium/jdk17u/commit/742556429d3e4b9bc4f38cfd66455b610b0cc1b3",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/742556429d3e4b9bc4f38cfd66455b610b0cc1b3/comments",
        "author": {
          "login": "MBaesken",
          "id": 26144289,
          "node_id": "MDQ6VXNlcjI2MTQ0Mjg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26144289?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MBaesken",
          "html_url": "https://github.com/MBaesken",
          "followers_url": "https://api.github.com/users/MBaesken/followers",
          "following_url": "https://api.github.com/users/MBaesken/following{/other_user}",
          "gists_url": "https://api.github.com/users/MBaesken/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MBaesken/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MBaesken/subscriptions",
          "organizations_url": "https://api.github.com/users/MBaesken/orgs",
          "repos_url": "https://api.github.com/users/MBaesken/repos",
          "events_url": "https://api.github.com/users/MBaesken/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MBaesken/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "MBaesken",
          "id": 26144289,
          "node_id": "MDQ6VXNlcjI2MTQ0Mjg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/26144289?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MBaesken",
          "html_url": "https://github.com/MBaesken",
          "followers_url": "https://api.github.com/users/MBaesken/followers",
          "following_url": "https://api.github.com/users/MBaesken/following{/other_user}",
          "gists_url": "https://api.github.com/users/MBaesken/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MBaesken/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MBaesken/subscriptions",
          "organizations_url": "https://api.github.com/users/MBaesken/orgs",
          "repos_url": "https://api.github.com/users/MBaesken/repos",
          "events_url": "https://api.github.com/users/MBaesken/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MBaesken/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "fa8feb4253b1c0cd3e1d6568366534ceea36bfd5",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/fa8feb4253b1c0cd3e1d6568366534ceea36bfd5",
            "html_url": "https://github.com/adoptium/jdk17u/commit/fa8feb4253b1c0cd3e1d6568366534ceea36bfd5"
          }
        ]
      },
      {
        "sha": "14d7e3ce293514caa8921235b4fd891b2e7e0146",
        "node_id": "C_kwDOF886Z9oAKDE0ZDdlM2NlMjkzNTE0Y2FhODkyMTIzNWI0ZmQ4OTFiMmU3ZTAxNDY",
        "commit": {
          "author": {
            "name": "Dmitry Chuyko",
            "email": "dchuyko@openjdk.org",
            "date": "2022-09-28T15:07:53Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-28T15:07:53Z"
          },
          "message": "8287425: Remove unnecessary register push for MacroAssembler::check_klass_subtype_slow_path\n\nReviewed-by: phh\nBackport-of: b5a646ee6cfd432cef6b7e69a177959227a38ace",
          "tree": {
            "sha": "bbb7a190ed94b63dbdf5fe90356ca0b4cbe7261c",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/bbb7a190ed94b63dbdf5fe90356ca0b4cbe7261c"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/14d7e3ce293514caa8921235b4fd891b2e7e0146",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/14d7e3ce293514caa8921235b4fd891b2e7e0146",
        "html_url": "https://github.com/adoptium/jdk17u/commit/14d7e3ce293514caa8921235b4fd891b2e7e0146",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/14d7e3ce293514caa8921235b4fd891b2e7e0146/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "742556429d3e4b9bc4f38cfd66455b610b0cc1b3",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/742556429d3e4b9bc4f38cfd66455b610b0cc1b3",
            "html_url": "https://github.com/adoptium/jdk17u/commit/742556429d3e4b9bc4f38cfd66455b610b0cc1b3"
          }
        ]
      },
      {
        "sha": "1b988002dc64b132d2066bc299ecdc85526d537e",
        "node_id": "C_kwDOF886Z9oAKDFiOTg4MDAyZGM2NGIxMzJkMjA2NmJjMjk5ZWNkYzg1NTI2ZDUzN2U",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-29T09:14:44Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-29T09:14:44Z"
          },
          "message": "8289559: java/awt/a11y/AccessibleJPopupMenuTest.java test fails with java.lang.NullPointerException\n\nBackport-of: 3216d198f382e991522600086bb2691abfe5f067",
          "tree": {
            "sha": "e08dc1ce741692cbc7c3018caf3a5561cc967dfd",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/e08dc1ce741692cbc7c3018caf3a5561cc967dfd"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/1b988002dc64b132d2066bc299ecdc85526d537e",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/1b988002dc64b132d2066bc299ecdc85526d537e",
        "html_url": "https://github.com/adoptium/jdk17u/commit/1b988002dc64b132d2066bc299ecdc85526d537e",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/1b988002dc64b132d2066bc299ecdc85526d537e/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "14d7e3ce293514caa8921235b4fd891b2e7e0146",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/14d7e3ce293514caa8921235b4fd891b2e7e0146",
            "html_url": "https://github.com/adoptium/jdk17u/commit/14d7e3ce293514caa8921235b4fd891b2e7e0146"
          }
        ]
      },
      {
        "sha": "461c6e85220975e4eb6b74c2e46cb97ce5cbf268",
        "node_id": "C_kwDOF886Z9oAKDQ2MWM2ZTg1MjIwOTc1ZTRlYjZiNzRjMmU0NmNiOTdjZTVjYmYyNjg",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-29T09:16:30Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-09-29T09:16:30Z"
          },
          "message": "8285836: sun/net/www/http/KeepAliveCache/KeepAliveProperty.java failed with \"RuntimeException: Failed in server\"\n\nBackport-of: af529be069b651808310c3c37e2167d216979f69",
          "tree": {
            "sha": "b3fe5d2fa07ae564b9f23e4c68a17e6f338ac4a1",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/b3fe5d2fa07ae564b9f23e4c68a17e6f338ac4a1"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/461c6e85220975e4eb6b74c2e46cb97ce5cbf268",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/461c6e85220975e4eb6b74c2e46cb97ce5cbf268",
        "html_url": "https://github.com/adoptium/jdk17u/commit/461c6e85220975e4eb6b74c2e46cb97ce5cbf268",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/461c6e85220975e4eb6b74c2e46cb97ce5cbf268/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "1b988002dc64b132d2066bc299ecdc85526d537e",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/1b988002dc64b132d2066bc299ecdc85526d537e",
            "html_url": "https://github.com/adoptium/jdk17u/commit/1b988002dc64b132d2066bc299ecdc85526d537e"
          }
        ]
      },
      {
        "sha": "796628ebdd7be5904388d7c31e5f76dc60f0ebbe",
        "node_id": "C_kwDOF886Z9oAKDc5NjYyOGViZGQ3YmU1OTA0Mzg4ZDdjMzFlNWY3NmRjNjBmMGViYmU",
        "commit": {
          "author": {
            "name": "Victor Rudometov",
            "email": "vrudomet@openjdk.org",
            "date": "2022-09-29T22:03:11Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-09-29T22:03:11Z"
          },
          "message": "8287076: Document.normalizeDocument() produces different results\n\nReviewed-by: phh\nBackport-of: 1f9521e6cb2f701f8712b4ec941ff1dbb45dad4e",
          "tree": {
            "sha": "9f4932d08d703fce2f18a715852d30a99dc2b264",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/9f4932d08d703fce2f18a715852d30a99dc2b264"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/796628ebdd7be5904388d7c31e5f76dc60f0ebbe",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/796628ebdd7be5904388d7c31e5f76dc60f0ebbe",
        "html_url": "https://github.com/adoptium/jdk17u/commit/796628ebdd7be5904388d7c31e5f76dc60f0ebbe",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/796628ebdd7be5904388d7c31e5f76dc60f0ebbe/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "461c6e85220975e4eb6b74c2e46cb97ce5cbf268",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/461c6e85220975e4eb6b74c2e46cb97ce5cbf268",
            "html_url": "https://github.com/adoptium/jdk17u/commit/461c6e85220975e4eb6b74c2e46cb97ce5cbf268"
          }
        ]
      },
      {
        "sha": "beb2ca22c90388120bff77a8a46f6d7b065da7f2",
        "node_id": "C_kwDOF886Z9oAKGJlYjJjYTIyYzkwMzg4MTIwYmZmNzdhOGE0NmY2ZDdiMDY1ZGE3ZjI",
        "commit": {
          "author": {
            "name": "Roman Marchenko",
            "email": "rmarchenko@azul.com",
            "date": "2022-09-30T13:11:29Z"
          },
          "committer": {
            "name": "Yuri Nesterenko",
            "email": "yan@openjdk.org",
            "date": "2022-09-30T13:11:29Z"
          },
          "message": "8283059: Uninitialized warning in check_code.c with GCC 11.2\n\nBackport-of: d8893fad23d1ee6841336b96c34599643edb81ce",
          "tree": {
            "sha": "66a4c46d43c932545197b6549c4f39c98645df77",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/66a4c46d43c932545197b6549c4f39c98645df77"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/beb2ca22c90388120bff77a8a46f6d7b065da7f2",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/beb2ca22c90388120bff77a8a46f6d7b065da7f2",
        "html_url": "https://github.com/adoptium/jdk17u/commit/beb2ca22c90388120bff77a8a46f6d7b065da7f2",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/beb2ca22c90388120bff77a8a46f6d7b065da7f2/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "796628ebdd7be5904388d7c31e5f76dc60f0ebbe",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/796628ebdd7be5904388d7c31e5f76dc60f0ebbe",
            "html_url": "https://github.com/adoptium/jdk17u/commit/796628ebdd7be5904388d7c31e5f76dc60f0ebbe"
          }
        ]
      },
      {
        "sha": "3bcdb666288229f7fc84f9a8d68e9f7fec897200",
        "node_id": "C_kwDOF886Z9oAKDNiY2RiNjY2Mjg4MjI5ZjdmYzg0ZjlhOGQ2OGU5ZjdmZWM4OTcyMDA",
        "commit": {
          "author": {
            "name": "Victor Rudometov",
            "email": "vrudomet@openjdk.org",
            "date": "2022-10-03T18:24:36Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-10-03T18:24:36Z"
          },
          "message": "8293578: Duplicate ldc generated by javac\n\nBackport-of: 39cd1635bf07f42857e1a704734db66b2c2fa882",
          "tree": {
            "sha": "8623f224238efcd30d6f1d40f9a43955cce43f5a",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/8623f224238efcd30d6f1d40f9a43955cce43f5a"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/3bcdb666288229f7fc84f9a8d68e9f7fec897200",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3bcdb666288229f7fc84f9a8d68e9f7fec897200",
        "html_url": "https://github.com/adoptium/jdk17u/commit/3bcdb666288229f7fc84f9a8d68e9f7fec897200",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/3bcdb666288229f7fc84f9a8d68e9f7fec897200/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "beb2ca22c90388120bff77a8a46f6d7b065da7f2",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/beb2ca22c90388120bff77a8a46f6d7b065da7f2",
            "html_url": "https://github.com/adoptium/jdk17u/commit/beb2ca22c90388120bff77a8a46f6d7b065da7f2"
          }
        ]
      },
      {
        "sha": "67f31bb90b62fafc71e18c4c10e0f7e1b6896dc4",
        "node_id": "C_kwDOF886Z9oAKDY3ZjMxYmI5MGI2MmZhZmM3MWUxOGM0YzEwZTBmN2UxYjY4OTZkYzQ",
        "commit": {
          "author": {
            "name": "Zdenek Zambersky",
            "email": "zzambers@redhat.com",
            "date": "2022-10-03T19:43:14Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-03T19:43:14Z"
          },
          "message": "8293232: Fix race condition in pkcs11 SessionManager\n\nBackport-of: 1e031e6a5886fba3009d8e5fa62416fe15a901b6",
          "tree": {
            "sha": "dce527a64993a631c3a523ad74fd5ab3ee1f6d6f",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/dce527a64993a631c3a523ad74fd5ab3ee1f6d6f"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/67f31bb90b62fafc71e18c4c10e0f7e1b6896dc4",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/67f31bb90b62fafc71e18c4c10e0f7e1b6896dc4",
        "html_url": "https://github.com/adoptium/jdk17u/commit/67f31bb90b62fafc71e18c4c10e0f7e1b6896dc4",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/67f31bb90b62fafc71e18c4c10e0f7e1b6896dc4/comments",
        "author": {
          "login": "zzambers",
          "id": 27726939,
          "node_id": "MDQ6VXNlcjI3NzI2OTM5",
          "avatar_url": "https://avatars.githubusercontent.com/u/27726939?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/zzambers",
          "html_url": "https://github.com/zzambers",
          "followers_url": "https://api.github.com/users/zzambers/followers",
          "following_url": "https://api.github.com/users/zzambers/following{/other_user}",
          "gists_url": "https://api.github.com/users/zzambers/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/zzambers/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/zzambers/subscriptions",
          "organizations_url": "https://api.github.com/users/zzambers/orgs",
          "repos_url": "https://api.github.com/users/zzambers/repos",
          "events_url": "https://api.github.com/users/zzambers/events{/privacy}",
          "received_events_url": "https://api.github.com/users/zzambers/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "3bcdb666288229f7fc84f9a8d68e9f7fec897200",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/3bcdb666288229f7fc84f9a8d68e9f7fec897200",
            "html_url": "https://github.com/adoptium/jdk17u/commit/3bcdb666288229f7fc84f9a8d68e9f7fec897200"
          }
        ]
      },
      {
        "sha": "9483069f53cb53a799a19fa0be1a9d9cfc6b7f09",
        "node_id": "C_kwDOF886Z9oAKDk0ODMwNjlmNTNjYjUzYTc5OWExOWZhMGJlMWE5ZDljZmM2YjdmMDk",
        "commit": {
          "author": {
            "name": "Yi-Fan Tsai",
            "email": "yftsai@amazon.com",
            "date": "2022-10-03T21:34:40Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-10-03T21:34:40Z"
          },
          "message": "8282528: AArch64: Incorrect replicate2L_zero rule\n\nReviewed-by: phh\nBackport-of: c35590282d54d8388f2f7501a30365e0a912bfda",
          "tree": {
            "sha": "a06d3ba559f8830c0fd69696e972336f52ecca63",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/a06d3ba559f8830c0fd69696e972336f52ecca63"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/9483069f53cb53a799a19fa0be1a9d9cfc6b7f09",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/9483069f53cb53a799a19fa0be1a9d9cfc6b7f09",
        "html_url": "https://github.com/adoptium/jdk17u/commit/9483069f53cb53a799a19fa0be1a9d9cfc6b7f09",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/9483069f53cb53a799a19fa0be1a9d9cfc6b7f09/comments",
        "author": {
          "login": "yftsai",
          "id": 5721497,
          "node_id": "MDQ6VXNlcjU3MjE0OTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5721497?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/yftsai",
          "html_url": "https://github.com/yftsai",
          "followers_url": "https://api.github.com/users/yftsai/followers",
          "following_url": "https://api.github.com/users/yftsai/following{/other_user}",
          "gists_url": "https://api.github.com/users/yftsai/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/yftsai/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/yftsai/subscriptions",
          "organizations_url": "https://api.github.com/users/yftsai/orgs",
          "repos_url": "https://api.github.com/users/yftsai/repos",
          "events_url": "https://api.github.com/users/yftsai/events{/privacy}",
          "received_events_url": "https://api.github.com/users/yftsai/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": null,
        "parents": [
          {
            "sha": "67f31bb90b62fafc71e18c4c10e0f7e1b6896dc4",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/67f31bb90b62fafc71e18c4c10e0f7e1b6896dc4",
            "html_url": "https://github.com/adoptium/jdk17u/commit/67f31bb90b62fafc71e18c4c10e0f7e1b6896dc4"
          }
        ]
      },
      {
        "sha": "90cc8ac9398ff300f6d74383ea84fd82552f1c5d",
        "node_id": "C_kwDOF886Z9oAKDkwY2M4YWM5Mzk4ZmYzMDBmNmQ3NDM4M2VhODRmZDgyNTUyZjFjNWQ",
        "commit": {
          "author": {
            "name": "Martin Doerr",
            "email": "mdoerr@openjdk.org",
            "date": "2022-10-04T10:33:10Z"
          },
          "committer": {
            "name": "Martin Doerr",
            "email": "mdoerr@openjdk.org",
            "date": "2022-10-04T10:33:10Z"
          },
          "message": "8293998: [PPC64] JfrGetCallTrace: assert(_pc != nullptr) failed: must have PC\n\nReviewed-by: phh\nBackport-of: 14c6ac457d319a2e7f9cc9e7355c81c421a065dd",
          "tree": {
            "sha": "6625b372937565360a3e0261a56e9033f3144ae5",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/6625b372937565360a3e0261a56e9033f3144ae5"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/90cc8ac9398ff300f6d74383ea84fd82552f1c5d",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/90cc8ac9398ff300f6d74383ea84fd82552f1c5d",
        "html_url": "https://github.com/adoptium/jdk17u/commit/90cc8ac9398ff300f6d74383ea84fd82552f1c5d",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/90cc8ac9398ff300f6d74383ea84fd82552f1c5d/comments",
        "author": {
          "login": "TheRealMDoerr",
          "id": 44297768,
          "node_id": "MDQ6VXNlcjQ0Mjk3NzY4",
          "avatar_url": "https://avatars.githubusercontent.com/u/44297768?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheRealMDoerr",
          "html_url": "https://github.com/TheRealMDoerr",
          "followers_url": "https://api.github.com/users/TheRealMDoerr/followers",
          "following_url": "https://api.github.com/users/TheRealMDoerr/following{/other_user}",
          "gists_url": "https://api.github.com/users/TheRealMDoerr/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TheRealMDoerr/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TheRealMDoerr/subscriptions",
          "organizations_url": "https://api.github.com/users/TheRealMDoerr/orgs",
          "repos_url": "https://api.github.com/users/TheRealMDoerr/repos",
          "events_url": "https://api.github.com/users/TheRealMDoerr/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TheRealMDoerr/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "TheRealMDoerr",
          "id": 44297768,
          "node_id": "MDQ6VXNlcjQ0Mjk3NzY4",
          "avatar_url": "https://avatars.githubusercontent.com/u/44297768?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheRealMDoerr",
          "html_url": "https://github.com/TheRealMDoerr",
          "followers_url": "https://api.github.com/users/TheRealMDoerr/followers",
          "following_url": "https://api.github.com/users/TheRealMDoerr/following{/other_user}",
          "gists_url": "https://api.github.com/users/TheRealMDoerr/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TheRealMDoerr/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TheRealMDoerr/subscriptions",
          "organizations_url": "https://api.github.com/users/TheRealMDoerr/orgs",
          "repos_url": "https://api.github.com/users/TheRealMDoerr/repos",
          "events_url": "https://api.github.com/users/TheRealMDoerr/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TheRealMDoerr/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "9483069f53cb53a799a19fa0be1a9d9cfc6b7f09",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/9483069f53cb53a799a19fa0be1a9d9cfc6b7f09",
            "html_url": "https://github.com/adoptium/jdk17u/commit/9483069f53cb53a799a19fa0be1a9d9cfc6b7f09"
          }
        ]
      },
      {
        "sha": "34d4bae26344a2197c5f7e822d681386e9c7b267",
        "node_id": "C_kwDOF886Z9oAKDM0ZDRiYWUyNjM0NGEyMTk3YzVmN2U4MjJkNjgxMzg2ZTljN2IyNjc",
        "commit": {
          "author": {
            "name": "Victor Rudometov",
            "email": "vrudomet@openjdk.org",
            "date": "2022-10-04T16:38:53Z"
          },
          "committer": {
            "name": "Paul Hohensee",
            "email": "phh@openjdk.org",
            "date": "2022-10-04T16:38:53Z"
          },
          "message": "8290781: Segfault at PhaseIdealLoop::clone_loop_handle_data_uses\n\nBackport-of: 4c90e87a6fa83a66fdb8767b999879600629f1f6",
          "tree": {
            "sha": "513737a54a4fccf8f9c976ee9484feb7e119fc0b",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/513737a54a4fccf8f9c976ee9484feb7e119fc0b"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/34d4bae26344a2197c5f7e822d681386e9c7b267",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/34d4bae26344a2197c5f7e822d681386e9c7b267",
        "html_url": "https://github.com/adoptium/jdk17u/commit/34d4bae26344a2197c5f7e822d681386e9c7b267",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/34d4bae26344a2197c5f7e822d681386e9c7b267/comments",
        "author": null,
        "committer": null,
        "parents": [
          {
            "sha": "90cc8ac9398ff300f6d74383ea84fd82552f1c5d",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/90cc8ac9398ff300f6d74383ea84fd82552f1c5d",
            "html_url": "https://github.com/adoptium/jdk17u/commit/90cc8ac9398ff300f6d74383ea84fd82552f1c5d"
          }
        ]
      },
      {
        "sha": "0464eaf90bf3bcd7f2df979c9d0f8d9d406cb80c",
        "node_id": "C_kwDOF886Z9oAKDA0NjRlYWY5MGJmM2JjZDdmMmRmOTc5YzlkMGY4ZDlkNDA2Y2I4MGM",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:28:54Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:28:54Z"
          },
          "message": "8288651: CDS test HelloUnload.java should not use literal string as ClassLoader name\n\nBackport-of: e322e77e9535fc3f37b409a1c805e9f6b728377a",
          "tree": {
            "sha": "3d484d1de4a175f78733c11ab529673bfeac676b",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/3d484d1de4a175f78733c11ab529673bfeac676b"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/0464eaf90bf3bcd7f2df979c9d0f8d9d406cb80c",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/0464eaf90bf3bcd7f2df979c9d0f8d9d406cb80c",
        "html_url": "https://github.com/adoptium/jdk17u/commit/0464eaf90bf3bcd7f2df979c9d0f8d9d406cb80c",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/0464eaf90bf3bcd7f2df979c9d0f8d9d406cb80c/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "34d4bae26344a2197c5f7e822d681386e9c7b267",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/34d4bae26344a2197c5f7e822d681386e9c7b267",
            "html_url": "https://github.com/adoptium/jdk17u/commit/34d4bae26344a2197c5f7e822d681386e9c7b267"
          }
        ]
      },
      {
        "sha": "00cab3f062b78134346a7ad3750a526267446dda",
        "node_id": "C_kwDOF886Z9oAKDAwY2FiM2YwNjJiNzgxMzQzNDZhN2FkMzc1MGE1MjYyNjc0NDZkZGE",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:30:52Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:30:52Z"
          },
          "message": "8289257: Some custom loader tests failed due to symbol refcount not decremented\n\nBackport-of: c43bdf716596053ebe473c3b3bd5cf89482b9b01",
          "tree": {
            "sha": "6c6059fca790d1e07bd277bbf2c9e0561fbd8c3d",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/6c6059fca790d1e07bd277bbf2c9e0561fbd8c3d"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/00cab3f062b78134346a7ad3750a526267446dda",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/00cab3f062b78134346a7ad3750a526267446dda",
        "html_url": "https://github.com/adoptium/jdk17u/commit/00cab3f062b78134346a7ad3750a526267446dda",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/00cab3f062b78134346a7ad3750a526267446dda/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "0464eaf90bf3bcd7f2df979c9d0f8d9d406cb80c",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/0464eaf90bf3bcd7f2df979c9d0f8d9d406cb80c",
            "html_url": "https://github.com/adoptium/jdk17u/commit/0464eaf90bf3bcd7f2df979c9d0f8d9d406cb80c"
          }
        ]
      },
      {
        "sha": "8b83fa089e031d40f57da4a323cd80a4520b4cde",
        "node_id": "C_kwDOF886Z9oAKDhiODNmYTA4OWUwMzFkNDBmNTdkYTRhMzIzY2Q4MGE0NTIwYjRjZGU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:32:38Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:32:38Z"
          },
          "message": "8290687: serviceability/sa/TestClassDump.java could leave files owned by root on macOS\n\nBackport-of: 59d85bad348f7787533ff38942dab2811c4eb623",
          "tree": {
            "sha": "74204403c5d710389c01100de1b6a19b1a484a43",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/74204403c5d710389c01100de1b6a19b1a484a43"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/8b83fa089e031d40f57da4a323cd80a4520b4cde",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/8b83fa089e031d40f57da4a323cd80a4520b4cde",
        "html_url": "https://github.com/adoptium/jdk17u/commit/8b83fa089e031d40f57da4a323cd80a4520b4cde",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/8b83fa089e031d40f57da4a323cd80a4520b4cde/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "00cab3f062b78134346a7ad3750a526267446dda",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/00cab3f062b78134346a7ad3750a526267446dda",
            "html_url": "https://github.com/adoptium/jdk17u/commit/00cab3f062b78134346a7ad3750a526267446dda"
          }
        ]
      },
      {
        "sha": "b513ba290bace332b9be5795cc8f0b0df66cfa2f",
        "node_id": "C_kwDOF886Z9oAKGI1MTNiYTI5MGJhY2UzMzJiOWJlNTc5NWNjOGYwYjBkZjY2Y2ZhMmY",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:36:56Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:36:56Z"
          },
          "message": "8290705: StringConcat::validate_mem_flow asserts with \"unexpected user: StoreI\"\n\nBackport-of: 61e072d11c8e0cb5879bb733ed1fdd2144326bfd",
          "tree": {
            "sha": "df7ebbd10da6ae75665ea45b8830c765e1cb63a2",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/df7ebbd10da6ae75665ea45b8830c765e1cb63a2"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/b513ba290bace332b9be5795cc8f0b0df66cfa2f",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b513ba290bace332b9be5795cc8f0b0df66cfa2f",
        "html_url": "https://github.com/adoptium/jdk17u/commit/b513ba290bace332b9be5795cc8f0b0df66cfa2f",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/b513ba290bace332b9be5795cc8f0b0df66cfa2f/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "8b83fa089e031d40f57da4a323cd80a4520b4cde",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/8b83fa089e031d40f57da4a323cd80a4520b4cde",
            "html_url": "https://github.com/adoptium/jdk17u/commit/8b83fa089e031d40f57da4a323cd80a4520b4cde"
          }
        ]
      },
      {
        "sha": "d4a0c1821146aee02cb29563929260513d23fd45",
        "node_id": "C_kwDOF886Z9oAKGQ0YTBjMTgyMTE0NmFlZTAyY2IyOTU2MzkyOTI2MDUxM2QyM2ZkNDU",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:45:14Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:45:14Z"
          },
          "message": "8169187: [macosx] Aqua: java/awt/image/multiresolution/MultiresolutionIconTest.java\n\nBackport-of: 90257f95058626196339c444937f037516dbd21e",
          "tree": {
            "sha": "422cffb7dceaf7933b26d4586239302a12bd19d7",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/422cffb7dceaf7933b26d4586239302a12bd19d7"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/d4a0c1821146aee02cb29563929260513d23fd45",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/d4a0c1821146aee02cb29563929260513d23fd45",
        "html_url": "https://github.com/adoptium/jdk17u/commit/d4a0c1821146aee02cb29563929260513d23fd45",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/d4a0c1821146aee02cb29563929260513d23fd45/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "b513ba290bace332b9be5795cc8f0b0df66cfa2f",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/b513ba290bace332b9be5795cc8f0b0df66cfa2f",
            "html_url": "https://github.com/adoptium/jdk17u/commit/b513ba290bace332b9be5795cc8f0b0df66cfa2f"
          }
        ]
      },
      {
        "sha": "ed3b13aadcebf4b58472231a8ec788c1408c3779",
        "node_id": "C_kwDOF886Z9oAKGVkM2IxM2FhZGNlYmY0YjU4NDcyMjMxYThlYzc4OGMxNDA4YzM3Nzk",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:52:04Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-04T18:52:04Z"
          },
          "message": "8291459: JVM crash with GenerateOopMap::error_work(char const*, __va_list_tag*)\n\nBackport-of: 8d88be233bc0d27d78e51c4eff0ba1ee47f4617a",
          "tree": {
            "sha": "4109cd91a1282889b21bbab7d9c40ef83718989d",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/4109cd91a1282889b21bbab7d9c40ef83718989d"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/ed3b13aadcebf4b58472231a8ec788c1408c3779",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ed3b13aadcebf4b58472231a8ec788c1408c3779",
        "html_url": "https://github.com/adoptium/jdk17u/commit/ed3b13aadcebf4b58472231a8ec788c1408c3779",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/ed3b13aadcebf4b58472231a8ec788c1408c3779/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "d4a0c1821146aee02cb29563929260513d23fd45",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/d4a0c1821146aee02cb29563929260513d23fd45",
            "html_url": "https://github.com/adoptium/jdk17u/commit/d4a0c1821146aee02cb29563929260513d23fd45"
          }
        ]
      },
      {
        "sha": "19ccadf58b74ff81333d6c89f12e25b7652f295f",
        "node_id": "C_kwDOF886Z9oAKDE5Y2NhZGY1OGI3NGZmODEzMzNkNmM4OWYxMmUyNWI3NjUyZjI5NWY",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:51:13Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:51:13Z"
          },
          "message": "8291775: C2: assert(r != __null && r->is_Region()) failed: this phi must have a region\n\nBackport-of: 32d675ca607d341ca3428efc32e212701775e3c6",
          "tree": {
            "sha": "6cbaee0fc4f13bacfb446526f3be7d9149ce4968",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/6cbaee0fc4f13bacfb446526f3be7d9149ce4968"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/19ccadf58b74ff81333d6c89f12e25b7652f295f",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/19ccadf58b74ff81333d6c89f12e25b7652f295f",
        "html_url": "https://github.com/adoptium/jdk17u/commit/19ccadf58b74ff81333d6c89f12e25b7652f295f",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/19ccadf58b74ff81333d6c89f12e25b7652f295f/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "ed3b13aadcebf4b58472231a8ec788c1408c3779",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/ed3b13aadcebf4b58472231a8ec788c1408c3779",
            "html_url": "https://github.com/adoptium/jdk17u/commit/ed3b13aadcebf4b58472231a8ec788c1408c3779"
          }
        ]
      },
      {
        "sha": "8f28d66726a8b694e7933d83da3e64d34df59018",
        "node_id": "C_kwDOF886Z9oAKDhmMjhkNjY3MjZhOGI2OTRlNzkzM2Q4M2RhM2U2NGQzNGRmNTkwMTg",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:53:42Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:53:42Z"
          },
          "message": "8290451: Incorrect result when switching to C2 OSR compilation from C1\n\nBackport-of: afa5d4ced38b7f3752932c28af96d8fc600d1df7",
          "tree": {
            "sha": "d01f22a6605bb4e39677094f26d4683119562532",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/d01f22a6605bb4e39677094f26d4683119562532"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/8f28d66726a8b694e7933d83da3e64d34df59018",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/8f28d66726a8b694e7933d83da3e64d34df59018",
        "html_url": "https://github.com/adoptium/jdk17u/commit/8f28d66726a8b694e7933d83da3e64d34df59018",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/8f28d66726a8b694e7933d83da3e64d34df59018/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "19ccadf58b74ff81333d6c89f12e25b7652f295f",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/19ccadf58b74ff81333d6c89f12e25b7652f295f",
            "html_url": "https://github.com/adoptium/jdk17u/commit/19ccadf58b74ff81333d6c89f12e25b7652f295f"
          }
        ]
      },
      {
        "sha": "cfc8771e9014787bc07cec94e791805af7889eef",
        "node_id": "C_kwDOF886Z9oAKGNmYzg3NzFlOTAxNDc4N2JjMDdjZWM5NGU3OTE4MDVhZjc4ODllZWY",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:55:23Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:55:23Z"
          },
          "message": "8290529: C2: assert(BoolTest(btest).is_canonical()) failure\n\nReviewed-by: mdoerr\nBackport-of: 77e21c57ce00463db4cc3d87f93729cbfe2c96b4",
          "tree": {
            "sha": "f2ba0a6454de210337a57e443adb1a79cc550195",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/f2ba0a6454de210337a57e443adb1a79cc550195"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/cfc8771e9014787bc07cec94e791805af7889eef",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/cfc8771e9014787bc07cec94e791805af7889eef",
        "html_url": "https://github.com/adoptium/jdk17u/commit/cfc8771e9014787bc07cec94e791805af7889eef",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/cfc8771e9014787bc07cec94e791805af7889eef/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "8f28d66726a8b694e7933d83da3e64d34df59018",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/8f28d66726a8b694e7933d83da3e64d34df59018",
            "html_url": "https://github.com/adoptium/jdk17u/commit/8f28d66726a8b694e7933d83da3e64d34df59018"
          }
        ]
      },
      {
        "sha": "7f4fa239dbca6ae743236e11122e302db96d54f3",
        "node_id": "C_kwDOF886Z9oAKDdmNGZhMjM5ZGJjYTZhZTc0MzIzNmUxMTEyMmUzMDJkYjk2ZDU0ZjM",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:56:59Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:56:59Z"
          },
          "message": "8292385: assert(ctrl == kit.control()) failed: Control flow was added although the intrinsic bailed out\n\nBackport-of: 5757e2129ef23f6aa11a9a29d77ae86971b401c0",
          "tree": {
            "sha": "4642761a504a3f87f9d222bdf235f2952a669745",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/4642761a504a3f87f9d222bdf235f2952a669745"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/7f4fa239dbca6ae743236e11122e302db96d54f3",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/7f4fa239dbca6ae743236e11122e302db96d54f3",
        "html_url": "https://github.com/adoptium/jdk17u/commit/7f4fa239dbca6ae743236e11122e302db96d54f3",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/7f4fa239dbca6ae743236e11122e302db96d54f3/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "cfc8771e9014787bc07cec94e791805af7889eef",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/cfc8771e9014787bc07cec94e791805af7889eef",
            "html_url": "https://github.com/adoptium/jdk17u/commit/cfc8771e9014787bc07cec94e791805af7889eef"
          }
        ]
      },
      {
        "sha": "6882bd36fff83c80b4a4579682128d2b25d4f11d",
        "node_id": "C_kwDOF886Z9oAKDY4ODJiZDM2ZmZmODNjODBiNGE0NTc5NjgyMTI4ZDJiMjVkNGYxMWQ",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:58:25Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T06:58:25Z"
          },
          "message": "8293044: C1: Missing access check on non-accessible class\n\nBackport-of: 005b49bb78a468d4e372e6f5fa48bb0db4fd73c2",
          "tree": {
            "sha": "289e13b63b36aad1013a23bb0c4f9f0199ad55de",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/289e13b63b36aad1013a23bb0c4f9f0199ad55de"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/6882bd36fff83c80b4a4579682128d2b25d4f11d",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6882bd36fff83c80b4a4579682128d2b25d4f11d",
        "html_url": "https://github.com/adoptium/jdk17u/commit/6882bd36fff83c80b4a4579682128d2b25d4f11d",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/6882bd36fff83c80b4a4579682128d2b25d4f11d/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "7f4fa239dbca6ae743236e11122e302db96d54f3",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/7f4fa239dbca6ae743236e11122e302db96d54f3",
            "html_url": "https://github.com/adoptium/jdk17u/commit/7f4fa239dbca6ae743236e11122e302db96d54f3"
          }
        ]
      },
      {
        "sha": "673b5056f83fc9b8d5aface502046be4bf6cc8d4",
        "node_id": "C_kwDOF886Z9oAKDY3M2I1MDU2ZjgzZmM5YjhkNWFmYWNlNTAyMDQ2YmU0YmY2Y2M4ZDQ",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T07:10:13Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T07:10:13Z"
          },
          "message": "8293816: CI: ciBytecodeStream::get_klass() is not consistent\n\nBackport-of: 746f5f589db5c1036f15fa47f8a48b2a12c921ce",
          "tree": {
            "sha": "c5c240a1c70ab569f8eca9c2608837cf52b22b59",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/c5c240a1c70ab569f8eca9c2608837cf52b22b59"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/673b5056f83fc9b8d5aface502046be4bf6cc8d4",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/673b5056f83fc9b8d5aface502046be4bf6cc8d4",
        "html_url": "https://github.com/adoptium/jdk17u/commit/673b5056f83fc9b8d5aface502046be4bf6cc8d4",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/673b5056f83fc9b8d5aface502046be4bf6cc8d4/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "6882bd36fff83c80b4a4579682128d2b25d4f11d",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/6882bd36fff83c80b4a4579682128d2b25d4f11d",
            "html_url": "https://github.com/adoptium/jdk17u/commit/6882bd36fff83c80b4a4579682128d2b25d4f11d"
          }
        ]
      },
      {
        "sha": "29fea3fd3425771f52f678dc2443a453e873dd4d",
        "node_id": "C_kwDOF886Z9oAKDI5ZmVhM2ZkMzQyNTc3MWY1MmY2NzhkYzI0NDNhNDUzZTg3M2RkNGQ",
        "commit": {
          "author": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T07:11:11Z"
          },
          "committer": {
            "name": "Goetz Lindenmaier",
            "email": "goetz@openjdk.org",
            "date": "2022-10-05T07:11:11Z"
          },
          "message": "8291599: Assertion in PhaseIdealLoop::skeleton_predicate_has_opaque after JDK-8289127\n\nBackport-of: 37df5f56259429482cfdbe38e8b6256f1efaf9e8",
          "tree": {
            "sha": "116d408c2ad3671113f867f96352b2c8d8b43d36",
            "url": "https://api.github.com/repos/adoptium/jdk17u/git/trees/116d408c2ad3671113f867f96352b2c8d8b43d36"
          },
          "url": "https://api.github.com/repos/adoptium/jdk17u/git/commits/29fea3fd3425771f52f678dc2443a453e873dd4d",
          "comment_count": 0,
          "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
          }
        },
        "url": "https://api.github.com/repos/adoptium/jdk17u/commits/29fea3fd3425771f52f678dc2443a453e873dd4d",
        "html_url": "https://github.com/adoptium/jdk17u/commit/29fea3fd3425771f52f678dc2443a453e873dd4d",
        "comments_url": "https://api.github.com/repos/adoptium/jdk17u/commits/29fea3fd3425771f52f678dc2443a453e873dd4d/comments",
        "author": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "committer": {
          "login": "GoeLin",
          "id": 24567974,
          "node_id": "MDQ6VXNlcjI0NTY3OTc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/24567974?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GoeLin",
          "html_url": "https://github.com/GoeLin",
          "followers_url": "https://api.github.com/users/GoeLin/followers",
          "following_url": "https://api.github.com/users/GoeLin/following{/other_user}",
          "gists_url": "https://api.github.com/users/GoeLin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GoeLin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GoeLin/subscriptions",
          "organizations_url": "https://api.github.com/users/GoeLin/orgs",
          "repos_url": "https://api.github.com/users/GoeLin/repos",
          "events_url": "https://api.github.com/users/GoeLin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GoeLin/received_events",
          "type": "User",
          "site_admin": false
        },
        "parents": [
          {
            "sha": "673b5056f83fc9b8d5aface502046be4bf6cc8d4",
            "url": "https://api.github.com/repos/adoptium/jdk17u/commits/673b5056f83fc9b8d5aface502046be4bf6cc8d4",
            "html_url": "https://github.com/adoptium/jdk17u/commit/673b5056f83fc9b8d5aface502046be4bf6cc8d4"
          }
        ]
      }
    ],
    "files": [
      {
        "sha": "5f648ffc0226bc50a0797c2e5005b76ab2d4cf79",
        "filename": ".github/actions/config/action.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fconfig%2Faction.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fconfig%2Faction.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Factions%2Fconfig%2Faction.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -42,5 +42,5 @@ runs:\n       run: |\n         # Extract value from configuration file\n         value=\"$(grep -h ${{ inputs.var }}= make/conf/github-actions.conf | cut -d '=' -f 2-)\"\n-        echo \"::set-output name=value::$value\"\n+        echo \"value=$value\" >> $GITHUB_OUTPUT\n       shell: bash"
      },
      {
        "sha": "3deb7f4b8f803f709a76bd1a10ba67d33388fe50",
        "filename": ".github/actions/do-build/action.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fdo-build%2Faction.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fdo-build%2Faction.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Factions%2Fdo-build%2Faction.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -61,7 +61,7 @@ runs:\n               $build_dir/make-support/failure-summary.log \\\n               $build_dir/make-support/failure-logs/* \\\n               failure-logs/ 2> /dev/null || true\n-          echo '::set-output name=failure::true'\n+          echo 'failure=true' >> $GITHUB_OUTPUT\n         fi\n       shell: bash\n "
      },
      {
        "sha": "19c3a0128f4d434214a0d50d15c36578e445dca6",
        "filename": ".github/actions/get-bootjdk/action.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fget-bootjdk%2Faction.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fget-bootjdk%2Faction.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Factions%2Fget-bootjdk%2Faction.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -42,7 +42,7 @@ runs:\n       run: |\n         # Convert platform name to upper case\n         platform_prefix=\"$(echo ${{ inputs.platform }} | tr [a-z-] [A-Z_])\"\n-        echo \"::set-output name=value::$platform_prefix\"\n+        echo \"value=$platform_prefix\" >> $GITHUB_OUTPUT\n       shell: bash\n \n     - name: 'Get URL configuration'\n@@ -105,5 +105,5 @@ runs:\n       id: path-name\n       run: |\n         # Export the path\n-        echo '::set-output name=path::bootjdk/jdk'\n+        echo 'path=bootjdk/jdk' >> $GITHUB_OUTPUT\n       shell: bash"
      },
      {
        "sha": "956e1520cfbaac533e32967ba5a6022102fc0c23",
        "filename": ".github/actions/get-bundles/action.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fget-bundles%2Faction.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fget-bundles%2Faction.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Factions%2Fget-bundles%2Faction.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -103,7 +103,7 @@ runs:\n           tests_dir=\"$(cygpath $tests_dir)\"\n         fi\n \n-        echo \"::set-output name=jdk::$jdk_dir\"\n-        echo \"::set-output name=symbols::$symbols_dir\"\n-        echo \"::set-output name=tests::$tests_dir\"\n+        echo \"jdk=$jdk_dir\" >> $GITHUB_OUTPUT\n+        echo \"symbols=$symbols_dir\" >> $GITHUB_OUTPUT\n+        echo \"tests=$tests_dir\" >> $GITHUB_OUTPUT\n       shell: bash"
      },
      {
        "sha": "76faaea3bc9bb76a925a74ebbb112a05d419eba2",
        "filename": ".github/actions/get-gtest/action.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fget-gtest%2Faction.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fget-gtest%2Faction.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Factions%2Fget-gtest%2Faction.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -50,5 +50,5 @@ runs:\n       id: path-name\n       run: |\n         # Export the path\n-        echo '::set-output name=path::gtest'\n+        echo 'path=gtest' >> $GITHUB_OUTPUT\n       shell: bash"
      },
      {
        "sha": "7c49b1054ecd595144c5f0c752a5330bb1bd55a7",
        "filename": ".github/actions/get-jtreg/action.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fget-jtreg%2Faction.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fget-jtreg%2Faction.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Factions%2Fget-jtreg%2Faction.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -68,5 +68,5 @@ runs:\n       id: path-name\n       run: |\n         # Export the path\n-        echo '::set-output name=path::jtreg/installed'\n+        echo 'path=jtreg/installed' >> $GITHUB_OUTPUT\n       shell: bash"
      },
      {
        "sha": "88f7f6e8107a517c624e15fa8d2dfc1583a3157b",
        "filename": ".github/actions/upload-bundles/action.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fupload-bundles%2Faction.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Factions%2Fupload-bundles%2Faction.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Factions%2Fupload-bundles%2Faction.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -62,9 +62,9 @@ runs:\n         fi\n \n         if [[ \"$jdk_bundle_zip$jdk_bundle_tar_gz$symbols_bundle$tests_bundle\" != \"\" ]]; then\n-          echo '::set-output name=bundles-found::true'\n+          echo 'bundles-found=true' >> $GITHUB_OUTPUT\n         else\n-          echo '::set-output name=bundles-found::false'\n+          echo 'bundles-found=false' >> $GITHUB_OUTPUT\n         fi\n       shell: bash\n "
      },
      {
        "sha": "d016cb38649fdd7d8f168f8da1224a85f8e491b6",
        "filename": ".github/scripts/gen-test-summary.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Fscripts%2Fgen-test-summary.sh",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Fscripts%2Fgen-test-summary.sh",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Fscripts%2Fgen-test-summary.sh?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -25,6 +25,7 @@\n #\n \n GITHUB_STEP_SUMMARY=\"$1\"\n+GITHUB_OUTPUT=\"$2\"\n \n test_suite_name=$(cat build/run-test-prebuilt/test-support/test-last-ids.txt)\n results_dir=build/run-test-prebuilt/test-results/$test_suite_name/text\n@@ -41,12 +42,12 @@ error_count=$(echo $errors | wc -w || true)\n \n if [[ \"$failures\" = \"\" && \"$errors\" = \"\" ]]; then\n   # We know something went wrong, but not what\n-  echo '::set-output name=error-message::Unspecified test suite failure. Please see log for job for details.'\n+  echo 'error-message=Unspecified test suite failure. Please see log for job for details.' >> $GITHUB_OUTPUT\n   exit 0\n fi\n \n-echo '::set-output name=failure::true'\n-echo \"::set-output name=error-message::Test run reported $failure_count test failure(s) and $error_count error(s). See summary for details.\"\n+echo 'failure=true' >> $GITHUB_OUTPUT\n+echo \"error-message=Test run reported $failure_count test failure(s) and $error_count error(s). See summary for details.\" >> $GITHUB_OUTPUT\n \n echo '### :boom: Test failures summary' >> $GITHUB_STEP_SUMMARY\n "
      },
      {
        "sha": "5b1a6e87280ad8e63c21cbb238d79c963da91fe1",
        "filename": ".github/workflows/build-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Fworkflows%2Fbuild-linux.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Fworkflows%2Fbuild-linux.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Fworkflows%2Fbuild-linux.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -89,7 +89,7 @@ jobs:\n         run: |\n           # Set a proper suffix for packages if using a different architecture\n           if [[ '${{ inputs.apt-architecture }}' != '' ]]; then\n-            echo '::set-output name=suffix:::${{ inputs.apt-architecture }}'\n+            echo 'suffix=:${{ inputs.apt-architecture }}' >> $GITHUB_OUTPUT\n           fi\n \n       # Upgrading apt to solve libc6 installation bugs, see JDK-8260460."
      },
      {
        "sha": "88b68eadb9c4c1dd39a49dbacb28a8e68e3623f1",
        "filename": ".github/workflows/main.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Fworkflows%2Fmain.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Fworkflows%2Fmain.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Fworkflows%2Fmain.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -104,14 +104,14 @@ jobs:\n             echo 'false'\n           }\n \n-          echo \"::set-output name=linux-x64::$(check_platform linux-x64 linux x64)\"\n-          echo \"::set-output name=linux-x86::$(check_platform linux-x86 linux x86)\"\n-          echo \"::set-output name=linux-x64-variants::$(check_platform linux-x64-variants variants)\"\n-          echo \"::set-output name=linux-cross-compile::$(check_platform linux-cross-compile cross-compile)\"\n-          echo \"::set-output name=macos-x64::$(check_platform macos-x64 macos x64)\"\n-          echo \"::set-output name=macos-aarch64::$(check_platform macos-aarch64 macos aarch64)\"\n-          echo \"::set-output name=windows-x64::$(check_platform windows-x64 windows x64)\"\n-          echo \"::set-output name=windows-aarch64::$(check_platform windows-aarch64 windows aarch64)\"\n+          echo \"linux-x64=$(check_platform linux-x64 linux x64)\" >> $GITHUB_OUTPUT\n+          echo \"linux-x86=$(check_platform linux-x86 linux x86)\" >> $GITHUB_OUTPUT\n+          echo \"linux-x64-variants=$(check_platform linux-x64-variants variants)\" >> $GITHUB_OUTPUT\n+          echo \"linux-cross-compile=$(check_platform linux-cross-compile cross-compile)\" >> $GITHUB_OUTPUT\n+          echo \"macos-x64=$(check_platform macos-x64 macos x64)\" >> $GITHUB_OUTPUT\n+          echo \"macos-aarch64=$(check_platform macos-aarch64 macos aarch64)\" >> $GITHUB_OUTPUT\n+          echo \"windows-x64=$(check_platform windows-x64 windows x64)\" >> $GITHUB_OUTPUT\n+          echo \"windows-aarch64=$(check_platform windows-aarch64 windows aarch64)\" >> $GITHUB_OUTPUT\n \n   ###\n   ### Build jobs"
      },
      {
        "sha": "81735dd71e6c404f668d551c1c3af752a8a149c2",
        "filename": ".github/workflows/test.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Fworkflows%2Ftest.yml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.github%2Fworkflows%2Ftest.yml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.github%2Fworkflows%2Ftest.yml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -138,9 +138,9 @@ jobs:\n           # We need a minimal PATH on Windows\n           # Set PATH to \"\", so just GITHUB_PATH is included\n           if [[ '${{ runner.os }}' == 'Windows' ]]; then\n-            echo \"::set-output name=value::\"\n+            echo \"value=\" >> $GITHUB_OUTPUT\n           else\n-            echo \"::set-output name=value::$PATH\"\n+            echo \"value=$PATH\" >> $GITHUB_OUTPUT\n           fi\n \n       - name: 'Run tests'\n@@ -154,7 +154,7 @@ jobs:\n           SYMBOLS_IMAGE_DIR=${{ steps.bundles.outputs.symbols-path }}\n           TEST_IMAGE_DIR=${{ steps.bundles.outputs.tests-path }}\n           JTREG='JAVA_OPTIONS=-XX:-CreateCoredumpOnCrash;VERBOSE=fail,error,time;KEYWORDS=!headful'\n-          && bash ./.github/scripts/gen-test-summary.sh \"$GITHUB_STEP_SUMMARY\"\n+          && bash ./.github/scripts/gen-test-summary.sh \"$GITHUB_STEP_SUMMARY\" \"$GITHUB_OUTPUT\"\n         env:\n           PATH: ${{ steps.path.outputs.value }}\n \n@@ -187,7 +187,7 @@ jobs:\n           fi\n \n           artifact_name=\"results-${{ inputs.platform }}-$(echo ${{ matrix.test-name }} | tr '/ ' '__')\"\n-          echo \"::set-output name=artifact-name::$artifact_name\"\n+          echo \"artifact-name=$artifact_name\" >> $GITHUB_OUTPUT\n         if: always()\n \n       - name: 'Upload test results'"
      },
      {
        "sha": "6787b23253522efe42871e4732d1bc1925d3aff0",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.gitignore",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.gitignore",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.gitignore?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -16,3 +16,5 @@ NashornProfile.txt\n **/JTreport/**\n **/JTwork/**\n /src/utils/LogCompilation/target/\n+/.project/\n+/.settings/"
      },
      {
        "sha": "28a08ac7a902045dfc6421ee2466ac4fdef91251",
        "filename": ".jcheck/conf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.jcheck%2Fconf",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/.jcheck%2Fconf",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/.jcheck%2Fconf?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,7 +1,7 @@\n [general]\n project=jdk-updates\n jbs=JDK\n-version=17.0.5\n+version=17.0.6\n \n [checks]\n error=author,committer,reviewers,merge,issues,executable,symlink,message,hg-tag,whitespace,problemlists"
      },
      {
        "sha": "9db5c404f38d07d4a240c6ab57fe7e8499242d60",
        "filename": "doc/building.html",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/doc%2Fbuilding.html",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/doc%2Fbuilding.html",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/doc%2Fbuilding.html?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -70,6 +70,9 @@ <h1 class=\"title\">Building the JDK</h1>\n <li><a href=\"#make-control-variables\">Make Control Variables</a></li>\n </ul></li>\n <li><a href=\"#running-tests\">Running Tests</a></li>\n+<li><a href=\"#signing\">Signing</a><ul>\n+<li><a href=\"#macos-1\">macOS</a></li>\n+</ul></li>\n <li><a href=\"#cross-compiling\">Cross-compiling</a><ul>\n <li><a href=\"#cross-compiling-the-easy-way-with-openjdk-devkits\">Cross compiling the easy way with OpenJDK devkits</a></li>\n <li><a href=\"#boot-jdk-and-build-jdk\">Boot JDK and Build JDK</a></li>\n@@ -488,7 +491,7 @@ <h4 id=\"general-make-control-variables\">General Make Control Variables</h4>\n <li><code>CONF</code> and <code>CONF_NAME</code> - Selecting the configuration(s) to use. See <a href=\"#using-multiple-configurations\">Using Multiple Configurations</a></li>\n </ul>\n <h4 id=\"test-make-control-variables\">Test Make Control Variables</h4>\n-<p>These make control variables only make sense when running tests. Please see <a href=\"testing.html\">Testing the JDK</a> for details.</p>\n+<p>These make control variables only make sense when running tests. Please see <strong>Testing the JDK</strong> (<a href=\"testing.html\">html</a>, <a href=\"testing.md\">markdown</a>) for details.</p>\n <ul>\n <li><code>TEST</code></li>\n <li><code>TEST_JOBS</code></li>\n@@ -514,7 +517,13 @@ <h2 id=\"running-tests\">Running Tests</h2>\n </ul>\n <p>To execute the most basic tests (tier 1), use:</p>\n <pre><code>make run-test-tier1</code></pre>\n-<p>For more details on how to run tests, please see the <a href=\"testing.html\">Testing the JDK</a> document.</p>\n+<p>For more details on how to run tests, please see <strong>Testing the JDK</strong> (<a href=\"testing.html\">html</a>, <a href=\"testing.md\">markdown</a>).</p>\n+<h2 id=\"signing\">Signing</h2>\n+<h3 id=\"macos-1\">macOS</h3>\n+<p>Modern versions of macOS require applications to be signed and notarizied before distribution. See Apple's documentation for more background on what this means and how it works. To help support this, the JDK build can be configured to automatically sign all native binaries, and the JDK bundle, with all the options needed for successful notarization, as well as all the entitlements required by the JDK. To enable <code>hardened</code> signing, use configure parameter <code>--with-macosx-codesign=hardened</code> and configure the signing identity you wish to use with <code>--with-macosx-codesign-identity=&lt;identity&gt;</code>. The identity refers to a signing identity from Apple that needs to be preinstalled on the build host.</p>\n+<p>When not signing for distribution with the hardened option, the JDK build will still attempt to perform <code>adhoc</code> signing to add the special entitlement <code>com.apple.security.get-task-allow</code> to each binary. This entitlement is required to be able to dump core files from a process. Note that adding this entitlement makes the build invalid for notarization, so it is only added when signing in <code>debug</code> mode. To explicitly enable this kind of adhoc signing, use configure parameter <code>--with-macosx-codesign=debug</code>. It will be enabled by default in most cases.</p>\n+<p>It's also possible to completely disable any explicit codesign operations done by the JDK build using the configure parameter <code>--without-macosx-codesign</code>. The exact behavior then depends on the architecture. For macOS on x64, it (at least at the time of this writing) results in completely unsigned binaries that should still work fine for development and debugging purposes. On aarch64, the Xcode linker will apply a default &quot;adhoc&quot; signing, without any entitlements. Such a build does not allow dumping core files.</p>\n+<p>The default mode &quot;auto&quot; will try for <code>hardened</code> signing if the debug level is <code>release</code> and either the default identity or the specified identity is valid. If hardened isn't possible, then <code>debug</code> signing is chosen if it works. If nothing works, the codesign build step is disabled.</p>\n <h2 id=\"cross-compiling\">Cross-compiling</h2>\n <p>Cross-compiling means using one platform (the <em>build</em> platform) to generate output that can ran on another platform (the <em>target</em> platform).</p>\n <p>The typical reason for cross-compiling is that the build is performed on a more powerful desktop computer, but the resulting binaries will be able to run on a different, typically low-performing system. Most of the complications that arise when building for embedded is due to this separation of <em>build</em> and <em>target</em> systems.</p>"
      },
      {
        "sha": "4d8367a61ba8ea7780fafed8dbff1d1176fa6048",
        "filename": "doc/building.md",
        "status": "modified",
        "additions": 39,
        "deletions": 3,
        "changes": 42,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/doc%2Fbuilding.md",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/doc%2Fbuilding.md",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/doc%2Fbuilding.md?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -818,7 +818,7 @@ configuration, as opposed to the \"configure time\" configuration.\n #### Test Make Control Variables\n \n These make control variables only make sense when running tests. Please see\n-[Testing the JDK](testing.html) for details.\n+**Testing the JDK** ([html](testing.html), [markdown](testing.md)) for details.\n \n   * `TEST`\n   * `TEST_JOBS`\n@@ -865,8 +865,44 @@ To execute the most basic tests (tier 1), use:\n make run-test-tier1\n ```\n \n-For more details on how to run tests, please see the [Testing\n-the JDK](testing.html) document.\n+For more details on how to run tests, please see **Testing the JDK**\n+([html](testing.html), [markdown](testing.md)).\n+\n+## Signing\n+\n+### macOS\n+\n+Modern versions of macOS require applications to be signed and notarizied before\n+distribution. See Apple's documentation for more background on what this means\n+and how it works. To help support this, the JDK build can be configured to\n+automatically sign all native binaries, and the JDK bundle, with all the options\n+needed for successful notarization, as well as all the entitlements required by\n+the JDK. To enable `hardened` signing, use configure parameter\n+`--with-macosx-codesign=hardened` and configure the signing identity you wish to\n+use with `--with-macosx-codesign-identity=<identity>`. The identity refers to a\n+signing identity from Apple that needs to be preinstalled on the build host.\n+\n+When not signing for distribution with the hardened option, the JDK build will\n+still attempt to perform `adhoc` signing to add the special entitlement\n+`com.apple.security.get-task-allow` to each binary. This entitlement is required\n+to be able to dump core files from a process. Note that adding this entitlement\n+makes the build invalid for notarization, so it is only added when signing in\n+`debug` mode. To explicitly enable this kind of adhoc signing, use configure\n+parameter `--with-macosx-codesign=debug`. It will be enabled by default in most\n+cases.\n+\n+It's also possible to completely disable any explicit codesign operations done\n+by the JDK build using the configure parameter `--without-macosx-codesign`.\n+The exact behavior then depends on the architecture. For macOS on x64, it (at\n+least at the time of this writing) results in completely unsigned binaries that\n+should still work fine for development and debugging purposes. On aarch64, the\n+Xcode linker will apply a default \"adhoc\" signing, without any entitlements.\n+Such a build does not allow dumping core files.\n+\n+The default mode \"auto\" will try for `hardened` signing if the debug level is\n+`release` and either the default identity or the specified identity is valid.\n+If hardened isn't possible, then `debug` signing is chosen if it works. If\n+nothing works, the codesign build step is disabled.\n \n ## Cross-compiling\n "
      },
      {
        "sha": "9dc5f9602d5febf0c0b12acef81c4d6660404871",
        "filename": "make/Bundles.gmk",
        "status": "modified",
        "additions": 1,
        "deletions": 10,
        "changes": 11,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2FBundles.gmk",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2FBundles.gmk",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2FBundles.gmk?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -278,16 +278,7 @@ ifneq ($(filter product-bundles% legacy-bundles, $(MAKECMDGOALS)), )\n       $(SYMBOLS_EXCLUDE_PATTERN), \\\n       $(ALL_JRE_FILES))\n \n-  # On Macosx release builds, when there is a code signing certificate available,\n-  # the final bundle layout can be signed.\n-  SIGN_BUNDLE := false\n-  ifeq ($(call isTargetOs, macosx)+$(DEBUG_LEVEL), true+release)\n-    ifneq ($(CODESIGN), )\n-      SIGN_BUNDLE := true\n-    endif\n-  endif\n-\n-  ifeq ($(SIGN_BUNDLE), true)\n+  ifeq ($(MACOSX_CODESIGN_MODE), hardened)\n     # Macosx release build and code signing available.\n \n     ################################################################################"
      },
      {
        "sha": "b8c0200eadb031c6b2b65509abe0bb9e913a3737",
        "filename": "make/autoconf/basic_tools.m4",
        "status": "modified",
        "additions": 17,
        "deletions": 56,
        "changes": 73,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fbasic_tools.m4",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fbasic_tools.m4",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fautoconf%2Fbasic_tools.m4?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -160,25 +160,23 @@ AC_DEFUN([BASIC_CHECK_MAKE_VERSION],\n AC_DEFUN([BASIC_CHECK_MAKE_OUTPUT_SYNC],\n [\n   # Check if make supports the output sync option and if so, setup using it.\n-  AC_MSG_CHECKING([if make --output-sync is supported])\n-  if $MAKE --version -O > /dev/null 2>&1; then\n-    OUTPUT_SYNC_SUPPORTED=true\n-    AC_MSG_RESULT([yes])\n-    AC_MSG_CHECKING([for output-sync value])\n-    AC_ARG_WITH([output-sync], [AS_HELP_STRING([--with-output-sync],\n-      [set make output sync type if supported by make. @<:@recurse@:>@])],\n-      [OUTPUT_SYNC=$with_output_sync])\n-    if test \"x$OUTPUT_SYNC\" = \"x\"; then\n-      OUTPUT_SYNC=none\n-    fi\n-    AC_MSG_RESULT([$OUTPUT_SYNC])\n-    if ! $MAKE --version -O$OUTPUT_SYNC > /dev/null 2>&1; then\n-      AC_MSG_ERROR([Make did not the support the value $OUTPUT_SYNC as output sync type.])\n-    fi\n-  else\n-    OUTPUT_SYNC_SUPPORTED=false\n-    AC_MSG_RESULT([no])\n-  fi\n+  UTIL_ARG_WITH(NAME: output-sync, TYPE: literal,\n+      VALID_VALUES: [none recurse line target], DEFAULT: recurse,\n+      OPTIONAL: true, ENABLED_DEFAULT: true,\n+      ENABLED_RESULT: OUTPUT_SYNC_SUPPORTED,\n+      CHECKING_MSG: [for make --output-sync value],\n+      DESC: [set make --output-sync type if supported by make],\n+      CHECK_AVAILABLE:\n+      [\n+        AC_MSG_CHECKING([if make --output-sync is supported])\n+        if ! $MAKE --version -O > /dev/null 2>&1; then\n+          AC_MSG_RESULT([no])\n+          AVAILABLE=false\n+        else\n+          AC_MSG_RESULT([yes])\n+        fi\n+      ]\n+  )\n   AC_SUBST(OUTPUT_SYNC_SUPPORTED)\n   AC_SUBST(OUTPUT_SYNC)\n ])\n@@ -378,43 +376,6 @@ AC_DEFUN_ONCE([BASIC_SETUP_COMPLEX_TOOLS],\n     UTIL_REQUIRE_PROGS(MIG, mig)\n     UTIL_REQUIRE_PROGS(XATTR, xattr)\n     UTIL_LOOKUP_PROGS(CODESIGN, codesign)\n-\n-    if test \"x$CODESIGN\" != \"x\"; then\n-      # Check for user provided code signing identity.\n-      # If no identity was provided, fall back to \"openjdk_codesign\".\n-      AC_ARG_WITH([macosx-codesign-identity], [AS_HELP_STRING([--with-macosx-codesign-identity],\n-        [specify the code signing identity])],\n-        [MACOSX_CODESIGN_IDENTITY=$with_macosx_codesign_identity],\n-        [MACOSX_CODESIGN_IDENTITY=openjdk_codesign]\n-      )\n-\n-      AC_SUBST(MACOSX_CODESIGN_IDENTITY)\n-\n-      # Verify that the codesign certificate is present\n-      AC_MSG_CHECKING([if codesign certificate is present])\n-      $RM codesign-testfile\n-      $TOUCH codesign-testfile\n-      $CODESIGN -s \"$MACOSX_CODESIGN_IDENTITY\" codesign-testfile 2>&AS_MESSAGE_LOG_FD \\\n-          >&AS_MESSAGE_LOG_FD || CODESIGN=\n-      $RM codesign-testfile\n-      if test \"x$CODESIGN\" = x; then\n-        AC_MSG_RESULT([no])\n-      else\n-        AC_MSG_RESULT([yes])\n-        # Verify that the codesign has --option runtime\n-        AC_MSG_CHECKING([if codesign has --option runtime])\n-        $RM codesign-testfile\n-        $TOUCH codesign-testfile\n-        $CODESIGN --option runtime -s \"$MACOSX_CODESIGN_IDENTITY\" codesign-testfile \\\n-            2>&AS_MESSAGE_LOG_FD >&AS_MESSAGE_LOG_FD || CODESIGN=\n-        $RM codesign-testfile\n-        if test \"x$CODESIGN\" = x; then\n-          AC_MSG_ERROR([codesign does not have --option runtime. macOS 10.13.6 and above is required.])\n-        else\n-          AC_MSG_RESULT([yes])\n-        fi\n-      fi\n-    fi\n     UTIL_REQUIRE_PROGS(SETFILE, SetFile)\n   fi\n   if ! test \"x$OPENJDK_TARGET_OS\" = \"xwindows\"; then"
      },
      {
        "sha": "c800f1f4142010f91ba31e861c5332e262530907",
        "filename": "make/autoconf/compare.sh.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fcompare.sh.in",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fcompare.sh.in",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fautoconf%2Fcompare.sh.in?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -40,6 +40,7 @@ export AWK=\"@AWK@\"\n export BASH=\"@BASH@\"\n export CAT=\"@CAT@\"\n export CMP=\"@CMP@\"\n+export CODESIGN=\"@CODESIGN@\"\n export CP=\"@CP@\"\n export CUT=\"@CUT@\"\n export DIFF=\"@DIFF@\""
      },
      {
        "sha": "c7046ae41ea7b9cb3ec8c9a10349d09862948f49",
        "filename": "make/autoconf/configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fconfigure.ac",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fconfigure.ac",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fautoconf%2Fconfigure.ac?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -249,6 +249,7 @@ JDKOPT_EXCLUDE_TRANSLATIONS\n JDKOPT_ENABLE_DISABLE_MANPAGES\n JDKOPT_ENABLE_DISABLE_CDS_ARCHIVE\n JDKOPT_ENABLE_DISABLE_COMPATIBLE_CDS_ALIGNMENT\n+JDKOPT_SETUP_MACOSX_SIGNING\n \n ###############################################################################\n #"
      },
      {
        "sha": "cf36dffb0b03b60224658090d710366c5a02af22",
        "filename": "make/autoconf/jdk-options.m4",
        "status": "modified",
        "additions": 102,
        "deletions": 0,
        "changes": 102,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fjdk-options.m4",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fjdk-options.m4",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fautoconf%2Fjdk-options.m4?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -727,3 +727,105 @@ AC_DEFUN_ONCE([JDKOPT_SETUP_REPRODUCIBLE_BUILD],\n   AC_SUBST(SOURCE_DATE)\n   AC_SUBST(ENABLE_REPRODUCIBLE_BUILD)\n ])\n+\n+################################################################################\n+#\n+# Setup signing on macOS. This can either be setup to sign with a real identity\n+# and enabling the hardened runtime, or it can simply add the debug entitlement\n+# com.apple.security.get-task-allow without actually signing any binaries. The\n+# latter is needed to be able to debug processes and dump core files on modern\n+# versions of macOS. It can also be skipped completely.\n+#\n+# Check if codesign will run with the given parameters\n+# $1: Parameters to run with\n+# $2: Checking message\n+# Sets CODESIGN_SUCCESS=true/false\n+AC_DEFUN([JDKOPT_CHECK_CODESIGN_PARAMS],\n+[\n+  PARAMS=\"$1\"\n+  MESSAGE=\"$2\"\n+  CODESIGN_TESTFILE=\"$CONFIGURESUPPORT_OUTPUTDIR/codesign-testfile\"\n+  $RM \"$CODESIGN_TESTFILE\"\n+  $TOUCH \"$CODESIGN_TESTFILE\"\n+  CODESIGN_SUCCESS=false\n+  $CODESIGN $PARAMS \"$CODESIGN_TESTFILE\" 2>&AS_MESSAGE_LOG_FD \\\n+      >&AS_MESSAGE_LOG_FD && CODESIGN_SUCCESS=true\n+  $RM \"$CODESIGN_TESTFILE\"\n+  AC_MSG_CHECKING([$MESSAGE])\n+  if test \"x$CODESIGN_SUCCESS\" = \"xtrue\"; then\n+    AC_MSG_RESULT([yes])\n+  else\n+    AC_MSG_RESULT([no])\n+  fi\n+])\n+\n+AC_DEFUN([JDKOPT_CHECK_CODESIGN_HARDENED],\n+[\n+  JDKOPT_CHECK_CODESIGN_PARAMS([-s \"$MACOSX_CODESIGN_IDENTITY\" --option runtime],\n+      [if codesign with hardened runtime is possible])\n+])\n+\n+AC_DEFUN([JDKOPT_CHECK_CODESIGN_DEBUG],\n+[\n+  JDKOPT_CHECK_CODESIGN_PARAMS([-s -], [if debug mode codesign is possible])\n+])\n+\n+AC_DEFUN([JDKOPT_SETUP_MACOSX_SIGNING],\n+[\n+  ENABLE_CODESIGN=false\n+  if test \"x$OPENJDK_TARGET_OS\" = \"xmacosx\" && test \"x$CODESIGN\" != \"x\"; then\n+\n+    UTIL_ARG_WITH(NAME: macosx-codesign, TYPE: literal, OPTIONAL: true,\n+        VALID_VALUES: [hardened debug auto], DEFAULT: auto,\n+        ENABLED_DEFAULT: true,\n+        CHECKING_MSG: [for macosx code signing mode],\n+        DESC: [set the macosx code signing mode (hardened, debug, auto)]\n+    )\n+\n+    MACOSX_CODESIGN_MODE=disabled\n+    if test \"x$MACOSX_CODESIGN_ENABLED\" = \"xtrue\"; then\n+\n+      # Check for user provided code signing identity.\n+      UTIL_ARG_WITH(NAME: macosx-codesign-identity, TYPE: string,\n+          DEFAULT: openjdk_codesign, CHECK_VALUE: UTIL_CHECK_STRING_NON_EMPTY,\n+          DESC: [specify the macosx code signing identity],\n+          CHECKING_MSG: [for macosx code signing identity]\n+      )\n+      AC_SUBST(MACOSX_CODESIGN_IDENTITY)\n+\n+      if test \"x$MACOSX_CODESIGN\" = \"xauto\"; then\n+        # Only try to default to hardened signing on release builds\n+        if test \"x$DEBUG_LEVEL\" = \"xrelease\"; then\n+          JDKOPT_CHECK_CODESIGN_HARDENED\n+          if test \"x$CODESIGN_SUCCESS\" = \"xtrue\"; then\n+            MACOSX_CODESIGN_MODE=hardened\n+          fi\n+        fi\n+        if test \"x$MACOSX_CODESIGN_MODE\" = \"xdisabled\"; then\n+          JDKOPT_CHECK_CODESIGN_DEBUG\n+          if test \"x$CODESIGN_SUCCESS\" = \"xtrue\"; then\n+            MACOSX_CODESIGN_MODE=debug\n+          fi\n+        fi\n+        AC_MSG_CHECKING([for macosx code signing mode])\n+        AC_MSG_RESULT([$MACOSX_CODESIGN_MODE])\n+      elif test \"x$MACOSX_CODESIGN\" = \"xhardened\"; then\n+        JDKOPT_CHECK_CODESIGN_HARDENED\n+        if test \"x$CODESIGN_SUCCESS\" = \"xfalse\"; then\n+          AC_MSG_ERROR([Signing with hardened runtime is not possible])\n+        fi\n+        MACOSX_CODESIGN_MODE=hardened\n+      elif test \"x$MACOSX_CODESIGN\" = \"xdebug\"; then\n+        JDKOPT_CHECK_CODESIGN_DEBUG\n+        if test \"x$CODESIGN_SUCCESS\" = \"xfalse\"; then\n+          AC_MSG_ERROR([Signing in debug mode is not possible])\n+        fi\n+        MACOSX_CODESIGN_MODE=debug\n+      else\n+        AC_MSG_ERROR([unknown value for --with-macosx-codesign: $MACOSX_CODESIGN])\n+      fi\n+    fi\n+    AC_SUBST(MACOSX_CODESIGN_IDENTITY)\n+    AC_SUBST(MACOSX_CODESIGN_MODE)\n+  fi\n+])"
      },
      {
        "sha": "537c3e3043c7688cea6ed3e77ca87876c8fc2d19",
        "filename": "make/autoconf/spec.gmk.in",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fspec.gmk.in",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Fspec.gmk.in",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fautoconf%2Fspec.gmk.in?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -443,7 +443,8 @@ MACOSX_VERSION_MIN=@MACOSX_VERSION_MIN@\n # The highest allowed version of macosx\n MACOSX_VERSION_MAX=@MACOSX_VERSION_MAX@\n \n-# The macosx code signing identity to use\n+# The macosx code signing configuration\n+MACOSX_CODESIGN_MODE:=@MACOSX_CODESIGN_MODE@\n MACOSX_CODESIGN_IDENTITY=@MACOSX_CODESIGN_IDENTITY@\n \n # Toolchain type: gcc, clang, xlc, microsoft..."
      },
      {
        "sha": "574f7a1c806e935dcdcb1c99eb235a12f50f13bf",
        "filename": "make/autoconf/util.m4",
        "status": "modified",
        "additions": 351,
        "deletions": 3,
        "changes": 354,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Futil.m4",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fautoconf%2Futil.m4",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fautoconf%2Futil.m4?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -325,12 +325,12 @@ AC_DEFUN([UTIL_ALIASED_ARG_ENABLE],\n # Creates a command-line option using the --enable-* pattern. Will return a\n # value of 'true' or 'false' in the RESULT variable, depending on whether the\n # option was enabled or not by the user. The option can not be turned on if it\n-# is not available, as specified by AVAILABLE and/or AVAILABLE_CHECK.\n+# is not available, as specified by AVAILABLE and/or CHECK_AVAILABLE.\n #\n # Arguments:\n #   NAME: The base name of this option (i.e. what follows --enable-). Required.\n #   RESULT: The name of the variable to set to the result. Defaults to\n-#     <NAME in uppercase>_RESULT.\n+#     <NAME in uppercase>_ENABLED.\n #   DEFAULT: The default value for this option. Can be true, false or auto.\n #     Defaults to true.\n #   AVAILABLE: If true, this option is allowed to be selected. Defaults to true.\n@@ -376,7 +376,7 @@ UTIL_DEFUN_NAMED([UTIL_ARG_ENABLE],\n   m4_define([ARG_DESC], m4_if(ARG_DESC, , [Enable the ARG_NAME feature], m4_normalize(ARG_DESC)))\n \n   # If CHECKING_MSG is not specified, set it to a generic description.\n-  m4_define([ARG_CHECKING_MSG], m4_if(ARG_CHECKING_MSG, , [for --enable-ARG_NAME], ARG_CHECKING_MSG))\n+  m4_define([ARG_CHECKING_MSG], m4_if(ARG_CHECKING_MSG, , [for --enable-ARG_NAME], m4_normalize(ARG_CHECKING_MSG)))\n \n   # If the code blocks are not given, set them to the empty statements to avoid\n   # tripping up bash.\n@@ -463,3 +463,351 @@ UTIL_DEFUN_NAMED([UTIL_ARG_ENABLE],\n   fi\n ])\n \n+###############################################################################\n+# Helper functions for ARG_WITH, to validate different types of argument\n+\n+# Dispatcher to call the correct UTIL_CHECK_TYPE_* function depending on the ARG_TYPE\n+AC_DEFUN([UTIL_CHECK_TYPE],\n+[\n+  UTIL_CHECK_TYPE_$1($2)\n+])\n+\n+AC_DEFUN([UTIL_CHECK_TYPE_string],\n+[\n+  # All strings always passes\n+])\n+\n+AC_DEFUN([UTIL_CHECK_TYPE_integer],\n+[\n+  # Check that the argument is an integer\n+  # Additional [] needed to keep m4 from mangling shell constructs.\n+  [ if [[ ! \"$1\" =~ ^[0-9]+$ ]] ; then ]\n+    FAILURE=\"Not an integer: $1\"\n+  fi\n+])\n+\n+AC_DEFUN([UTIL_CHECK_TYPE_file],\n+[\n+  # Check that the argument is an existing file\n+  if test ! -f \"$1\" ; then\n+    FAILURE=\"File $1 does not exist or is not readable\"\n+  fi\n+])\n+\n+AC_DEFUN([UTIL_CHECK_TYPE_directory],\n+[\n+  # Check that the argument is an existing directory\n+  if test ! -d \"$1\" ; then\n+    FAILURE=\"Directory $1 does not exist or is not readable\"\n+  fi\n+\n+  if test \"[x]ARG_CHECK_FOR_FILES\" != x; then\n+    for file in ARG_CHECK_FOR_FILES; do\n+      found_files=$($ECHO $(ls $1/$file 2> /dev/null))\n+      if test \"x$found_files\" = x; then\n+        FAILURE=\"Directory $1 does not contain $file\"\n+        break\n+      elif ! test -e \"$found_files\"; then\n+        FAILURE=\"Directory $1 contains multiple $file: $found_files\"\n+        break\n+      fi\n+    done\n+  fi\n+])\n+\n+AC_DEFUN([UTIL_CHECK_TYPE_literal],\n+[\n+  # Check if it contains a space between non-space characters\n+  # Additional [] needed to keep m4 from mangling shell constructs.\n+  [ if [[ \"$1\" =~ [^' ']' '+[^' '] ]] ; then ]\n+    FAILURE=\"Multiple words: $1\"\n+  fi\n+\n+  # Check that the selected variants are valid\n+  UTIL_GET_NON_MATCHING_VALUES(invalid_value, $1, \\\n+      ARG_VALID_VALUES)\n+  if test \"x$invalid_value\" != x; then\n+    FAILURE=\"Invalid value: $invalid_value. Valid values are: ARG_VALID_VALUES\"\n+  fi\n+])\n+\n+AC_DEFUN([UTIL_CHECK_TYPE_multivalue],\n+[\n+  # We accept either space or comma as separator, but use space internally\n+  values=`$ECHO $1 | $SED -e 's/,/ /g'`\n+\n+  # Check that the selected variants are valid\n+  UTIL_GET_NON_MATCHING_VALUES(invalid_value, $values, \\\n+      ARG_VALID_VALUES)\n+  if test \"x$invalid_value\" != x; then\n+    FAILURE=\"Invalid value(s): $invalid_value. Valid values are: ARG_VALID_VALUES\"\n+  fi\n+\n+  # Update to version without comma\n+  ARG_RESULT=$($ECHO $values)\n+])\n+\n+AC_DEFUN([UTIL_CHECK_TYPE_features],\n+[\n+  # We accept either space or comma as separator, but use space internally\n+  feature_list=`$ECHO $1 | $SED -e 's/,/ /g'`\n+  features_enabled=`$ECHO $feature_list | \\\n+    $AWK '{ for (i=1; i<=NF; i++) if (!match($i, /^-.*/)) printf(\"%s \", $i) }'`\n+  features_disabled=`$ECHO $feature_list | \\\n+    $AWK '{ for (i=1; i<=NF; i++) if (match($i, /^-.*/)) printf(\"%s \", substr($i, 2))}'`\n+\n+  # Check that the selected features are valid\n+  UTIL_GET_NON_MATCHING_VALUES(invalid_features, $features_enabled \\\n+        $features_disabled, ARG_VALID_VALUES)\n+  if test \"x$invalid_features\" != x; then\n+    FAILURE=\"Invalid feature(s): $invalid_features. Valid values are: ARG_VALID_VALUES\"\n+  fi\n+\n+  # Update to version without comma\n+  ARG_RESULT=$($ECHO $feature_list)\n+])\n+\n+###############################################################################\n+# Creates a command-line option using the --with-* pattern. Will return a\n+# string in the RESULT variable with the option provided by the user, or the\n+# empty string if the --with-* option was not given. The option can not be given\n+# if it is not available, as specified by AVAILABLE and/or CHECK_AVAILABLE.\n+#\n+# Arguments:\n+#   NAME: The base name of this option (i.e. what follows --with-). Required.\n+#   TYPE: The type of the value. Can be one of \"string\", \"integer\", \"file\",\n+#     \"directory\", \"literal\", \"multivalue\" or \"features\". Required.\n+#   DEFAULT: The default value for this option. Can be any valid string.\n+#     Required.\n+#   OPTIONAL: If this feature can be disabled. Defaults to false. If true,\n+#     the feature can be disabled using --without-FOO, --with-FOO=no, or\n+#     --with-FOO=. Check the ENABLED_RESULT variable for the enabled/disabled\n+#     state.\n+#   RESULT: The name of the variable to set to the result. Defaults to\n+#     <NAME in uppercase>. Set to empty if ENABLED_RESULT is false.\n+#   ENABLED_DEFAULT: If the value is enabled by default. Defaults to false. Only\n+#     relevant if OPTIONAL is true.\n+#   ENABLED_RESULT: The name of the variable to set to the enabled/disabled\n+#     result state. Defaults to <NAME in uppercase>_ENABLED.\n+#   AVAILABLE: If true, this option is allowed to be selected. Defaults to true.\n+#   DESC: A description of this option. Defaults to a generic and unhelpful\n+#     string.\n+#   DEFAULT_DESC: A message describing the default value, for the help. Defaults\n+#     to the literal value of DEFAULT, or \"<none>\" if DEFAULT is empty.\n+#   CHECKING_MSG: The message to present to user when checking this option.\n+#     Defaults to a generic message.\n+#   CHECK_AVAILABLE: An optional code block to execute to determine if the\n+#     option should be available. Must set AVAILABLE to 'false' if not.\n+#   VALID_VALUES: A list of literals that are the allowed values. Only valid if\n+#     TYPE is \"literal\", \"multivalue\" or \"features\".\n+#   CHECK_VALUE: An optional code block to execute to determine if the value\n+#     is correct. Must set FAILURE to a non-empty string if not. This string\n+#     will be displayed. The value is given in $RESULT.\n+#   CHECK_FOR_FILES: A list of files to verify the presence for. Only valid if\n+#     TYPE is \"directory\". Paths are relative the directory given as value.\n+#     Wildcards are accepted. Exactly one matching file must be found, for each\n+#     listed file, or FAILURE is set.\n+#   IF_AUTO: An optional code block to execute if the value is \"auto\", either by\n+#     default or given by the command line. Must set RESULT to the calculated\n+#     value.\n+#   IF_GIVEN:  An optional code block to execute if the option was given on the\n+#     command line (regardless of the value).\n+#   IF_NOT_GIVEN:  An optional code block to execute if the option was not given\n+#     on the command line (regardless of the value).\n+#\n+UTIL_DEFUN_NAMED([UTIL_ARG_WITH],\n+    [*NAME *TYPE *DEFAULT OPTIONAL RESULT ENABLED_DEFAULT ENABLED_RESULT\n+    AVAILABLE DESC DEFAULT_DESC CHECKING_MSG CHECK_AVAILABLE VALID_VALUES\n+    CHECK_VALUE CHECK_FOR_FILES IF_AUTO IF_GIVEN IF_NOT_GIVEN], [$@],\n+[\n+  ##########################\n+  # Part 1: Set up m4 macros\n+  ##########################\n+\n+  # If ENABLED_DEFAULT is not specified, set it to 'false'.\n+  m4_define([ARG_ENABLED_DEFAULT], m4_if(ARG_ENABLED_DEFAULT, , false, ARG_ENABLED_DEFAULT))\n+\n+  # If AVAILABLE is not specified, set it to 'true'.\n+  m4_define([ARG_AVAILABLE], m4_if(ARG_AVAILABLE, , true, ARG_AVAILABLE))\n+\n+  # If OPTIONAL is not specified, set it to 'false'.\n+  m4_define([ARG_OPTIONAL], m4_if(ARG_OPTIONAL, , false, ARG_OPTIONAL))\n+\n+  # If DEFAULT_DESC is not specified, calculate it from DEFAULT.\n+  m4_define([ARG_DEFAULT_DESC], m4_if(ARG_DEFAULT_DESC, , m4_if(ARG_DEFAULT, , <none>, ARG_DEFAULT), ARG_DEFAULT_DESC))\n+\n+  # If RESULT is not specified, set it to 'ARG_NAME'.\n+  m4_define([ARG_RESULT], m4_if(ARG_RESULT, , m4_translit(ARG_NAME, [a-z-], [A-Z_]), ARG_RESULT))\n+\n+  # If ENABLED_RESULT is not specified, set it to 'ARG_NAME[_ENABLED]'.\n+  m4_define([ARG_ENABLED_RESULT], m4_if(ARG_ENABLED_RESULT, , m4_translit(ARG_NAME, [a-z-], [A-Z_])[_ENABLED], ARG_ENABLED_RESULT))\n+\n+  # Construct shell variable names for the option\n+  m4_define(ARG_OPTION, [with_]m4_translit(ARG_NAME, [-], [_]))\n+  m4_define(ARG_GIVEN, m4_translit(ARG_NAME, [a-z-], [A-Z_])[_GIVEN])\n+\n+  # If DESC is not specified, set it to a generic description.\n+  m4_define([ARG_DESC], m4_if(ARG_DESC, , [Give a value for the ARG_NAME feature], m4_normalize(ARG_DESC)))\n+\n+  # If CHECKING_MSG is not specified, set it to a generic description.\n+  m4_define([ARG_CHECKING_MSG], m4_if(ARG_CHECKING_MSG, , [for --with-ARG_NAME], m4_normalize(ARG_CHECKING_MSG)))\n+\n+  m4_define([ARG_HAS_AUTO_BLOCK], m4_if(ARG_IF_AUTO, , false, true))\n+\n+  # If the code blocks are not given, set them to the empty statements to avoid\n+  # tripping up bash.\n+  m4_define([ARG_CHECK_AVAILABLE], m4_if(ARG_CHECK_AVAILABLE, , :, ARG_CHECK_AVAILABLE))\n+  m4_define([ARG_CHECK_VALUE], m4_if(ARG_CHECK_VALUE, , :, ARG_CHECK_VALUE))\n+  m4_define([ARG_CHECK_FOR_FILES], m4_if(ARG_CHECK_FOR_FILES, , :, ARG_CHECK_FOR_FILES))\n+  m4_define([ARG_IF_AUTO], m4_if(ARG_IF_AUTO, , :, ARG_IF_AUTO))\n+  m4_define([ARG_IF_GIVEN], m4_if(ARG_IF_GIVEN, , :, ARG_IF_GIVEN))\n+  m4_define([ARG_IF_NOT_GIVEN], m4_if(ARG_IF_NOT_GIVEN, , :, ARG_IF_NOT_GIVEN))\n+\n+  ##########################\n+  # Part 2: Set up autoconf shell code\n+  ##########################\n+\n+  # Check that OPTIONAL has a valid value\n+  if test \"[x]ARG_OPTIONAL\" != xtrue && test \"[x]ARG_OPTIONAL\" != xfalse ; then\n+    AC_MSG_ERROR([Internal error: Argument OPTIONAL to [UTIL_ARG_WITH] can only be true or false, was: 'ARG_OPTIONAL'])\n+  fi\n+\n+  # Check that ENABLED_DEFAULT has a valid value\n+  if test \"[x]ARG_ENABLED_DEFAULT\" != xtrue && test \"[x]ARG_ENABLED_DEFAULT\" != xfalse ; then\n+    AC_MSG_ERROR([Internal error: Argument ENABLED_DEFAULT to [UTIL_ARG_WITH] can only be true or false, was: 'ARG_ENABLED_DEFAULT'])\n+  fi\n+\n+  # Check that AVAILABLE has a valid value\n+  if test \"[x]ARG_AVAILABLE\" != xtrue && test \"[x]ARG_AVAILABLE\" != xfalse; then\n+    AC_MSG_ERROR([Internal error: Argument AVAILABLE to [UTIL_ARG_WITH] can only be true or false, was: 'ARG_AVAILABLE'])\n+  fi\n+\n+  # Check that TYPE has a valid value\n+  # Need to assign since we can't expand ARG TYPE inside the m4 quoted if statement\n+  TEST_TYPE=\"ARG_TYPE\"\n+  # Additional [] needed to keep m4 from mangling shell constructs.\n+  [ if [[ ! \"$TEST_TYPE\" =~ ^(string|integer|file|directory|literal|multivalue|features)$ ]] ; then ]\n+    AC_MSG_ERROR([Internal error: Argument TYPE to [UTIL_ARG_WITH] must be a valid type, was: 'ARG_TYPE'])\n+  fi\n+\n+  AC_ARG_WITH(ARG_NAME, AS_HELP_STRING([--with-]ARG_NAME,\n+      [ARG_DESC [ARG_DEFAULT_DESC]]), [ARG_GIVEN=true], [ARG_GIVEN=false])\n+\n+  # Check if the option is available\n+  AVAILABLE=ARG_AVAILABLE\n+  # Run the available check block (if any), which can overwrite AVAILABLE.\n+  ARG_CHECK_AVAILABLE\n+\n+  # Check if the option should be turned on\n+  echo check msg:ARG_CHECKING_MSG:\n+  AC_MSG_CHECKING(ARG_CHECKING_MSG)\n+\n+  if test x$AVAILABLE = xfalse; then\n+    ARG_RESULT=\"$ARG_OPTION\"\n+    ARG_ENABLED_RESULT=false\n+    REASON=\"not available\"\n+  else\n+    if test x$ARG_GIVEN = xfalse; then\n+      ARG_RESULT=\"ARG_DEFAULT\"\n+      if test \"[x]ARG_OPTIONAL\" = xtrue; then\n+        ARG_ENABLED_RESULT=ARG_ENABLED_DEFAULT\n+      else\n+        ARG_ENABLED_RESULT=true\n+      fi\n+      REASON=\"default\"\n+\n+    else # ARG_GIVEN is true\n+      # Special treatment of \"yes\" and \"no\" for \"--with-ARG\" and \"--without-ARG\"\n+      if test \"x$ARG_OPTION\" = xyes || test \"x$ARG_OPTION\" = xno || test \"x$ARG_OPTION\" = x ; then\n+        if test \"[x]ARG_OPTIONAL\" = xfalse; then\n+          if test \"x$ARG_OPTION\" = x; then\n+            # If not optional, the empty string is a valid value\n+            ARG_RESULT=\"\"\n+            ARG_ENABLED_RESULT=true\n+            REASON=\"from command line\"\n+          else\n+            AC_MSG_RESULT([invalid])\n+            AC_MSG_ERROR([Option [--with-]ARG_NAME must have a specified value])\n+          fi\n+        else\n+          if test \"x$ARG_OPTION\" = xyes; then\n+            ARG_RESULT=\"ARG_DEFAULT\"\n+            ARG_ENABLED_RESULT=true\n+            REASON=\"default as enabled from command line\"\n+          else\n+            # For optional values, both --without-FOO and --with-FOO= disables\n+            ARG_RESULT=\"\"\n+            ARG_ENABLED_RESULT=false\n+            REASON=\"from command line\"\n+          fi\n+        fi\n+      else\n+        # The most common case -- the user gives a value for the option.\n+        ARG_RESULT=\"$ARG_OPTION\"\n+        ARG_ENABLED_RESULT=true\n+        REASON=\"from command line\"\n+      fi\n+    fi\n+  fi\n+\n+  if test \"x$ARG_ENABLED_RESULT\" = xfalse; then\n+    if test \"x$REASON\" = \"xnot available\"; then\n+      AC_MSG_RESULT([<invalid>, $REASON])\n+      if test \"x$ARG_RESULT\" != \"x\" && test \"x$ARG_RESULT\" != \"xno\" ; then\n+        AC_MSG_WARN([Option [--with-]ARG_NAME is not available for this configuration])\n+      fi\n+    else\n+      AC_MSG_RESULT([<disabled>, $REASON])\n+    fi\n+    ARG_RESULT=\"\"\n+  else\n+    if test [x]ARG_HAS_AUTO_BLOCK = xtrue && test \"x$ARG_RESULT\" = xauto; then\n+      # Execute \"auto\" payload\n+      ARG_IF_AUTO\n+\n+      ARG_RESULT=\"$RESULT\"\n+      REASON=\"$REASON (calculated from 'auto')\"\n+    fi\n+\n+    if test \"x$ARG_RESULT\" = x; then\n+      AC_MSG_RESULT([<none>, $REASON])\n+    else\n+      AC_MSG_RESULT([$ARG_RESULT, $REASON])\n+    fi\n+  fi\n+\n+  # Verify value\n+  # First use our dispatcher to verify that type requirements are satisfied\n+  UTIL_CHECK_TYPE(ARG_TYPE, $ARG_RESULT)\n+\n+  if test \"x$FAILURE\" = x; then\n+    # Execute custom verification payload, if present\n+    RESULT=\"$ARG_RESULT\"\n+\n+    ARG_CHECK_VALUE\n+\n+    ARG_RESULT=\"$RESULT\"\n+  fi\n+\n+  if test \"x$FAILURE\" != x; then\n+    AC_MSG_NOTICE([Invalid value for [--with-]ARG_NAME: \"$ARG_RESULT\"])\n+    AC_MSG_NOTICE([$FAILURE])\n+    AC_MSG_ERROR([Cannot continue])\n+  fi\n+\n+  # Execute result payloads, if present\n+  if test x$ARG_GIVEN = xtrue; then\n+    ARG_IF_GIVEN\n+  else\n+    ARG_IF_NOT_GIVEN\n+  fi\n+])\n+\n+###############################################################################\n+# Helper functions for CHECK_VALUE in ARG_WITH.\n+AC_DEFUN([UTIL_CHECK_STRING_NON_EMPTY],\n+[\n+  if test \"x$RESULT\" = \"x\"; then\n+    FAILURE=\"Value cannot be empty\"\n+  fi\n+])"
      },
      {
        "sha": "0f315019d0e6d386c9ea2901a708999895993d16",
        "filename": "make/common/NativeCompilation.gmk",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fcommon%2FNativeCompilation.gmk",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fcommon%2FNativeCompilation.gmk",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fcommon%2FNativeCompilation.gmk?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -267,10 +267,15 @@ endif\n # specialized file is found, returns the default file.\n # $1 Executable to find entitlements file for.\n ENTITLEMENTS_DIR := $(TOPDIR)/make/data/macosxsigning\n-DEFAULT_ENTITLEMENTS_FILE := $(ENTITLEMENTS_DIR)/default.plist\n+ifeq ($(MACOSX_CODESIGN_MODE), debug)\n+  CODESIGN_PLIST_SUFFIX := -debug\n+else\n+  CODESIGN_PLIST_SUFFIX :=\n+endif\n+DEFAULT_ENTITLEMENTS_FILE := $(ENTITLEMENTS_DIR)/default$(CODESIGN_PLIST_SUFFIX).plist\n \n GetEntitlementsFile = \\\n-    $(foreach f, $(ENTITLEMENTS_DIR)/$(strip $(notdir $1)).plist, \\\n+    $(foreach f, $(ENTITLEMENTS_DIR)/$(strip $(notdir $1))$(CODESIGN_PLIST_SUFFIX).plist, \\\n       $(if $(wildcard $f), $f, $(DEFAULT_ENTITLEMENTS_FILE)) \\\n     )\n \n@@ -1206,11 +1211,16 @@ define SetupNativeCompilationBody\n \t\t    $$($1_MT) -nologo -manifest $$($1_MANIFEST) -identity:\"$$($1_NAME).exe, version=$$($1_MANIFEST_VERSION)\" -outputresource:$$@;#1\n                   endif\n                 endif\n-                # This only works if the openjdk_codesign identity is present on the system. Let\n-                # silently fail otherwise.\n-                ifneq ($(CODESIGN), )\n+                # On macosx, optionally run codesign on every binary.\n+                # Remove signature explicitly first to avoid warnings if the linker\n+                # added a default adhoc signature.\n+                ifeq ($(MACOSX_CODESIGN_MODE), hardened)\n+\t\t  $(CODESIGN) --remove-signature $$@\n \t\t  $(CODESIGN) -f -s \"$(MACOSX_CODESIGN_IDENTITY)\" --timestamp --options runtime \\\n \t\t      --entitlements $$(call GetEntitlementsFile, $$@) $$@\n+                else ifeq ($(MACOSX_CODESIGN_MODE), debug)\n+\t\t  $(CODESIGN) --remove-signature $$@\n+\t\t  $(CODESIGN) -f -s - --entitlements $$(call GetEntitlementsFile, $$@) $$@\n                 endif\n   endif\n "
      },
      {
        "sha": "4a4ccdb230027e98401efc8bd9e0d765c9d59924",
        "filename": "make/common/modules/LauncherCommon.gmk",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fcommon%2Fmodules%2FLauncherCommon.gmk",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fcommon%2Fmodules%2FLauncherCommon.gmk",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fcommon%2Fmodules%2FLauncherCommon.gmk?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -44,7 +44,6 @@ endif\n \n LAUNCHER_SRC := $(TOPDIR)/src/java.base/share/native/launcher\n LAUNCHER_CFLAGS += -I$(TOPDIR)/src/java.base/share/native/launcher \\\n-    -I$(TOPDIR)/src/java.desktop/share/native/include \\\n     -I$(TOPDIR)/src/java.base/share/native/libjli \\\n     -I$(TOPDIR)/src/java.base/$(OPENJDK_TARGET_OS_TYPE)/native/libjli \\\n     -I$(TOPDIR)/src/java.base/$(OPENJDK_TARGET_OS)/native/libjli \\"
      },
      {
        "sha": "05f3bec0d48243a758680cf22771cf1ba71e11d7",
        "filename": "make/conf/jib-profiles.js",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fconf%2Fjib-profiles.js",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fconf%2Fjib-profiles.js",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fconf%2Fjib-profiles.js?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -564,7 +564,7 @@ var getJibProfilesProfiles = function (input, common, data) {\n             \"ANT_HOME\": input.get(\"ant\", \"home_path\")\n         }\n     };\n-    [ \"linux-x64\", \"macosx-x64\", \"windows-x64\"]\n+    [ \"linux-x64\", \"macosx-aarch64\", \"macosx-x64\", \"windows-x64\", \"linux-aarch64\"]\n         .forEach(function (name) {\n             var maketestName = name + \"-testmake\";\n             profiles[maketestName] = concatObjects(profiles[name], testmakeBase);"
      },
      {
        "sha": "dc0b4ae03de67f2132bda9cdc97421ce2f6cec35",
        "filename": "make/conf/version-numbers.conf",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fconf%2Fversion-numbers.conf",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fconf%2Fversion-numbers.conf",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fconf%2Fversion-numbers.conf?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -28,15 +28,15 @@\n \n DEFAULT_VERSION_FEATURE=17\n DEFAULT_VERSION_INTERIM=0\n-DEFAULT_VERSION_UPDATE=5\n+DEFAULT_VERSION_UPDATE=6\n DEFAULT_VERSION_PATCH=0\n DEFAULT_VERSION_EXTRA1=0\n DEFAULT_VERSION_EXTRA2=0\n DEFAULT_VERSION_EXTRA3=0\n-DEFAULT_VERSION_DATE=2022-10-18\n+DEFAULT_VERSION_DATE=2023-01-17\n DEFAULT_VERSION_CLASSFILE_MAJOR=61  # \"`$EXPR $DEFAULT_VERSION_FEATURE + 44`\"\n DEFAULT_VERSION_CLASSFILE_MINOR=0\n DEFAULT_VERSION_DOCS_API_SINCE=11\n DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"16 17\"\n DEFAULT_JDK_SOURCE_TARGET_VERSION=17\n-DEFAULT_PROMOTED_VERSION_PRE=\n+DEFAULT_PROMOTED_VERSION_PRE=ea"
      },
      {
        "sha": "4429e3f19c4f95cae138e47fbe949c0a834ffc0d",
        "filename": "make/data/autoheaders/assemblyprefix.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fautoheaders%2Fassemblyprefix.h",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fautoheaders%2Fassemblyprefix.h",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Fautoheaders%2Fassemblyprefix.h?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -4,7 +4,9 @@\n #\n # This code is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n #\n # This code is distributed in the hope that it will be useful, but WITHOUT\n # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or"
      },
      {
        "sha": "fd2655f537645b6950d22d6c0270f9df2775a325",
        "filename": "make/data/cldr/common/bcp47/timezone.xml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fbcp47%2Ftimezone.xml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fbcp47%2Ftimezone.xml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Fcldr%2Fcommon%2Fbcp47%2Ftimezone.xml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -279,6 +279,7 @@ For terms of use, see http://www.unicode.org/copyright.html\n             <type name=\"mwblz\" description=\"Blantyre, Malawi\" alias=\"Africa/Blantyre\"/>\n             <type name=\"mxchi\" description=\"Chihuahua, Mexico\" alias=\"America/Chihuahua\"/>\n             <type name=\"mxcun\" description=\"Cancún, Mexico\" alias=\"America/Cancun\"/>\n+            <type name=\"mxcjs\" description=\"Ciudad Juárez, Mexico\" alias=\"America/Ciudad_Juarez\"/>\n             <type name=\"mxhmo\" description=\"Hermosillo, Mexico\" alias=\"America/Hermosillo\"/>\n             <type name=\"mxmam\" description=\"Matamoros, Mexico\" alias=\"America/Matamoros\"/>\n             <type name=\"mxmex\" description=\"Mexico City, Mexico\" alias=\"America/Mexico_City Mexico/General\"/>\n@@ -393,7 +394,7 @@ For terms of use, see http://www.unicode.org/copyright.html\n             <type name=\"tvfun\" description=\"Funafuti, Tuvalu\" alias=\"Pacific/Funafuti\"/>\n             <type name=\"twtpe\" description=\"Taipei, Taiwan\" alias=\"Asia/Taipei ROC\"/>\n             <type name=\"tzdar\" description=\"Dar es Salaam, Tanzania\" alias=\"Africa/Dar_es_Salaam\"/>\n-            <type name=\"uaiev\" description=\"Kiev, Ukraine\" alias=\"Europe/Kiev\"/>\n+            <type name=\"uaiev\" description=\"Kyiv, Ukraine\" alias=\"Europe/Kiev Europe/Kyiv\"/>\n             <type name=\"uaozh\" description=\"Zaporizhia (Zaporozhye), Ukraine\" alias=\"Europe/Zaporozhye\"/>\n             <type name=\"uasip\" description=\"Simferopol, Ukraine\" alias=\"Europe/Simferopol\"/>\n             <type name=\"uauzh\" description=\"Uzhhorod (Uzhgorod), Ukraine\" alias=\"Europe/Uzhgorod\"/>"
      },
      {
        "sha": "5d189ad24c50b7762a7e25ec85c4106376925993",
        "filename": "make/data/cldr/common/main/es_419.xml",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fmain%2Fes_419.xml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fmain%2Fes_419.xml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Fcldr%2Fcommon%2Fmain%2Fes_419.xml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1019,11 +1019,8 @@ Warnings: All cp values have U+FE0F characters removed. See /annotationsDerived/\n \t\t<decimalFormats numberSystem=\"latn\">\n \t\t\t<decimalFormatLength type=\"long\">\n \t\t\t\t<decimalFormat>\n-\t\t\t\t\t<pattern type=\"1000000000000\" count=\"one\">0 billón</pattern>\n \t\t\t\t\t<pattern type=\"1000000000000\" count=\"other\">0 billón</pattern>\n-\t\t\t\t\t<pattern type=\"10000000000000\" count=\"one\">00 billones</pattern>\n \t\t\t\t\t<pattern type=\"10000000000000\" count=\"other\">00 billones</pattern>\n-\t\t\t\t\t<pattern type=\"100000000000000\" count=\"one\">000 billones</pattern>\n \t\t\t\t\t<pattern type=\"100000000000000\" count=\"other\">000 billones</pattern>\n \t\t\t\t</decimalFormat>\n \t\t\t</decimalFormatLength>"
      },
      {
        "sha": "cd9e1c89a8c649d8a679d027501e72aaceb588f9",
        "filename": "make/data/cldr/common/main/es_MX.xml",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fmain%2Fes_MX.xml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fmain%2Fes_MX.xml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Fcldr%2Fcommon%2Fmain%2Fes_MX.xml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -713,11 +713,8 @@ CLDR data files are interpreted according to the LDML specification (http://unic\n \t\t<decimalFormats numberSystem=\"latn\">\n \t\t\t<decimalFormatLength type=\"long\">\n \t\t\t\t<decimalFormat>\n-\t\t\t\t\t<pattern type=\"1000000000000\" count=\"one\">0 billón</pattern>\n \t\t\t\t\t<pattern type=\"1000000000000\" count=\"other\">0 billones</pattern>\n-\t\t\t\t\t<pattern type=\"10000000000000\" count=\"one\">00 billones</pattern>\n \t\t\t\t\t<pattern type=\"10000000000000\" count=\"other\">00 billones</pattern>\n-\t\t\t\t\t<pattern type=\"100000000000000\" count=\"one\">000 billones</pattern>\n \t\t\t\t\t<pattern type=\"100000000000000\" count=\"other\">000 billones</pattern>\n \t\t\t\t</decimalFormat>\n \t\t\t</decimalFormatLength>"
      },
      {
        "sha": "3b783feba4262a0175b0fc0dab28e64f795754e7",
        "filename": "make/data/cldr/common/main/root.xml",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fmain%2Froot.xml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fmain%2Froot.xml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Fcldr%2Fcommon%2Fmain%2Froot.xml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -2932,6 +2932,18 @@ for derived annotations.\n \t\t\t<zone type=\"Asia/Saigon\">\n \t\t\t\t<exemplarCity>Ho Chi Minh</exemplarCity>\n \t\t\t</zone>\n+\t\t\t<zone type=\"America/Bahia_Banderas\">\n+\t\t\t\t<exemplarCity>Bahía de Banderas</exemplarCity>\n+\t\t\t</zone>\n+\t\t\t<zone type=\"America/Cancun\">\n+\t\t\t\t<exemplarCity>Cancún</exemplarCity>\n+\t\t\t</zone>\n+\t\t\t<zone type=\"America/Ciudad_Juarez\">\n+\t\t\t\t<exemplarCity>Ciudad Juárez</exemplarCity>\n+\t\t\t</zone>\n+\t\t\t<zone type=\"America/Merida\">\n+\t\t\t\t<exemplarCity>Mérida</exemplarCity>\n+\t\t\t</zone>\n \t\t</timeZoneNames>\n \t</dates>\n \t<numbers>"
      },
      {
        "sha": "6e22fb49160eb26d4618a0ea87ab9a26bcd4bff5",
        "filename": "make/data/cldr/common/supplemental/metaZones.xml",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fsupplemental%2FmetaZones.xml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcldr%2Fcommon%2Fsupplemental%2FmetaZones.xml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Fcldr%2Fcommon%2Fsupplemental%2FmetaZones.xml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -331,7 +331,14 @@ For terms of use, see http://www.unicode.org/copyright.html\n \t\t\t</timezone>\n \t\t\t<timezone type=\"America/Chihuahua\">\n \t\t\t\t<usesMetazone to=\"1998-04-05 09:00\" mzone=\"America_Central\"/>\n-\t\t\t\t<usesMetazone from=\"1998-04-05 09:00\" mzone=\"Mexico_Pacific\"/>\n+\t\t\t\t<usesMetazone to=\"2022-10-30 08:00\" from=\"1998-04-05 09:00\" mzone=\"Mexico_Pacific\"/>\n+\t\t\t\t<usesMetazone from=\"2022-10-30 08:00\" mzone=\"America_Central\"/>\n+\t\t\t</timezone>\n+\t\t\t<timezone type=\"America/Ciudad_Juarez\">\n+\t\t\t\t<usesMetazone to=\"1998-04-05 09:00\" mzone=\"America_Central\"/>\n+\t\t\t\t<usesMetazone to=\"2022-10-30 08:00\" from=\"1998-04-05 09:00\" mzone=\"Mexico_Pacific\"/>\n+\t\t\t\t<usesMetazone to=\"2022-11-30 06:00\" from=\"2022-10-30 08:00\" mzone=\"America_Central\"/>\n+\t\t\t\t<usesMetazone from=\"2022-11-30 06:00\" mzone=\"America_Mountain\"/>\n \t\t\t</timezone>\n \t\t\t<timezone type=\"America/Coral_Harbour\">\n \t\t\t\t<usesMetazone mzone=\"America_Eastern\"/>\n@@ -618,14 +625,14 @@ For terms of use, see http://www.unicode.org/copyright.html\n \t\t\t</timezone>\n \t\t\t<timezone type=\"America/Ojinaga\">\n \t\t\t\t<usesMetazone to=\"1998-04-05 09:00\" mzone=\"America_Central\"/>\n-\t\t\t\t<usesMetazone from=\"1998-04-05 09:00\" mzone=\"America_Mountain\"/>\n+\t\t\t\t<usesMetazone to=\"2022-10-30 08:00\" from=\"1998-04-05 09:00\" mzone=\"America_Mountain\"/>\n+\t\t\t\t<usesMetazone from=\"2022-10-30 08:00\" mzone=\"America_Central\"/>\n \t\t\t</timezone>\n \t\t\t<timezone type=\"America/Panama\">\n \t\t\t\t<usesMetazone mzone=\"America_Eastern\"/>\n \t\t\t</timezone>\n \t\t\t<timezone type=\"America/Pangnirtung\">\n-\t\t\t\t<usesMetazone to=\"1995-04-02 06:00\" mzone=\"Atlantic\"/>\n-\t\t\t\t<usesMetazone to=\"1999-10-31 06:00\" from=\"1995-04-02 06:00\" mzone=\"America_Eastern\"/>\n+\t\t\t\t<usesMetazone to=\"1999-10-31 06:00\" mzone=\"America_Eastern\"/>\n \t\t\t\t<usesMetazone to=\"2000-10-29 07:00\" from=\"1999-10-31 06:00\" mzone=\"America_Central\"/>\n \t\t\t\t<usesMetazone from=\"2000-10-29 07:00\" mzone=\"America_Eastern\"/>\n \t\t\t</timezone>"
      },
      {
        "sha": "688de592c7b7495d454dbe1130520d556d3fbf70",
        "filename": "make/data/currency/CurrencyData.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcurrency%2FCurrencyData.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fcurrency%2FCurrencyData.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Fcurrency%2FCurrencyData.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -32,7 +32,7 @@ formatVersion=3\n # Version of the currency code information in this class.\n # It is a serial number that accompanies with each amendment.\n \n-dataVersion=172\n+dataVersion=173\n \n # List of all valid ISO 4217 currency codes.\n # To ensure compatibility, do not remove codes."
      },
      {
        "sha": "40041790f6acfd2b5bc1065dee1cebc87b70543f",
        "filename": "make/data/macosxsigning/default-debug.plist",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fmacosxsigning%2Fdefault-debug.plist",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fmacosxsigning%2Fdefault-debug.plist",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Fmacosxsigning%2Fdefault-debug.plist?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+<dict>\n+    <key>com.apple.security.cs.allow-jit</key>\n+    <true/>\n+    <key>com.apple.security.cs.allow-unsigned-executable-memory</key>\n+    <true/>\n+    <key>com.apple.security.cs.disable-library-validation</key>\n+    <true/>\n+    <key>com.apple.security.cs.allow-dyld-environment-variables</key>\n+    <true/>\n+    <key>com.apple.security.cs.debugger</key>\n+    <true/>\n+    <key>com.apple.security.get-task-allow</key>\n+    <true/>\n+</dict>\n+</plist>"
      },
      {
        "sha": "354919ff1b49fd6dbdb1b346e2dd5596bc33a93e",
        "filename": "make/data/macosxsigning/java-debug.plist",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fmacosxsigning%2Fjava-debug.plist",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Fmacosxsigning%2Fjava-debug.plist",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Fmacosxsigning%2Fjava-debug.plist?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+<dict>\n+    <key>com.apple.security.cs.allow-jit</key>\n+    <true/>\n+    <key>com.apple.security.cs.allow-unsigned-executable-memory</key>\n+    <true/>\n+    <key>com.apple.security.cs.disable-library-validation</key>\n+    <true/>\n+    <key>com.apple.security.cs.allow-dyld-environment-variables</key>\n+    <true/>\n+    <key>com.apple.security.cs.debugger</key>\n+    <true/>\n+    <key>com.apple.security.device.audio-input</key>\n+    <true/>\n+    <key>com.apple.security.get-task-allow</key>\n+    <true/>\n+</dict>\n+</plist>"
      },
      {
        "sha": "0f328a4a7ffa7d9fbcbeb98529ba2e46fa8a1efa",
        "filename": "make/data/tzdata/VERSION",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2FVERSION",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2FVERSION",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2FVERSION?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -21,4 +21,4 @@\n # or visit www.oracle.com if you need additional information or have any\n # questions.\n #\n-tzdata2022c\n+tzdata2022g"
      },
      {
        "sha": "830d7d10b7e7cf8830a0db4f1883991772ec697c",
        "filename": "make/data/tzdata/africa",
        "status": "modified",
        "additions": 54,
        "deletions": 155,
        "changes": 209,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fafrica",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fafrica",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Fafrica?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -120,22 +120,6 @@ Zone\tAfrica/Algiers\t0:12:12 -\tLMT\t1891 Mar 16\n \t\t\t0:00\tAlgeria\tWE%sT\t1981 May\n \t\t\t1:00\t-\tCET\n \n-# Angola\n-# Benin\n-# See Africa/Lagos.\n-\n-# Botswana\n-# See Africa/Maputo.\n-\n-# Burkina Faso\n-# See Africa/Abidjan.\n-\n-# Burundi\n-# See Africa/Maputo.\n-\n-# Cameroon\n-# See Africa/Lagos.\n-\n # Cape Verde / Cabo Verde\n #\n # From Paul Eggert (2018-02-16):\n@@ -150,43 +134,36 @@ Zone Atlantic/Cape_Verde -1:34:04 -\tLMT\t1912 Jan 01  2:00u # Praia\n \t\t\t-2:00\t-\t-02\t1975 Nov 25  2:00\n \t\t\t-1:00\t-\t-01\n \n-# Central African Republic\n-# See Africa/Lagos.\n-\n # Chad\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAfrica/Ndjamena\t1:00:12 -\tLMT\t1912        # N'Djamena\n \t\t\t1:00\t-\tWAT\t1979 Oct 14\n \t\t\t1:00\t1:00\tWAST\t1980 Mar  8\n \t\t\t1:00\t-\tWAT\n \n-# Comoros\n-# See Africa/Nairobi.\n-\n-# Democratic Republic of the Congo\n-# See Africa/Lagos for the western part and Africa/Maputo for the eastern.\n+# Burkina Faso\n+# Côte d'Ivoire (Ivory Coast)\n+# The Gambia\n+# Ghana\n+# Guinea\n+# Iceland\n+# Mali\n+# Mauritania\n+# St Helena\n+# Senegal\n+# Sierra Leone\n+# Togo\n \n-# Republic of the Congo\n-# See Africa/Lagos.\n+# The other parts of the St Helena territory are similar:\n+#\tTristan da Cunha: on GMT, say Whitman and the CIA\n+#\tAscension: on GMT, say the USNO (1995-12-21) and the CIA\n+#\tGough (scientific station since 1955; sealers wintered previously):\n+#\t\ton GMT, says the CIA\n+#\tInaccessible, Nightingale: uninhabited\n \n-# Côte d'Ivoire / Ivory Coast\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAfrica/Abidjan\t-0:16:08 -\tLMT\t1912\n \t\t\t 0:00\t-\tGMT\n-Link Africa/Abidjan Africa/Accra\t# Ghana\n-Link Africa/Abidjan Africa/Bamako\t# Mali\n-Link Africa/Abidjan Africa/Banjul\t# The Gambia\n-Link Africa/Abidjan Africa/Conakry\t# Guinea\n-Link Africa/Abidjan Africa/Dakar\t# Senegal\n-Link Africa/Abidjan Africa/Freetown\t# Sierra Leone\n-Link Africa/Abidjan Africa/Lome\t\t# Togo\n-Link Africa/Abidjan Africa/Nouakchott\t# Mauritania\n-Link Africa/Abidjan Africa/Ouagadougou\t# Burkina Faso\n-Link Africa/Abidjan Atlantic/Reykjavik\t# Iceland\n-Link Africa/Abidjan Atlantic/St_Helena\t# St Helena\n-\n-# Djibouti\n-# See Africa/Nairobi.\n \n ###############################################################################\n \n@@ -382,33 +359,6 @@ Rule\tEgypt\t2014\tonly\t-\tSep\tlastThu\t24:00\t0\t-\n Zone\tAfrica/Cairo\t2:05:09 -\tLMT\t1900 Oct\n \t\t\t2:00\tEgypt\tEE%sT\n \n-# Equatorial Guinea\n-# See Africa/Lagos.\n-\n-# Eritrea\n-# See Africa/Nairobi.\n-\n-# Eswatini (formerly Swaziland)\n-# See Africa/Johannesburg.\n-\n-# Ethiopia\n-# See Africa/Nairobi.\n-#\n-# Unfortunately tzdb records only Western clock time in use in Ethiopia,\n-# as the tzdb format is not up to properly recording a common Ethiopian\n-# timekeeping practice that is based on solar time.  See:\n-# Mortada D. If you have a meeting in Ethiopia, you'd better double\n-# check the time. PRI's The World. 2015-01-30 15:15 -05.\n-# https://www.pri.org/stories/2015-01-30/if-you-have-meeting-ethiopia-you-better-double-check-time\n-\n-# Gabon\n-# See Africa/Lagos.\n-\n-# The Gambia\n-# Ghana\n-# Guinea\n-# See Africa/Abidjan.\n-\n # Guinea-Bissau\n #\n # From Paul Eggert (2018-02-16):\n@@ -421,7 +371,16 @@ Zone\tAfrica/Bissau\t-1:02:20 -\tLMT\t1912 Jan  1  1:00u\n \t\t\t-1:00\t-\t-01\t1975\n \t\t\t 0:00\t-\tGMT\n \n+# Comoros\n+# Djibouti\n+# Eritrea\n+# Ethiopia\n # Kenya\n+# Madagascar\n+# Mayotte\n+# Somalia\n+# Tanzania\n+# Uganda\n \n # From P Chan (2020-10-24):\n #\n@@ -464,25 +423,21 @@ Zone\tAfrica/Bissau\t-1:02:20 -\tLMT\t1912 Jan  1  1:00u\n # The 1908-05-01 announcement does not give an effective date,\n # so just say \"1908 May\".\n \n+# From Paul Eggert (2018-09-11):\n+# Unfortunately tzdb records only Western clock time in use in Ethiopia,\n+# as the tzdb format is not up to properly recording a common Ethiopian\n+# timekeeping practice that is based on solar time.  See:\n+# Mortada D. If you have a meeting in Ethiopia, you'd better double\n+# check the time. PRI's The World. 2015-01-30 15:15 -05.\n+# https://www.pri.org/stories/2015-01-30/if-you-have-meeting-ethiopia-you-better-double-check-time\n+\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAfrica/Nairobi\t2:27:16\t-\tLMT\t1908 May\n \t\t\t2:30\t-\t+0230\t1928 Jun 30 24:00\n \t\t\t3:00\t-\tEAT\t1930 Jan  4 24:00\n \t\t\t2:30\t-\t+0230\t1936 Dec 31 24:00\n \t\t\t2:45\t-\t+0245\t1942 Jul 31 24:00\n \t\t\t3:00\t-\tEAT\n-Link Africa/Nairobi Africa/Addis_Ababa\t # Ethiopia\n-Link Africa/Nairobi Africa/Asmara\t # Eritrea\n-Link Africa/Nairobi Africa/Dar_es_Salaam # Tanzania\n-Link Africa/Nairobi Africa/Djibouti\n-Link Africa/Nairobi Africa/Kampala\t # Uganda\n-Link Africa/Nairobi Africa/Mogadishu\t # Somalia\n-Link Africa/Nairobi Indian/Antananarivo\t # Madagascar\n-Link Africa/Nairobi Indian/Comoro\n-Link Africa/Nairobi Indian/Mayotte\n-\n-# Lesotho\n-# See Africa/Johannesburg.\n \n # Liberia\n #\n@@ -563,16 +518,6 @@ Zone\tAfrica/Tripoli\t0:52:44 -\tLMT\t1920\n \t\t\t1:00\tLibya\tCE%sT\t2013 Oct 25  2:00\n \t\t\t2:00\t-\tEET\n \n-# Madagascar\n-# See Africa/Nairobi.\n-\n-# Malawi\n-# See Africa/Maputo.\n-\n-# Mali\n-# Mauritania\n-# See Africa/Abidjan.\n-\n # Mauritius\n \n # From Steffen Thorsen (2008-06-25):\n@@ -666,8 +611,6 @@ Zone Indian/Mauritius\t3:50:00 -\tLMT\t1907 # Port Louis\n # Agalega Is, Rodriguez\n # no information; probably like Indian/Mauritius\n \n-# Mayotte\n-# See Africa/Nairobi.\n \n # Morocco\n # See Africa/Ceuta for Spanish Morocco.\n@@ -1160,7 +1103,14 @@ Zone Africa/El_Aaiun\t-0:52:48 -\tLMT\t1934 Jan # El Aaiún\n \t\t\t 0:00\tMorocco\t+00/+01\t2018 Oct 28  3:00\n \t\t\t 1:00\tMorocco\t+01/+00\n \n+# Botswana\n+# Burundi\n+# Democratic Republic of the Congo (eastern)\n+# Malawi\n # Mozambique\n+# Rwanda\n+# Zambia\n+# Zimbabwe\n #\n # Shanks gives 1903-03-01 for the transition to CAT.\n # Perhaps the 1911-05-26 Portuguese decree\n@@ -1170,14 +1120,6 @@ Zone Africa/El_Aaiun\t-0:52:48 -\tLMT\t1934 Jan # El Aaiún\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAfrica/Maputo\t2:10:20 -\tLMT\t1903 Mar\n \t\t\t2:00\t-\tCAT\n-Link Africa/Maputo Africa/Blantyre\t# Malawi\n-Link Africa/Maputo Africa/Bujumbura\t# Burundi\n-Link Africa/Maputo Africa/Gaborone\t# Botswana\n-Link Africa/Maputo Africa/Harare\t# Zimbabwe\n-Link Africa/Maputo Africa/Kigali\t# Rwanda\n-Link Africa/Maputo Africa/Lubumbashi\t# E Dem. Rep. of Congo\n-Link Africa/Maputo Africa/Lusaka\t# Zambia\n-\n \n # Namibia\n \n@@ -1256,9 +1198,16 @@ Zone\tAfrica/Windhoek\t1:08:24 -\tLMT\t1892 Feb 8\n #\t\t\t2:00\t-\tCAT\n # End of rearguard section.\n \n-# Niger\n-# See Africa/Lagos.\n \n+# Angola\n+# Benin\n+# Cameroon\n+# Central African Republic\n+# Democratic Republic of the Congo (western)\n+# Republic of the Congo\n+# Equatorial Guinea\n+# Gabon\n+# Niger\n # Nigeria\n \n # From P Chan (2020-12-03):\n@@ -1324,32 +1273,6 @@ Zone\tAfrica/Lagos\t0:13:35 -\tLMT\t1905 Jul  1\n \t\t\t0:13:35\t-\tLMT\t1914 Jan  1\n \t\t\t0:30\t-\t+0030\t1919 Sep  1\n \t\t\t1:00\t-\tWAT\n-Link Africa/Lagos Africa/Bangui\t\t# Central African Republic\n-Link Africa/Lagos Africa/Brazzaville\t# Rep. of the Congo\n-Link Africa/Lagos Africa/Douala\t\t# Cameroon\n-Link Africa/Lagos Africa/Kinshasa\t# Dem. Rep. of the Congo (west)\n-Link Africa/Lagos Africa/Libreville\t# Gabon\n-Link Africa/Lagos Africa/Luanda\t\t# Angola\n-Link Africa/Lagos Africa/Malabo\t\t# Equatorial Guinea\n-Link Africa/Lagos Africa/Niamey\t\t# Niger\n-Link Africa/Lagos Africa/Porto-Novo\t# Benin\n-\n-# Réunion\n-# See Asia/Dubai.\n-#\n-# The Crozet Islands also observe Réunion time; see the 'antarctica' file.\n-\n-# Rwanda\n-# See Africa/Maputo.\n-\n-# St Helena\n-# See Africa/Abidjan.\n-# The other parts of the St Helena territory are similar:\n-#\tTristan da Cunha: on GMT, say Whitman and the CIA\n-#\tAscension: on GMT, say the USNO (1995-12-21) and the CIA\n-#\tGough (scientific station since 1955; sealers wintered previously):\n-#\t\ton GMT, says the CIA\n-#\tInaccessible, Nightingale: uninhabited\n \n # São Tomé and Príncipe\n \n@@ -1378,28 +1301,17 @@ Zone\tAfrica/Sao_Tome\t 0:26:56 -\tLMT\t1884\n \t\t\t 1:00\t-\tWAT\t2019 Jan  1 02:00\n \t\t\t 0:00\t-\tGMT\n \n-# Senegal\n-# See Africa/Abidjan.\n-\n-# Seychelles\n-# See Asia/Dubai.\n-\n-# Sierra Leone\n-# See Africa/Abidjan.\n-\n-# Somalia\n-# See Africa/Nairobi.\n-\n+# Eswatini (Swaziland)\n+# Lesotho\n # South Africa\n+\n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n Rule\tSA\t1942\t1943\t-\tSep\tSun>=15\t2:00\t1:00\t-\n Rule\tSA\t1943\t1944\t-\tMar\tSun>=15\t2:00\t0\t-\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone Africa/Johannesburg 1:52:00 -\tLMT\t1892 Feb 8\n \t\t\t1:30\t-\tSAST\t1903 Mar\n \t\t\t2:00\tSA\tSAST\n-Link Africa/Johannesburg Africa/Maseru\t# Lesotho\n-Link Africa/Johannesburg Africa/Mbabane\t# Eswatini\n #\n # Marion and Prince Edward Is\n # scientific station since 1947\n@@ -1448,12 +1360,6 @@ Zone\tAfrica/Juba\t2:06:28 -\tLMT\t1931\n \t\t\t3:00\t-\tEAT\t2021 Feb  1 00:00\n \t\t\t2:00\t-\tCAT\n \n-# Tanzania\n-# See Africa/Nairobi.\n-\n-# Togo\n-# See Africa/Abidjan.\n-\n # Tunisia\n \n # From Gwillim Law (2005-04-30):\n@@ -1551,10 +1457,3 @@ Rule\tTunisia\t2006\t2008\t-\tOct\tlastSun\t 2:00s\t0\t-\n Zone\tAfrica/Tunis\t0:40:44 -\tLMT\t1881 May 12\n \t\t\t0:09:21\t-\tPMT\t1911 Mar 11 # Paris Mean Time\n \t\t\t1:00\tTunisia\tCE%sT\n-\n-# Uganda\n-# See Africa/Nairobi.\n-\n-# Zambia\n-# Zimbabwe\n-# See Africa/Maputo."
      },
      {
        "sha": "792542b92246b4952fe53c0d46c9793a8ae5cf7a",
        "filename": "make/data/tzdata/antarctica",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fantarctica",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fantarctica",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Fantarctica?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -329,4 +329,4 @@ Zone Antarctica/Rothera\t0\t-\t-00\t1976 Dec  1\n # we have to go around and set them back 5 minutes or so.\n # Maybe if we let them run fast all of the time, we'd get to leave here sooner!!\n #\n-# See 'australasia' for Antarctica/McMurdo.\n+# See Pacific/Auckland."
      },
      {
        "sha": "ff81978bc47eb10240e5412c9107ac1c236ad40c",
        "filename": "make/data/tzdata/asia",
        "status": "modified",
        "additions": 70,
        "deletions": 67,
        "changes": 137,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fasia",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fasia",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Fasia?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -172,9 +172,6 @@ Zone\tAsia/Baku\t3:19:24 -\tLMT\t1924 May  2\n \t\t\t4:00\tEUAsia\t+04/+05\t1997\n \t\t\t4:00\tAzer\t+04/+05\n \n-# Bahrain\n-# See Asia/Qatar.\n-\n # Bangladesh\n # From Alexander Krivenyshev (2009-05-13):\n # According to newspaper Asian Tribune (May 6, 2009) Bangladesh may introduce\n@@ -277,10 +274,8 @@ Zone\tIndian/Chagos\t4:49:40\t-\tLMT\t1907\n \t\t\t5:00\t-\t+05\t1996\n \t\t\t6:00\t-\t+06\n \n-# Brunei\n-# See Asia/Kuching.\n-\n-# Burma / Myanmar\n+# Cocos (Keeling) Islands\n+# Myanmar (Burma)\n \n # Milne says 6:24:40 was the meridian of the time ball observatory at Rangoon.\n \n@@ -296,11 +291,6 @@ Zone\tAsia/Yangon\t6:24:47 -\tLMT\t1880        # or Rangoon\n \t\t\t6:30\t-\t+0630\t1942 May\n \t\t\t9:00\t-\t+09\t1945 May  3\n \t\t\t6:30\t-\t+0630\n-Link Asia/Yangon Indian/Cocos\n-\n-# Cambodia\n-# See Asia/Bangkok.\n-\n \n # China\n \n@@ -688,10 +678,9 @@ Zone\tAsia/Shanghai\t8:05:43\t-\tLMT\t1901\n \t\t\t8:00\tPRC\tC%sT\n # Xinjiang time, used by many in western China; represented by Ürümqi / Ürümchi\n # / Wulumuqi.  (Please use Asia/Shanghai if you prefer Beijing time.)\n+# Vostok base in Antarctica matches this since 1970.\n Zone\tAsia/Urumqi\t5:50:20\t-\tLMT\t1928\n \t\t\t6:00\t-\t+06\n-Link Asia/Urumqi Antarctica/Vostok\n-\n \n # Hong Kong\n \n@@ -1195,10 +1184,6 @@ Zone\tAsia/Famagusta\t2:15:48\t-\tLMT\t1921 Nov 14\n \t\t\t3:00\t-\t+03\t2017 Oct 29 1:00u\n \t\t\t2:00\tEUAsia\tEE%sT\n \n-# Classically, Cyprus belongs to Asia; e.g. see Herodotus, Histories, I.72.\n-# However, for various reasons many users expect to find it under Europe.\n-Link\tAsia/Nicosia\tEurope/Nicosia\n-\n # Georgia\n # From Paul Eggert (1994-11-19):\n # Today's _Economist_ (p 60) reports that Georgia moved its clocks forward\n@@ -2254,6 +2239,17 @@ Zone\tAsia/Tokyo\t9:18:59\t-\tLMT\t1887 Dec 31 15:00u\n # From the Arabic version, it seems to say it would be at midnight\n # (assume 24:00) on the last Thursday in February, starting from 2022.\n \n+# From Issam Al-Zuwairi (2022-10-05):\n+# The Council of Ministers in Jordan decided Wednesday 5th October 2022,\n+# that daylight saving time (DST) will be throughout the year....\n+#\n+# From Brian Inglis (2022-10-06):\n+# https://petra.gov.jo/Include/InnerPage.jsp?ID=45567&lang=en&name=en_news\n+#\n+# From Paul Eggert (2022-10-05):\n+# Like Syria, model this as a transition from EEST +03 (DST) to plain +03\n+# (non-DST) at the point where DST would otherwise have ended.\n+\n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n Rule\tJordan\t1973\tonly\t-\tJun\t6\t0:00\t1:00\tS\n Rule\tJordan\t1973\t1975\t-\tOct\t1\t0:00\t0\t-\n@@ -2285,11 +2281,12 @@ Rule\tJordan\t2005\tonly\t-\tSep\tlastFri\t0:00s\t0\t-\n Rule\tJordan\t2006\t2011\t-\tOct\tlastFri\t0:00s\t0\t-\n Rule\tJordan\t2013\tonly\t-\tDec\t20\t0:00\t0\t-\n Rule\tJordan\t2014\t2021\t-\tMar\tlastThu\t24:00\t1:00\tS\n-Rule\tJordan\t2014\tmax\t-\tOct\tlastFri\t0:00s\t0\t-\n-Rule\tJordan\t2022\tmax\t-\tFeb\tlastThu\t24:00\t1:00\tS\n+Rule\tJordan\t2014\t2022\t-\tOct\tlastFri\t0:00s\t0\t-\n+Rule\tJordan\t2022\tonly\t-\tFeb\tlastThu\t24:00\t1:00\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAsia/Amman\t2:23:44 -\tLMT\t1931\n-\t\t\t2:00\tJordan\tEE%sT\n+\t\t\t2:00\tJordan\tEE%sT\t2022 Oct 28 0:00s\n+\t\t\t3:00\t-\t+03\n \n \n # Kazakhstan\n@@ -2715,14 +2712,6 @@ Zone\tAsia/Pyongyang\t8:23:00 -\tLMT\t1908 Apr  1\n \t\t\t8:30\t-\tKST\t2018 May  4 23:30\n \t\t\t9:00\t-\tKST\n \n-###############################################################################\n-\n-# Kuwait\n-# See Asia/Riyadh.\n-\n-# Laos\n-# See Asia/Bangkok.\n-\n \n # Lebanon\n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n@@ -2754,7 +2743,9 @@ Rule\tLebanon\t1999\tmax\t-\tOct\tlastSun\t0:00\t0\t-\n Zone\tAsia/Beirut\t2:22:00 -\tLMT\t1880\n \t\t\t2:00\tLebanon\tEE%sT\n \n-# Malaysia\n+# Brunei\n+# Malaysia (eastern)\n+#\n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n Rule\tNBorneo\t1935\t1941\t-\tSep\t14\t0:00\t0:20\t-\n Rule\tNBorneo\t1935\t1941\t-\tDec\t14\t0:00\t0\t-\n@@ -2771,14 +2762,12 @@ Zone Asia/Kuching\t7:21:20\t-\tLMT\t1926 Mar\n \t\t\t8:00 NBorneo  +08/+0820\t1942 Feb 16\n \t\t\t9:00\t-\t+09\t1945 Sep 12\n \t\t\t8:00\t-\t+08\n-Link Asia/Kuching Asia/Brunei\n \n # Maldives\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tIndian/Maldives\t4:54:00 -\tLMT\t1880 # Malé\n \t\t\t4:54:00\t-\tMMT\t1960 # Malé Mean Time\n \t\t\t5:00\t-\t+05\n-Link Indian/Maldives Indian/Kerguelen\n \n # Mongolia\n \n@@ -2941,9 +2930,6 @@ Zone\tAsia/Kathmandu\t5:41:16 -\tLMT\t1920\n \t\t\t5:30\t-\t+0530\t1986\n \t\t\t5:45\t-\t+0545\n \n-# Oman\n-# See Asia/Dubai.\n-\n # Pakistan\n \n # From Rives McDow (2002-03-13):\n@@ -3398,10 +3384,6 @@ Zone\tAsia/Karachi\t4:28:12 -\tLMT\t1907\n # The winter time in 2015 started on October 23 at 01:00.\n # https://wafa.ps/ar_page.aspx?id=CgpCdYa670694628582aCgpCdY\n # http://www.palestinecabinet.gov.ps/portal/meeting/details/27583\n-#\n-# From Paul Eggert (2019-04-10):\n-# For now, guess spring-ahead transitions are at 00:00 on the Saturday\n-# preceding March's last Sunday (i.e., Sat>=24).\n \n # From P Chan (2021-10-18):\n # http://wafa.ps/Pages/Details/34701\n@@ -3418,6 +3400,18 @@ Zone\tAsia/Karachi\t4:28:12 -\tLMT\t1907\n # From Heba Hamad (2022-03-10):\n # summer time will begin in Palestine from Sunday 03-27-2022, 00:00 AM.\n \n+# From Heba Hamad (2022-08-30):\n+# winter time will begin in Palestine from Saturday 10-29, 02:00 AM by\n+# 60 minutes backwards.  Also the state of Palestine adopted the summer\n+# and winter time for the years: 2023,2024,2025,2026 ...\n+# https://mm.icann.org/pipermail/tz/attachments/20220830/9f024566/Time-0001.pdf\n+# (2022-08-31): ... the Saturday before the last Sunday in March and October\n+# at 2:00 AM ,for the years from 2023 to 2026.\n+# (2022-09-05): https://mtit.pna.ps/Site/New/1453\n+#\n+# From Paul Eggert (2022-08-31):\n+# For now, assume that this rule will also be used after 2026.\n+\n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n Rule EgyptAsia\t1957\tonly\t-\tMay\t10\t0:00\t1:00\tS\n Rule EgyptAsia\t1957\t1958\t-\tOct\t 1\t0:00\t0\t-\n@@ -3448,14 +3442,16 @@ Rule Palestine\t2013\tonly\t-\tSep\t27\t0:00\t0\t-\n Rule Palestine\t2014\tonly\t-\tOct\t24\t0:00\t0\t-\n Rule Palestine\t2015\tonly\t-\tMar\t28\t0:00\t1:00\tS\n Rule Palestine\t2015\tonly\t-\tOct\t23\t1:00\t0\t-\n-Rule Palestine\t2016\t2018\t-\tMar\tSat>=24\t1:00\t1:00\tS\n-Rule Palestine\t2016\t2018\t-\tOct\tSat>=24\t1:00\t0\t-\n+Rule Palestine\t2016\t2018\t-\tMar\tSat<=30\t1:00\t1:00\tS\n+Rule Palestine\t2016\t2018\t-\tOct\tSat<=30\t1:00\t0\t-\n Rule Palestine\t2019\tonly\t-\tMar\t29\t0:00\t1:00\tS\n-Rule Palestine\t2019\tonly\t-\tOct\tSat>=24\t0:00\t0\t-\n-Rule Palestine\t2020\t2021\t-\tMar\tSat>=24\t0:00\t1:00\tS\n+Rule Palestine\t2019\tonly\t-\tOct\tSat<=30\t0:00\t0\t-\n+Rule Palestine\t2020\t2021\t-\tMar\tSat<=30\t0:00\t1:00\tS\n Rule Palestine\t2020\tonly\t-\tOct\t24\t1:00\t0\t-\n-Rule Palestine\t2021\tmax\t-\tOct\tFri>=23\t1:00\t0\t-\n-Rule Palestine\t2022\tmax\t-\tMar\tSun>=25\t0:00\t1:00\tS\n+Rule Palestine\t2021\tonly\t-\tOct\t29\t1:00\t0\t-\n+Rule Palestine\t2022\tonly\t-\tMar\t27\t0:00\t1:00\tS\n+Rule Palestine\t2022\tmax\t-\tOct\tSat<=30\t2:00\t0\t-\n+Rule Palestine\t2023\tmax\t-\tMar\tSat<=30\t2:00\t1:00\tS\n \n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAsia/Gaza\t2:17:52\t-\tLMT\t1900 Oct\n@@ -3544,14 +3540,18 @@ Zone\tAsia/Manila\t-15:56:00 -\tLMT\t1844 Dec 31\n \t\t\t9:00\t-\tJST\t1944 Nov\n \t\t\t8:00\tPhil\tP%sT\n \n+# Bahrain\n # Qatar\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAsia/Qatar\t3:26:08 -\tLMT\t1920     # Al Dawhah / Doha\n \t\t\t4:00\t-\t+04\t1972 Jun\n \t\t\t3:00\t-\t+03\n-Link Asia/Qatar Asia/Bahrain\n \n+# Kuwait\n # Saudi Arabia\n+# Yemen\n+#\n+# Japan's year-round bases in Antarctica match this since 1970.\n #\n # From Paul Eggert (2018-08-29):\n # Time in Saudi Arabia and other countries in the Arabian peninsula was not\n@@ -3596,9 +3596,6 @@ Link Asia/Qatar Asia/Bahrain\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAsia/Riyadh\t3:06:52 -\tLMT\t1947 Mar 14\n \t\t\t3:00\t-\t+03\n-Link Asia/Riyadh Antarctica/Syowa\n-Link Asia/Riyadh Asia/Aden\t# Yemen\n-Link Asia/Riyadh Asia/Kuwait\n \n # Singapore\n # taken from Mok Ly Yng (2003-10-30)\n@@ -3611,9 +3608,8 @@ Zone\tAsia/Singapore\t6:55:25 -\tLMT\t1901 Jan  1\n \t\t\t7:20\t-\t+0720\t1941 Sep  1\n \t\t\t7:30\t-\t+0730\t1942 Feb 16\n \t\t\t9:00\t-\t+09\t1945 Sep 12\n-\t\t\t7:30\t-\t+0730\t1982 Jan  1\n+\t\t\t7:30\t-\t+0730\t1981 Dec 31 16:00u\n \t\t\t8:00\t-\t+08\n-Link Asia/Singapore Asia/Kuala_Lumpur\n \n # Spratly Is\n # no information\n@@ -3828,19 +3824,27 @@ Rule\tSyria\t2007\tonly\t-\tNov\t Fri>=1\t0:00\t0\t-\n # Our brief summary:\n # https://www.timeanddate.com/news/time/syria-dst-2012.html\n \n-# From Arthur David Olson (2012-03-27):\n-# Assume last Friday in March going forward XXX.\n+# From Steffen Thorsen (2022-10-05):\n+# Syria is adopting year-round DST, starting this autumn....\n+# From https://www.enabbaladi.net/archives/607812\n+# \"This [the decision] came after the weekly government meeting today,\n+# Tuesday 4 October ...\"\n+#\n+# From Paul Eggert (2022-10-05):\n+# Like Jordan, model this as a transition from EEST +03 (DST) to plain +03\n+# (non-DST) at the point where DST would otherwise have ended.\n \n Rule\tSyria\t2008\tonly\t-\tApr\tFri>=1\t0:00\t1:00\tS\n Rule\tSyria\t2008\tonly\t-\tNov\t1\t0:00\t0\t-\n Rule\tSyria\t2009\tonly\t-\tMar\tlastFri\t0:00\t1:00\tS\n Rule\tSyria\t2010\t2011\t-\tApr\tFri>=1\t0:00\t1:00\tS\n-Rule\tSyria\t2012\tmax\t-\tMar\tlastFri\t0:00\t1:00\tS\n-Rule\tSyria\t2009\tmax\t-\tOct\tlastFri\t0:00\t0\t-\n+Rule\tSyria\t2012\t2022\t-\tMar\tlastFri\t0:00\t1:00\tS\n+Rule\tSyria\t2009\t2022\t-\tOct\tlastFri\t0:00\t0\t-\n \n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAsia/Damascus\t2:25:12 -\tLMT\t1920 # Dimashq\n-\t\t\t2:00\tSyria\tEE%sT\n+\t\t\t2:00\tSyria\tEE%sT\t2022 Oct 28 0:00\n+\t\t\t3:00\t-\t+03\n \n # Tajikistan\n # From Shanks & Pottenger.\n@@ -3851,14 +3855,15 @@ Zone\tAsia/Dushanbe\t4:35:12 -\tLMT\t1924 May  2\n \t\t\t5:00\t1:00\t+06\t1991 Sep  9  2:00s\n \t\t\t5:00\t-\t+05\n \n+# Cambodia\n+# Christmas I\n+# Laos\n # Thailand\n+# Vietnam (northern)\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAsia/Bangkok\t6:42:04\t-\tLMT\t1880\n \t\t\t6:42:04\t-\tBMT\t1920 Apr # Bangkok Mean Time\n \t\t\t7:00\t-\t+07\n-Link Asia/Bangkok Asia/Phnom_Penh\t# Cambodia\n-Link Asia/Bangkok Asia/Vientiane\t# Laos\n-Link Asia/Bangkok Indian/Christmas\n \n # Turkmenistan\n # From Shanks & Pottenger.\n@@ -3869,13 +3874,15 @@ Zone\tAsia/Ashgabat\t3:53:32 -\tLMT\t1924 May  2 # or Ashkhabad\n \t\t\t4:00 RussiaAsia\t+04/+05\t1992 Jan 19  2:00\n \t\t\t5:00\t-\t+05\n \n+# Oman\n+# Réunion\n+# Seychelles\n # United Arab Emirates\n+#\n+# The Crozet Is also observe Réunion time; see the 'antarctica' file.\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAsia/Dubai\t3:41:12 -\tLMT\t1920\n \t\t\t4:00\t-\t+04\n-Link Asia/Dubai Asia/Muscat\t# Oman\n-Link Asia/Dubai Indian/Mahe\n-Link Asia/Dubai Indian/Reunion\n \n # Uzbekistan\n # Byalokoz 1919 says Uzbekistan was 4:27:53.\n@@ -3895,7 +3902,7 @@ Zone\tAsia/Tashkent\t4:37:11 -\tLMT\t1924 May  2\n \t\t\t5:00 RussiaAsia\t+05/+06\t1992\n \t\t\t5:00\t-\t+05\n \n-# Vietnam\n+# Vietnam (southern)\n \n # From Paul Eggert (2014-10-04):\n # Milne gives 7:16:56 for the meridian of Saigon in 1899, as being\n@@ -3969,7 +3976,3 @@ Zone Asia/Ho_Chi_Minh\t7:06:30 -\tLMT\t1906 Jul  1\n # For timestamps in north Vietnam back to 1970 (the tzdb cutoff),\n # use Asia/Bangkok; see the VN entries in the file zone1970.tab.\n # For timestamps before 1970, see Asia/Hanoi in the file 'backzone'.\n-\n-\n-# Yemen\n-# See Asia/Riyadh."
      },
      {
        "sha": "fbe3b8a6d72c09180653ef5d8ff368c688426f89",
        "filename": "make/data/tzdata/australasia",
        "status": "modified",
        "additions": 21,
        "deletions": 37,
        "changes": 58,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Faustralasia",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Faustralasia",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Faustralasia?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -274,13 +274,6 @@ Zone Antarctica/Macquarie 0\t-\t-00\t1899 Nov\n \t\t\t10:00\t1:00\tAEDT\t2011\n \t\t\t10:00\tAT\tAE%sT\n \n-# Christmas\n-# See Asia/Bangkok.\n-\n-# Cocos (Keeling) Is\n-# See Asia/Yangon.\n-\n-\n # Fiji\n \n # Milne gives 11:55:44 for Suva.\n@@ -416,8 +409,14 @@ Zone Antarctica/Macquarie 0\t-\t-00\t1899 Nov\n # concerned shifting arrival and departure times, which may look like a simple\n # thing but requires some significant logistical adjustments domestically and\n # internationally.\"\n-# Assume for now that DST will resume with the recent pre-2020 rules for the\n-# 2022/2023 season.\n+\n+# From Shalvin Narayan (2022-10-27):\n+# Please note that there will not be any daylight savings time change\n+# in Fiji for 2022-2023....\n+# https://www.facebook.com/FijianGovernment/posts/pfbid0mmWVTYmTibn66ybpFda75pDcf34SSpoSaskJW5gXwaKo5Sgc7273Q4fXWc6kQV6Hl\n+#\n+# From Paul Eggert (2022-10-27):\n+# For now, assume DST is suspended indefinitely.\n \n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n Rule\tFiji\t1998\t1999\t-\tNov\tSun>=1\t2:00\t1:00\t-\n@@ -432,8 +431,6 @@ Rule\tFiji\t2014\t2018\t-\tNov\tSun>=1\t2:00\t1:00\t-\n Rule\tFiji\t2015\t2021\t-\tJan\tSun>=12\t3:00\t0\t-\n Rule\tFiji\t2019\tonly\t-\tNov\tSun>=8\t2:00\t1:00\t-\n Rule\tFiji\t2020\tonly\t-\tDec\t20\t2:00\t1:00\t-\n-Rule\tFiji\t2022\tmax\t-\tNov\tSun>=8\t2:00\t1:00\t-\n-Rule\tFiji\t2023\tmax\t-\tJan\tSun>=12\t3:00\t0\t-\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tPacific/Fiji\t11:55:44 -\tLMT\t1915 Oct 26 # Suva\n \t\t\t12:00\tFiji\t+12/+13\n@@ -449,7 +446,9 @@ Zone\tPacific/Tahiti\t -9:58:16 -\tLMT\t1912 Oct # Papeete\n # Clipperton (near North America) is administered from French Polynesia;\n # it is uninhabited.\n \n+\n # Guam\n+# N Mariana Is\n \n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n # http://guamlegislature.com/Public_Laws_5th/PL05-025.pdf\n@@ -489,17 +488,20 @@ Zone\tPacific/Guam\t-14:21:00 -\tLMT\t1844 Dec 31\n \t\t\t 9:00\t-\t+09\t1944 Jul 31\n \t\t\t10:00\tGuam\tG%sT\t2000 Dec 23\n \t\t\t10:00\t-\tChST\t# Chamorro Standard Time\n-Link Pacific/Guam Pacific/Saipan # N Mariana Is\n \n-# Kiribati\n+\n+# Kiribati (Gilbert Is)\n+# Marshall Is\n+# Tuvalu\n+# Wake\n+# Wallis & Futuna\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone Pacific/Tarawa\t 11:32:04 -\tLMT\t1901 # Bairiki\n \t\t\t 12:00\t-\t+12\n-Link Pacific/Tarawa Pacific/Funafuti\n-Link Pacific/Tarawa Pacific/Majuro\n-Link Pacific/Tarawa Pacific/Wake\n-Link Pacific/Tarawa Pacific/Wallis\n \n+# Kiribati (except Gilbert Is)\n+# See Pacific/Tarawa for the Gilbert Is.\n+# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone Pacific/Kanton\t  0\t-\t-00\t1937 Aug 31\n \t\t\t-12:00\t-\t-12\t1979 Oct\n \t\t\t-11:00\t-\t-11\t1994 Dec 31\n@@ -509,9 +511,6 @@ Zone Pacific/Kiritimati\t-10:29:20 -\tLMT\t1901\n \t\t\t-10:00\t-\t-10\t1994 Dec 31\n \t\t\t 14:00\t-\t+14\n \n-# N Mariana Is\n-# See Pacific/Guam.\n-\n # Marshall Is\n # See Pacific/Tarawa for most locations.\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n@@ -561,6 +560,7 @@ Zone\tPacific/Noumea\t11:05:48 -\tLMT\t1912 Jan 13 # Nouméa\n ###############################################################################\n \n # New Zealand\n+# McMurdo Station and Scott Base in Antarctica use Auckland time.\n \n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n Rule\tNZ\t1927\tonly\t-\tNov\t 6\t2:00\t1:00\tS\n@@ -596,7 +596,6 @@ Rule\tChatham\t2008\tmax\t-\tApr\tSun>=1\t2:45s\t0\t-\n Zone Pacific/Auckland\t11:39:04 -\tLMT\t1868 Nov  2\n \t\t\t11:30\tNZ\tNZ%sT\t1946 Jan  1\n \t\t\t12:00\tNZ\tNZ%sT\n-Link Pacific/Auckland Antarctica/McMurdo\n \n Zone Pacific/Chatham\t12:13:48 -\tLMT\t1868 Nov  2\n \t\t\t12:15\t-\t+1215\t1946 Jan  1\n@@ -695,8 +694,6 @@ Zone Pacific/Palau\t-15:02:04 -\tLMT\t1844 Dec 31\t# Koror\n Zone Pacific/Port_Moresby 9:48:40 -\tLMT\t1880\n \t\t\t9:48:32\t-\tPMMT\t1895 # Port Moresby Mean Time\n \t\t\t10:00\t-\t+10\n-Link Pacific/Port_Moresby Antarctica/DumontDUrville\n-Link Pacific/Port_Moresby Pacific/Chuuk\n #\n # From Paul Eggert (2014-10-13):\n # Base the Bougainville entry on the Arawa-Kieta region, which appears to have\n@@ -729,10 +726,10 @@ Zone Pacific/Pitcairn\t-8:40:20 -\tLMT\t1901        # Adamstown\n \t\t\t-8:00\t-\t-08\n \n # American Samoa\n+# Midway\n Zone Pacific/Pago_Pago\t 12:37:12 -\tLMT\t1892 Jul  5\n \t\t\t-11:22:48 -\tLMT\t1911\n \t\t\t-11:00\t-\tSST\t            # S=Samoa\n-Link Pacific/Pago_Pago Pacific/Midway # in US minor outlying islands\n \n # Samoa (formerly and also known as Western Samoa)\n \n@@ -824,7 +821,6 @@ Zone Pacific/Apia\t 12:33:04 -\tLMT\t1892 Jul  5\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone Pacific/Guadalcanal 10:39:48 -\tLMT\t1912 Oct # Honiara\n \t\t\t11:00\t-\t+11\n-Link Pacific/Guadalcanal Pacific/Pohnpei\n \n # Tokelau\n #\n@@ -864,9 +860,6 @@ Zone Pacific/Tongatapu\t12:19:12 -\tLMT\t1945 Sep 10\n \t\t\t13:00\t-\t+13\t1999\n \t\t\t13:00\tTonga\t+13/+14\n \n-# Tuvalu\n-# See Pacific/Tarawa.\n-\n \n # US minor outlying islands\n \n@@ -917,15 +910,9 @@ Zone Pacific/Tongatapu\t12:19:12 -\tLMT\t1945 Sep 10\n # Kingman\n # uninhabited\n \n-# Midway\n-# See Pacific/Pago_Pago.\n-\n # Palmyra\n # uninhabited since World War II; was probably like Pacific/Kiritimati\n \n-# Wake\n-# See Pacific/Tarawa.\n-\n \n # Vanuatu\n \n@@ -962,9 +949,6 @@ Rule\tVanuatu\t1992\tonly\t-\tOct\tSat>=22\t24:00\t1:00\t-\n Zone\tPacific/Efate\t11:13:16 -\tLMT\t1912 Jan 13 # Vila\n \t\t\t11:00\tVanuatu\t+11/+12\n \n-# Wallis and Futuna\n-# See Pacific/Tarawa.\n-\n ###############################################################################\n \n # NOTES"
      },
      {
        "sha": "fa44f655009179565dd6cf0be9b91a1b143de29f",
        "filename": "make/data/tzdata/backward",
        "status": "modified",
        "additions": 233,
        "deletions": 57,
        "changes": 290,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fbackward",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fbackward",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Fbackward?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -27,7 +27,7 @@\n # 2009-05-17 by Arthur David Olson.\n \n # This file provides links from old or merged timezone names to current ones.\n-# Many names changed in late 1993, and many merged names moved here\n+# Many names changed in 1993 and in 1995, and many merged names moved here\n # in the period from 2013 through 2022.  Several of these names are\n # also present in the file 'backzone', which has data important only\n # for pre-1970 timestamps and so is out of scope for tzdb proper.\n@@ -36,50 +36,24 @@\n # building with 'make BACKWARD=', in practice downstream users\n # typically use this file for backward compatibility.\n \n-# Link\tTARGET\t\t\tLINK-NAME\n-Link\tAfrica/Nairobi\t\tAfrica/Asmera\n-Link\tAfrica/Abidjan\t\tAfrica/Timbuktu\n-Link\tAmerica/Argentina/Catamarca\tAmerica/Argentina/ComodRivadavia\n-Link\tAmerica/Adak\t\tAmerica/Atka\n-Link\tAmerica/Argentina/Buenos_Aires\tAmerica/Buenos_Aires\n-Link\tAmerica/Argentina/Catamarca\tAmerica/Catamarca\n-Link\tAmerica/Panama\t\tAmerica/Coral_Harbour\n-Link\tAmerica/Argentina/Cordoba\tAmerica/Cordoba\n-Link\tAmerica/Tijuana\t\tAmerica/Ensenada\n-Link\tAmerica/Indiana/Indianapolis\tAmerica/Fort_Wayne\n-Link\tAmerica/Nuuk\t\tAmerica/Godthab\n-Link\tAmerica/Indiana/Indianapolis\tAmerica/Indianapolis\n-Link\tAmerica/Argentina/Jujuy\tAmerica/Jujuy\n-Link\tAmerica/Indiana/Knox\tAmerica/Knox_IN\n-Link\tAmerica/Kentucky/Louisville\tAmerica/Louisville\n-Link\tAmerica/Argentina/Mendoza\tAmerica/Mendoza\n-Link\tAmerica/Toronto\t\tAmerica/Montreal\n-Link\tAmerica/Rio_Branco\tAmerica/Porto_Acre\n-Link\tAmerica/Argentina/Cordoba\tAmerica/Rosario\n-Link\tAmerica/Tijuana\t\tAmerica/Santa_Isabel\n-Link\tAmerica/Denver\t\tAmerica/Shiprock\n-Link\tAmerica/Puerto_Rico\tAmerica/Virgin\n-Link\tPacific/Auckland\tAntarctica/South_Pole\n-Link\tAsia/Ashgabat\t\tAsia/Ashkhabad\n-Link\tAsia/Kolkata\t\tAsia/Calcutta\n-Link\tAsia/Shanghai\t\tAsia/Chongqing\n-Link\tAsia/Shanghai\t\tAsia/Chungking\n-Link\tAsia/Dhaka\t\tAsia/Dacca\n-Link\tAsia/Shanghai\t\tAsia/Harbin\n-Link\tAsia/Urumqi\t\tAsia/Kashgar\n-Link\tAsia/Kathmandu\t\tAsia/Katmandu\n-Link\tAsia/Macau\t\tAsia/Macao\n-Link\tAsia/Yangon\t\tAsia/Rangoon\n-Link\tAsia/Ho_Chi_Minh\tAsia/Saigon\n-Link\tAsia/Jerusalem\t\tAsia/Tel_Aviv\n-Link\tAsia/Thimphu\t\tAsia/Thimbu\n-Link\tAsia/Makassar\t\tAsia/Ujung_Pandang\n-Link\tAsia/Ulaanbaatar\tAsia/Ulan_Bator\n-Link\tAtlantic/Faroe\t\tAtlantic/Faeroe\n-Link\tEurope/Berlin\t\tAtlantic/Jan_Mayen\n-Link\tAustralia/Sydney\tAustralia/ACT\n-Link\tAustralia/Sydney\tAustralia/Canberra\n-Link\tAustralia/Hobart\tAustralia/Currie\n+# This file is divided into sections, one for each major reason for a\n+# backward compatibility link.  Each section is sorted by link name.\n+\n+# A \"#= TARGET1\" comment labels each link inserted only because some\n+# .zi parsers (including tzcode through 2022e) mishandle links to links.\n+# The comment says what the target would be if these parsers were fixed\n+# so that data could contain links to links.  For example, the line\n+# \"Link Australia/Sydney Australia/ACT #= Australia/Canberra\" would be\n+# \"Link Australia/Canberra Australia/ACT\" were it not that data lines\n+# refrain from linking to links like Australia/Canberra, which means\n+# the Australia/ACT line links instead to Australia/Sydney,\n+# Australia/Canberra's target.\n+\n+\n+# Pre-1993 naming conventions\n+\n+# Link\tTARGET\t\t\tLINK-NAME\t#= TARGET1\n+Link\tAustralia/Sydney\tAustralia/ACT\t#= Australia/Canberra\n Link\tAustralia/Lord_Howe\tAustralia/LHI\n Link\tAustralia/Sydney\tAustralia/NSW\n Link\tAustralia/Darwin\tAustralia/North\n@@ -89,7 +63,7 @@ Link\tAustralia/Hobart\tAustralia/Tasmania\n Link\tAustralia/Melbourne\tAustralia/Victoria\n Link\tAustralia/Perth\t\tAustralia/West\n Link\tAustralia/Broken_Hill\tAustralia/Yancowinna\n-Link\tAmerica/Rio_Branco\tBrazil/Acre\n+Link\tAmerica/Rio_Branco\tBrazil/Acre\t#= America/Porto_Acre\n Link\tAmerica/Noronha\t\tBrazil/DeNoronha\n Link\tAmerica/Sao_Paulo\tBrazil/East\n Link\tAmerica/Manaus\t\tBrazil/West\n@@ -109,18 +83,36 @@ Link\tPacific/Easter\t\tChile/EasterIsland\n Link\tAmerica/Havana\t\tCuba\n Link\tAfrica/Cairo\t\tEgypt\n Link\tEurope/Dublin\t\tEire\n+# Vanguard section, for most .zi parsers.\n+#Link\tGMT\t\t\tEtc/GMT\n+#Link\tGMT\t\t\tEtc/GMT+0\n+#Link\tGMT\t\t\tEtc/GMT-0\n+#Link\tGMT\t\t\tEtc/GMT0\n+#Link\tGMT\t\t\tEtc/Greenwich\n+# Rearguard section, for TZUpdater 2.3.2 and earlier.\n+Link\tEtc/GMT\t\t\tEtc/GMT+0\n+Link\tEtc/GMT\t\t\tEtc/GMT-0\n+Link\tEtc/GMT\t\t\tEtc/GMT0\n+Link\tEtc/GMT\t\t\tEtc/Greenwich\n+# End of rearguard section.\n Link\tEtc/UTC\t\t\tEtc/UCT\n-Link\tEurope/London\t\tEurope/Belfast\n-Link\tEurope/Kyiv\t\tEurope/Kiev\n-Link\tEurope/Chisinau\t\tEurope/Tiraspol\n+Link\tEtc/UTC\t\t\tEtc/Universal\n+Link\tEtc/UTC\t\t\tEtc/Zulu\n Link\tEurope/London\t\tGB\n Link\tEurope/London\t\tGB-Eire\n+# Vanguard section, for most .zi parsers.\n+#Link\tGMT\t\t\tGMT+0\n+#Link\tGMT\t\t\tGMT-0\n+#Link\tGMT\t\t\tGMT0\n+#Link\tGMT\t\t\tGreenwich\n+# Rearguard section, for TZUpdater 2.3.2 and earlier.\n Link\tEtc/GMT\t\t\tGMT+0\n Link\tEtc/GMT\t\t\tGMT-0\n Link\tEtc/GMT\t\t\tGMT0\n Link\tEtc/GMT\t\t\tGreenwich\n+# End of rearguard section.\n Link\tAsia/Hong_Kong\t\tHongkong\n-Link\tAfrica/Abidjan\t\tIceland\n+Link\tAfrica/Abidjan\t\tIceland\t#= Atlantic/Reykjavik\n Link\tAsia/Tehran\t\tIran\n Link\tAsia/Jerusalem\t\tIsrael\n Link\tAmerica/Jamaica\t\tJamaica\n@@ -132,14 +124,8 @@ Link\tAmerica/Mazatlan\tMexico/BajaSur\n Link\tAmerica/Mexico_City\tMexico/General\n Link\tPacific/Auckland\tNZ\n Link\tPacific/Chatham\t\tNZ-CHAT\n-Link\tAmerica/Denver\t\tNavajo\n+Link\tAmerica/Denver\t\tNavajo\t#= America/Shiprock\n Link\tAsia/Shanghai\t\tPRC\n-Link\tPacific/Kanton\t\tPacific/Enderbury\n-Link\tPacific/Honolulu\tPacific/Johnston\n-Link\tPacific/Guadalcanal\tPacific/Ponape\n-Link\tPacific/Pago_Pago\tPacific/Samoa\n-Link\tPacific/Port_Moresby\tPacific/Truk\n-Link\tPacific/Port_Moresby\tPacific/Yap\n Link\tEurope/Warsaw\t\tPoland\n Link\tEurope/Lisbon\t\tPortugal\n Link\tAsia/Taipei\t\tROC\n@@ -163,3 +149,193 @@ Link\tEtc/UTC\t\t\tUTC\n Link\tEtc/UTC\t\t\tUniversal\n Link\tEurope/Moscow\t\tW-SU\n Link\tEtc/UTC\t\t\tZulu\n+\n+\n+# Two-part names that were renamed mostly to three-part names in 1995\n+\n+# Link\tTARGET\t\t\t\tLINK-NAME\t#= TARGET1\n+Link\tAmerica/Argentina/Buenos_Aires\tAmerica/Buenos_Aires\n+Link\tAmerica/Argentina/Catamarca\tAmerica/Catamarca\n+Link\tAmerica/Argentina/Cordoba\tAmerica/Cordoba\n+Link\tAmerica/Indiana/Indianapolis\tAmerica/Indianapolis\n+Link\tAmerica/Argentina/Jujuy\t\tAmerica/Jujuy\n+Link\tAmerica/Indiana/Knox\t\tAmerica/Knox_IN\n+Link\tAmerica/Kentucky/Louisville\tAmerica/Louisville\n+Link\tAmerica/Argentina/Mendoza\tAmerica/Mendoza\n+Link\tAmerica/Puerto_Rico\t\tAmerica/Virgin\t#= America/St_Thomas\n+Link\tPacific/Pago_Pago\t\tPacific/Samoa\n+\n+\n+# Pre-2013 practice, which typically had a Zone per zone.tab line\n+\n+# Link\tTARGET\t\t\tLINK-NAME\n+Link\tAfrica/Abidjan\t\tAfrica/Accra\n+Link\tAfrica/Nairobi\t\tAfrica/Addis_Ababa\n+Link\tAfrica/Nairobi\t\tAfrica/Asmara\n+Link\tAfrica/Abidjan\t\tAfrica/Bamako\n+Link\tAfrica/Lagos\t\tAfrica/Bangui\n+Link\tAfrica/Abidjan\t\tAfrica/Banjul\n+Link\tAfrica/Maputo\t\tAfrica/Blantyre\n+Link\tAfrica/Lagos\t\tAfrica/Brazzaville\n+Link\tAfrica/Maputo\t\tAfrica/Bujumbura\n+Link\tAfrica/Abidjan\t\tAfrica/Conakry\n+Link\tAfrica/Abidjan\t\tAfrica/Dakar\n+Link\tAfrica/Nairobi\t\tAfrica/Dar_es_Salaam\n+Link\tAfrica/Nairobi\t\tAfrica/Djibouti\n+Link\tAfrica/Lagos\t\tAfrica/Douala\n+Link\tAfrica/Abidjan\t\tAfrica/Freetown\n+Link\tAfrica/Maputo\t\tAfrica/Gaborone\n+Link\tAfrica/Maputo\t\tAfrica/Harare\n+Link\tAfrica/Nairobi\t\tAfrica/Kampala\n+Link\tAfrica/Maputo\t\tAfrica/Kigali\n+Link\tAfrica/Lagos\t\tAfrica/Kinshasa\n+Link\tAfrica/Lagos\t\tAfrica/Libreville\n+Link\tAfrica/Abidjan\t\tAfrica/Lome\n+Link\tAfrica/Lagos\t\tAfrica/Luanda\n+Link\tAfrica/Maputo\t\tAfrica/Lubumbashi\n+Link\tAfrica/Maputo\t\tAfrica/Lusaka\n+Link\tAfrica/Lagos\t\tAfrica/Malabo\n+Link\tAfrica/Johannesburg\tAfrica/Maseru\n+Link\tAfrica/Johannesburg\tAfrica/Mbabane\n+Link\tAfrica/Nairobi\t\tAfrica/Mogadishu\n+Link\tAfrica/Lagos\t\tAfrica/Niamey\n+Link\tAfrica/Abidjan\t\tAfrica/Nouakchott\n+Link\tAfrica/Abidjan\t\tAfrica/Ouagadougou\n+Link\tAfrica/Lagos\t\tAfrica/Porto-Novo\n+Link\tAmerica/Puerto_Rico\tAmerica/Anguilla\n+Link\tAmerica/Puerto_Rico\tAmerica/Antigua\n+Link\tAmerica/Puerto_Rico\tAmerica/Aruba\n+Link\tAmerica/Panama\t\tAmerica/Atikokan\n+Link\tAmerica/Puerto_Rico\tAmerica/Blanc-Sablon\n+Link\tAmerica/Panama\t\tAmerica/Cayman\n+Link\tAmerica/Phoenix\t\tAmerica/Creston\n+Link\tAmerica/Puerto_Rico\tAmerica/Curacao\n+Link\tAmerica/Puerto_Rico\tAmerica/Dominica\n+Link\tAmerica/Puerto_Rico\tAmerica/Grenada\n+Link\tAmerica/Puerto_Rico\tAmerica/Guadeloupe\n+Link\tAmerica/Puerto_Rico\tAmerica/Kralendijk\n+Link\tAmerica/Puerto_Rico\tAmerica/Lower_Princes\n+Link\tAmerica/Puerto_Rico\tAmerica/Marigot\n+Link\tAmerica/Puerto_Rico\tAmerica/Montserrat\n+Link\tAmerica/Toronto\t\tAmerica/Nassau\n+Link\tAmerica/Puerto_Rico\tAmerica/Port_of_Spain\n+Link\tAmerica/Puerto_Rico\tAmerica/St_Barthelemy\n+Link\tAmerica/Puerto_Rico\tAmerica/St_Kitts\n+Link\tAmerica/Puerto_Rico\tAmerica/St_Lucia\n+Link\tAmerica/Puerto_Rico\tAmerica/St_Thomas\n+Link\tAmerica/Puerto_Rico\tAmerica/St_Vincent\n+Link\tAmerica/Puerto_Rico\tAmerica/Tortola\n+Link\tPacific/Port_Moresby\tAntarctica/DumontDUrville\n+Link\tPacific/Auckland\tAntarctica/McMurdo\n+Link\tAsia/Riyadh\t\tAntarctica/Syowa\n+Link\tAsia/Urumqi\t\tAntarctica/Vostok\n+Link\tEurope/Berlin\t\tArctic/Longyearbyen\n+Link\tAsia/Riyadh\t\tAsia/Aden\n+Link\tAsia/Qatar\t\tAsia/Bahrain\n+Link\tAsia/Kuching\t\tAsia/Brunei\n+Link\tAsia/Singapore\t\tAsia/Kuala_Lumpur\n+Link\tAsia/Riyadh\t\tAsia/Kuwait\n+Link\tAsia/Dubai\t\tAsia/Muscat\n+Link\tAsia/Bangkok\t\tAsia/Phnom_Penh\n+Link\tAsia/Bangkok\t\tAsia/Vientiane\n+Link\tAfrica/Abidjan\t\tAtlantic/Reykjavik\n+Link\tAfrica/Abidjan\t\tAtlantic/St_Helena\n+Link\tEurope/Brussels\t\tEurope/Amsterdam\n+Link\tEurope/Prague\t\tEurope/Bratislava\n+Link\tEurope/Zurich\t\tEurope/Busingen\n+Link\tEurope/Berlin\t\tEurope/Copenhagen\n+Link\tEurope/London\t\tEurope/Guernsey\n+Link\tEurope/London\t\tEurope/Isle_of_Man\n+Link\tEurope/London\t\tEurope/Jersey\n+Link\tEurope/Belgrade\t\tEurope/Ljubljana\n+Link\tEurope/Brussels\t\tEurope/Luxembourg\n+Link\tEurope/Helsinki\t\tEurope/Mariehamn\n+Link\tEurope/Paris\t\tEurope/Monaco\n+Link\tEurope/Berlin\t\tEurope/Oslo\n+Link\tEurope/Belgrade\t\tEurope/Podgorica\n+Link\tEurope/Rome\t\tEurope/San_Marino\n+Link\tEurope/Belgrade\t\tEurope/Sarajevo\n+Link\tEurope/Belgrade\t\tEurope/Skopje\n+Link\tEurope/Berlin\t\tEurope/Stockholm\n+Link\tEurope/Zurich\t\tEurope/Vaduz\n+Link\tEurope/Rome\t\tEurope/Vatican\n+Link\tEurope/Belgrade\t\tEurope/Zagreb\n+Link\tAfrica/Nairobi\t\tIndian/Antananarivo\n+Link\tAsia/Bangkok\t\tIndian/Christmas\n+Link\tAsia/Yangon\t\tIndian/Cocos\n+Link\tAfrica/Nairobi\t\tIndian/Comoro\n+Link\tIndian/Maldives\t\tIndian/Kerguelen\n+Link\tAsia/Dubai\t\tIndian/Mahe\n+Link\tAfrica/Nairobi\t\tIndian/Mayotte\n+Link\tAsia/Dubai\t\tIndian/Reunion\n+Link\tPacific/Port_Moresby\tPacific/Chuuk\n+Link\tPacific/Tarawa\t\tPacific/Funafuti\n+Link\tPacific/Tarawa\t\tPacific/Majuro\n+Link\tPacific/Pago_Pago\tPacific/Midway\n+Link\tPacific/Guadalcanal\tPacific/Pohnpei\n+Link\tPacific/Guam\t\tPacific/Saipan\n+Link\tPacific/Tarawa\t\tPacific/Wake\n+Link\tPacific/Tarawa\t\tPacific/Wallis\n+\n+\n+# Non-zone.tab locations with timestamps since 1970 that duplicate\n+# those of an existing location\n+\n+# Link\tTARGET\t\t\tLINK-NAME\n+Link\tAfrica/Abidjan\t\tAfrica/Timbuktu\n+Link\tAmerica/Argentina/Catamarca\tAmerica/Argentina/ComodRivadavia\n+Link\tAmerica/Adak\t\tAmerica/Atka\n+Link\tAmerica/Panama\t\tAmerica/Coral_Harbour\n+Link\tAmerica/Tijuana\t\tAmerica/Ensenada\n+Link\tAmerica/Indiana/Indianapolis\tAmerica/Fort_Wayne\n+Link\tAmerica/Toronto\t\tAmerica/Montreal\n+Link\tAmerica/Toronto\t\tAmerica/Nipigon\n+Link\tAmerica/Iqaluit\t\tAmerica/Pangnirtung\n+Link\tAmerica/Rio_Branco\tAmerica/Porto_Acre\n+Link\tAmerica/Winnipeg\tAmerica/Rainy_River\n+Link\tAmerica/Argentina/Cordoba\tAmerica/Rosario\n+Link\tAmerica/Tijuana\t\tAmerica/Santa_Isabel\n+Link\tAmerica/Denver\t\tAmerica/Shiprock\n+Link\tAmerica/Toronto\t\tAmerica/Thunder_Bay\n+Link\tPacific/Auckland\tAntarctica/South_Pole\n+Link\tAsia/Shanghai\t\tAsia/Chongqing\n+Link\tAsia/Shanghai\t\tAsia/Harbin\n+Link\tAsia/Urumqi\t\tAsia/Kashgar\n+Link\tAsia/Jerusalem\t\tAsia/Tel_Aviv\n+Link\tEurope/Berlin\t\tAtlantic/Jan_Mayen\n+Link\tAustralia/Sydney\tAustralia/Canberra\n+Link\tAustralia/Hobart\tAustralia/Currie\n+Link\tEurope/London\t\tEurope/Belfast\n+Link\tEurope/Chisinau\t\tEurope/Tiraspol\n+Link\tEurope/Kyiv\t\tEurope/Uzhgorod\n+Link\tEurope/Kyiv\t\tEurope/Zaporozhye\n+Link\tPacific/Kanton\t\tPacific/Enderbury\n+Link\tPacific/Honolulu\tPacific/Johnston\n+Link\tPacific/Port_Moresby\tPacific/Yap\n+\n+\n+# Alternate names for the same location\n+\n+# Link\tTARGET\t\t\tLINK-NAME\t#= TARGET1\n+Link\tAfrica/Nairobi\t\tAfrica/Asmera\t#= Africa/Asmara\n+Link\tAmerica/Nuuk\t\tAmerica/Godthab\n+Link\tAsia/Ashgabat\t\tAsia/Ashkhabad\n+Link\tAsia/Kolkata\t\tAsia/Calcutta\n+Link\tAsia/Shanghai\t\tAsia/Chungking\t#= Asia/Chongqing\n+Link\tAsia/Dhaka\t\tAsia/Dacca\n+# Istanbul is in both continents.\n+Link\tEurope/Istanbul\t\tAsia/Istanbul\n+Link\tAsia/Kathmandu\t\tAsia/Katmandu\n+Link\tAsia/Macau\t\tAsia/Macao\n+Link\tAsia/Yangon\t\tAsia/Rangoon\n+Link\tAsia/Ho_Chi_Minh\tAsia/Saigon\n+Link\tAsia/Thimphu\t\tAsia/Thimbu\n+Link\tAsia/Makassar\t\tAsia/Ujung_Pandang\n+Link\tAsia/Ulaanbaatar\tAsia/Ulan_Bator\n+Link\tAtlantic/Faroe\t\tAtlantic/Faeroe\n+Link\tEurope/Kyiv\t\tEurope/Kiev\n+# Classically, Cyprus is in Asia; e.g. see Herodotus, Histories, I.72.\n+# However, for various reasons many users expect to find it under Europe.\n+Link\tAsia/Nicosia\t\tEurope/Nicosia\n+Link\tPacific/Guadalcanal\tPacific/Ponape\t#= Pacific/Pohnpei\n+Link\tPacific/Port_Moresby\tPacific/Truk\t#= Pacific/Chuuk"
      },
      {
        "sha": "8ae294f524a6017889e710f15d14d61ae9173884",
        "filename": "make/data/tzdata/etcetera",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fetcetera",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fetcetera",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Fetcetera?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -39,26 +39,23 @@\n # Do not use a POSIX TZ setting like TZ='GMT+4', which is four hours\n # behind GMT but uses the completely misleading abbreviation \"GMT\".\n \n-Zone\tEtc/GMT\t\t0\t-\tGMT\n-\n # The following zone is used by tzcode functions like gmtime,\n # which load the \"UTC\" file to handle seconds properly.\n Zone\tEtc/UTC\t\t0\t-\tUTC\n \n+# Functions like gmtime load the \"GMT\" file to handle leap seconds properly.\n+# Vanguard section, which works with most .zi parsers.\n+#Zone\tGMT\t\t0\t-\tGMT\n+# Rearguard section, for TZUpdater 2.3.2 and earlier.\n+Zone\tEtc/GMT\t\t0\t-\tGMT\n+\n # The following link uses older naming conventions,\n # but it belongs here, not in the file 'backward',\n # as it is needed for tzcode releases through 2022a,\n # where functions like gmtime load \"GMT\" instead of the \"Etc/UTC\".\n # We want this to work even on installations that omit 'backward'.\n Link\tEtc/GMT\t\t\t\tGMT\n-\n-Link\tEtc/UTC\t\t\t\tEtc/Universal\n-Link\tEtc/UTC\t\t\t\tEtc/Zulu\n-\n-Link\tEtc/GMT\t\t\t\tEtc/Greenwich\n-Link\tEtc/GMT\t\t\t\tEtc/GMT-0\n-Link\tEtc/GMT\t\t\t\tEtc/GMT+0\n-Link\tEtc/GMT\t\t\t\tEtc/GMT0\n+# End of rearguard section.\n \n # Be consistent with POSIX TZ settings in the Zone names,\n # even though this is the opposite of what many people expect."
      },
      {
        "sha": "acc5da3ec79543dfd6a9b379abf8baa042502050",
        "filename": "make/data/tzdata/europe",
        "status": "modified",
        "additions": 107,
        "deletions": 183,
        "changes": 290,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Feurope",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Feurope",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Feurope?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -527,9 +527,6 @@ Zone\tEurope/London\t-0:01:15 -\tLMT\t1847 Dec  1\n \t\t\t 1:00\t-\tBST\t1971 Oct 31  2:00u\n \t\t\t 0:00\tGB-Eire\t%s\t1996\n \t\t\t 0:00\tEU\tGMT/BST\n-Link\tEurope/London\tEurope/Jersey\n-Link\tEurope/London\tEurope/Guernsey\n-Link\tEurope/London\tEurope/Isle_of_Man\n \n # From Paul Eggert (2018-02-15):\n # In January 2018 we discovered that the negative SAVE values in the\n@@ -902,6 +899,8 @@ Zone\tEurope/Minsk\t1:50:16 -\tLMT\t1880\n \t\t\t3:00\t-\t+03\n \n # Belgium\n+# Luxembourg\n+# Netherlands\n #\n # From Michael Deckers (2019-08-25):\n # The exposition in the web page\n@@ -984,11 +983,6 @@ Zone\tEurope/Brussels\t0:17:30 -\tLMT\t1880\n \t\t\t1:00\tC-Eur\tCE%sT\t1944 Sep  3\n \t\t\t1:00\tBelgium\tCE%sT\t1977\n \t\t\t1:00\tEU\tCE%sT\n-Link Europe/Brussels Europe/Amsterdam\n-Link Europe/Brussels Europe/Luxembourg\n-\n-# Bosnia and Herzegovina\n-# See Europe/Belgrade.\n \n # Bulgaria\n #\n@@ -1015,13 +1009,11 @@ Zone\tEurope/Sofia\t1:33:16 -\tLMT\t1880\n \t\t\t2:00\tE-Eur\tEE%sT\t1997\n \t\t\t2:00\tEU\tEE%sT\n \n-# Croatia\n-# See Europe/Belgrade.\n-\n # Cyprus\n # Please see the 'asia' file for Asia/Nicosia.\n \n-# Czech Republic / Czechia\n+# Czech Republic (Czechia)\n+# Slovakia\n #\n # From Paul Eggert (2018-04-15):\n # The source for Czech data is: Kdy začíná a končí letní čas. 2018-04-15.\n@@ -1048,15 +1040,14 @@ Zone\tEurope/Prague\t0:57:44 -\tLMT\t1850\n # End of rearguard section.\n \t\t\t1:00\tCzech\tCE%sT\t1979\n \t\t\t1:00\tEU\tCE%sT\n-Link Europe/Prague Europe/Bratislava\n-\n-\n-# Denmark, Faroe Islands, and Greenland\n-# For Denmark see Europe/Berlin.\n \n+# Faroe Is\n+# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone Atlantic/Faroe\t-0:27:04 -\tLMT\t1908 Jan 11 # Tórshavn\n \t\t\t 0:00\t-\tWET\t1981\n \t\t\t 0:00\tEU\tWE%sT\n+\n+# Greenland\n #\n # From Paul Eggert (2004-10-31):\n # During World War II, Germany maintained secret manned weather stations in\n@@ -1135,7 +1126,30 @@ Zone Atlantic/Faroe\t-0:27:04 -\tLMT\t1908 Jan 11 # Tórshavn\n # \"National Park\" by Executive Order:\n # http://naalakkersuisut.gl/~/media/Nanoq/Files/Attached%20Files/Engelske-tekster/Legislation/Executive%20Order%20National%20Park.rtf\n # It is their only National Park.\n-#\n+\n+# From Jonas Nyrup (2022-11-24):\n+# On last Saturday in October 2023 when DST ends America/Nuuk will switch\n+# from -03/-02 to -02/-01\n+# https://sermitsiaq.ag/forslagtidsforskel-danmark-mindskes-sommertid-beholdes\n+# ...\n+# https://sermitsiaq.ag/groenland-skifte-tidszone-trods-bekymringer\n+#\n+# From Jürgen Appel (2022-11-25):\n+# https://ina.gl/samlinger/oversigt-over-samlinger/samling/dagsordener/dagsorden.aspx?lang=da&day=24-11-2022\n+# If I understand this correctly, from the next planned switch to\n+# summer time, Greenland will permanently stay at that time, i.e. no\n+# switch back to winter time in 2023 will occur.\n+#\n+# From Paul Eggert (2022-11-28):\n+# The official document in Danish\n+# https://naalakkersuisut.gl/-/media/naalakkersuisut/filer/kundgoerelser/2022/11/2511/31_da_inatsisartutlov-om-tidens-bestemmelse.pdf?la=da&hash=A33597D8A38CC7038465241119EF34F3\n+# says standard time for Greenland is -02, that Naalakkersuisut can lay down\n+# rules for DST and can require some areas to use a different time zone,\n+# and that this all takes effect 2023-03-25 22:00.  The abovementioned\n+# \"bekymringer\" URL says the intent is no transition March 25, that\n+# Greenland will not go back to winter time in fall 2023, and that\n+# only America/Nuuk is affected (though further changes may occur).\n+\n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n Rule\tThule\t1991\t1992\t-\tMar\tlastSun\t2:00\t1:00\tD\n Rule\tThule\t1991\t1992\t-\tSep\tlastSun\t2:00\t0\tS\n@@ -1158,7 +1172,8 @@ Zone America/Scoresbysund -1:27:52 -\tLMT\t1916 Jul 28 # Ittoqqortoormiit\n \t\t\t-1:00\tEU\t-01/+00\n Zone America/Nuuk\t-3:26:56 -\tLMT\t1916 Jul 28 # Godthåb\n \t\t\t-3:00\t-\t-03\t1980 Apr  6  2:00\n-\t\t\t-3:00\tEU\t-03/-02\n+\t\t\t-3:00\tEU\t-03/-02\t2023 Mar 25 22:00\n+\t\t\t-2:00\t-\t-02\n Zone America/Thule\t-4:35:08 -\tLMT\t1916 Jul 28 # Pituffik\n \t\t\t-4:00\tThule\tA%sT\n \n@@ -1282,11 +1297,8 @@ Zone\tEurope/Helsinki\t1:39:49 -\tLMT\t1878 May 31\n \t\t\t2:00\tFinland\tEE%sT\t1983\n \t\t\t2:00\tEU\tEE%sT\n \n-# Åland Is\n-Link\tEurope/Helsinki\tEurope/Mariehamn\n-\n-\n # France\n+# Monaco\n \n # From Ciro Discepolo (2000-12-20):\n #\n@@ -1423,9 +1435,11 @@ Zone\tEurope/Paris\t0:09:21 -\tLMT\t1891 Mar 16\n \t\t\t0:00\tFrance\tWE%sT\t1945 Sep 16  3:00\n \t\t\t1:00\tFrance\tCE%sT\t1977\n \t\t\t1:00\tEU\tCE%sT\n-Link Europe/Paris Europe/Monaco\n \n+# Denmark\n # Germany\n+# Norway\n+# Sweden\n \n # From Markus Kuhn (1998-09-29):\n # The German time zone web site by the Physikalisch-Technische\n@@ -1443,6 +1457,53 @@ Link Europe/Paris Europe/Monaco\n # However, Moscow did not observe daylight saving in 1945, so\n # this was equivalent to UT +03, not +04.\n \n+# Svalbard & Jan Mayen\n+\n+# From Steffen Thorsen (2001-05-01):\n+# Although I could not find it explicitly, it seems that Jan Mayen and\n+# Svalbard have been using the same time as Norway at least since the\n+# time they were declared as parts of Norway.  Svalbard was declared\n+# as a part of Norway by law of 1925-07-17 no 11, section 4 and Jan\n+# Mayen by law of 1930-02-27 no 2, section 2. (From\n+# <http://www.lovdata.no/all/nl-19250717-011.html> and\n+# <http://www.lovdata.no/all/nl-19300227-002.html>).  The law/regulation\n+# for normal/standard time in Norway is from 1894-06-29 no 1 (came\n+# into operation on 1895-01-01) and Svalbard/Jan Mayen seem to be a\n+# part of this law since 1925/1930. (From\n+# <http://www.lovdata.no/all/nl-18940629-001.html>) I have not been\n+# able to find if Jan Mayen used a different time zone (e.g. -0100)\n+# before 1930. Jan Mayen has only been \"inhabited\" since 1921 by\n+# Norwegian meteorologists and maybe used the same time as Norway ever\n+# since 1921.  Svalbard (Arctic/Longyearbyen) has been inhabited since\n+# before 1895, and therefore probably changed the local time somewhere\n+# between 1895 and 1925 (inclusive).\n+\n+# From Paul Eggert (2013-09-04):\n+#\n+# Actually, Jan Mayen was never occupied by Germany during World War II,\n+# so it must have diverged from Oslo time during the war, as Oslo was\n+# keeping Berlin time.\n+#\n+# <https://www.jan-mayen.no/history.htm> says that the meteorologists\n+# burned down their station in 1940 and left the island, but returned in\n+# 1941 with a small Norwegian garrison and continued operations despite\n+# frequent air attacks from Germans.  In 1943 the Americans established a\n+# radiolocating station on the island, called \"Atlantic City\".  Possibly\n+# the UT offset changed during the war, but I think it unlikely that\n+# Jan Mayen used German daylight-saving rules.\n+#\n+# Svalbard is more complicated, as it was raided in August 1941 by an\n+# Allied party that evacuated the civilian population to England (says\n+# <http://www.bartleby.com/65/sv/Svalbard.html>).  The Svalbard FAQ\n+# <http://www.svalbard.com/SvalbardFAQ.html> says that the Germans were\n+# expelled on 1942-05-14.  However, small parties of Germans did return,\n+# and according to Wilhelm Dege's book \"War North of 80\" (1954)\n+# http://www.ucalgary.ca/UofC/departments/UP/1-55238/1-55238-110-2.html\n+# the German armed forces at the Svalbard weather station code-named\n+# Haudegen did not surrender to the Allies until September 1945.\n+#\n+# All these events predate our cutoff date of 1970, so use Europe/Berlin\n+# for these regions.\n \n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n Rule\tGermany\t1946\tonly\t-\tApr\t14\t2:00s\t1:00\tS\n@@ -1467,11 +1528,6 @@ Zone\tEurope/Berlin\t0:53:28 -\tLMT\t1893 Apr\n \t\t\t1:00 SovietZone\tCE%sT\t1946\n \t\t\t1:00\tGermany\tCE%sT\t1980\n \t\t\t1:00\tEU\tCE%sT\n-Link Europe/Berlin Arctic/Longyearbyen\n-Link Europe/Berlin Europe/Copenhagen\n-Link Europe/Berlin Europe/Oslo\n-Link Europe/Berlin Europe/Stockholm\n-\n \n # Georgia\n # Please see the \"asia\" file for Asia/Tbilisi.\n@@ -1590,10 +1646,9 @@ Zone\tEurope/Budapest\t1:16:20 -\tLMT\t1890 Nov  1\n \t\t\t1:00\tHungary\tCE%sT\t1984\n \t\t\t1:00\tEU\tCE%sT\n \n-# Iceland\n-# See Africa/Abidjan.\n-\n # Italy\n+# San Marino\n+# Vatican City\n #\n # From Paul Eggert (2001-03-06):\n # Sicily and Sardinia each had their own time zones from 1866 to 1893,\n@@ -1712,13 +1767,6 @@ Zone\tEurope/Rome\t0:49:56 -\tLMT\t1866 Dec 12\n \t\t\t1:00\tC-Eur\tCE%sT\t1944 Jun  4\n \t\t\t1:00\tItaly\tCE%sT\t1980\n \t\t\t1:00\tEU\tCE%sT\n-Link Europe/Rome Europe/Vatican\n-Link Europe/Rome Europe/San_Marino\n-\n-\n-# Kosovo\n-# See Europe/Belgrade.\n-\n \n # Latvia\n \n@@ -1802,10 +1850,6 @@ Zone\tEurope/Riga\t1:36:34\t-\tLMT\t1880\n \t\t\t2:00\t-\tEET\t2001 Jan  2\n \t\t\t2:00\tEU\tEE%sT\n \n-# Liechtenstein\n-# See Europe/Zurich.\n-\n-\n # Lithuania\n \n # From Paul Eggert (2016-03-18):\n@@ -1858,12 +1902,6 @@ Zone\tEurope/Vilnius\t1:41:16\t-\tLMT\t1880\n \t\t\t2:00\t-\tEET\t2003 Jan  1\n \t\t\t2:00\tEU\tEE%sT\n \n-# Luxembourg\n-# See Europe/Brussels.\n-\n-# North Macedonia\n-# See Europe/Belgrade.\n-\n # Malta\n #\n # From Paul Eggert (2016-10-21):\n@@ -1959,67 +1997,6 @@ Zone\tEurope/Chisinau\t1:55:20 -\tLMT\t1880\n # See Romania commentary for the guessed 1997 transition to EU rules.\n \t\t\t2:00\tMoldova\tEE%sT\n \n-# Monaco\n-# See Europe/Paris.\n-\n-# Montenegro\n-# See Europe/Belgrade.\n-\n-# Netherlands\n-# See Europe/Brussels.\n-\n-# Norway\n-# See Europe/Berlin.\n-\n-# Svalbard & Jan Mayen\n-\n-# From Steffen Thorsen (2001-05-01):\n-# Although I could not find it explicitly, it seems that Jan Mayen and\n-# Svalbard have been using the same time as Norway at least since the\n-# time they were declared as parts of Norway.  Svalbard was declared\n-# as a part of Norway by law of 1925-07-17 no 11, section 4 and Jan\n-# Mayen by law of 1930-02-27 no 2, section 2. (From\n-# <http://www.lovdata.no/all/nl-19250717-011.html> and\n-# <http://www.lovdata.no/all/nl-19300227-002.html>).  The law/regulation\n-# for normal/standard time in Norway is from 1894-06-29 no 1 (came\n-# into operation on 1895-01-01) and Svalbard/Jan Mayen seem to be a\n-# part of this law since 1925/1930. (From\n-# <http://www.lovdata.no/all/nl-18940629-001.html>) I have not been\n-# able to find if Jan Mayen used a different time zone (e.g. -0100)\n-# before 1930. Jan Mayen has only been \"inhabited\" since 1921 by\n-# Norwegian meteorologists and maybe used the same time as Norway ever\n-# since 1921.  Svalbard (Arctic/Longyearbyen) has been inhabited since\n-# before 1895, and therefore probably changed the local time somewhere\n-# between 1895 and 1925 (inclusive).\n-\n-# From Paul Eggert (2013-09-04):\n-#\n-# Actually, Jan Mayen was never occupied by Germany during World War II,\n-# so it must have diverged from Oslo time during the war, as Oslo was\n-# keeping Berlin time.\n-#\n-# <https://www.jan-mayen.no/history.htm> says that the meteorologists\n-# burned down their station in 1940 and left the island, but returned in\n-# 1941 with a small Norwegian garrison and continued operations despite\n-# frequent air attacks from Germans.  In 1943 the Americans established a\n-# radiolocating station on the island, called \"Atlantic City\".  Possibly\n-# the UT offset changed during the war, but I think it unlikely that\n-# Jan Mayen used German daylight-saving rules.\n-#\n-# Svalbard is more complicated, as it was raided in August 1941 by an\n-# Allied party that evacuated the civilian population to England (says\n-# <http://www.bartleby.com/65/sv/Svalbard.html>).  The Svalbard FAQ\n-# <http://www.svalbard.com/SvalbardFAQ.html> says that the Germans were\n-# expelled on 1942-05-14.  However, small parties of Germans did return,\n-# and according to Wilhelm Dege's book \"War North of 80\" (1954)\n-# http://www.ucalgary.ca/UofC/departments/UP/1-55238/1-55238-110-2.html\n-# the German armed forces at the Svalbard weather station code-named\n-# Haudegen did not surrender to the Allies until September 1945.\n-#\n-# All these events predate our cutoff date of 1970, so use Europe/Berlin\n-# for these regions.\n-\n-\n # Poland\n \n # The 1919 dates and times can be found in Tygodnik Urzędowy nr 1 (1919-03-20),\n@@ -2638,10 +2615,14 @@ Zone Europe/Simferopol\t 2:16:24 -\tLMT\t1880\n # From Alexander Krivenyshev (2014-03-17):\n # time change at 2:00 (2am) on March 30, 2014\n # https://vz.ru/news/2014/3/17/677464.html\n-# From Paul Eggert (2014-03-30):\n-# Simferopol and Sevastopol reportedly changed their central town clocks\n-# late the previous day, but this appears to have been ceremonial\n-# and the discrepancies are small enough to not worry about.\n+# From Tim Parenti (2022-07-01), per Paul Eggert (2014-03-30):\n+# The clocks at the railway station in Simferopol were put forward from 22:00\n+# to 24:00 the previous day in a \"symbolic ceremony\"; however, per\n+# contemporaneous news reports, \"ordinary Crimeans [made] the daylight savings\n+# time switch at 2am\" on Sunday.\n+# https://www.business-standard.com/article/pti-stories/crimea-to-set-clocks-to-russia-time-114033000014_1.html\n+# https://www.reuters.com/article/us-ukraine-crisis-crimea-time/crimea-switches-to-moscow-time-amid-incorporation-frenzy-idUKBREA2S0LT20140329\n+# https://www.bbc.com/news/av/world-europe-26806583\n \t\t\t 2:00\tEU\tEE%sT\t2014 Mar 30  2:00\n \t\t\t 4:00\t-\tMSK\t2014 Oct 26  2:00s\n \t\t\t 3:00\t-\tMSK\n@@ -3297,11 +3278,13 @@ Zone Asia/Anadyr\t11:49:56 -\tLMT\t1924 May  2\n \t\t\t11:00\tRussia\t+11/+12\t2011 Mar 27  2:00s\n \t\t\t12:00\t-\t+12\n \n-\n-# San Marino\n-# See Europe/Rome.\n-\n+# Bosnia & Herzegovina\n+# Croatia\n+# Kosovo\n+# Montenegro\n+# North Macedonia\n # Serbia\n+# Slovenia\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tEurope/Belgrade\t1:22:00\t-\tLMT\t1884\n \t\t\t1:00\t-\tCET\t1941 Apr 18 23:00\n@@ -3313,17 +3296,6 @@ Zone\tEurope/Belgrade\t1:22:00\t-\tLMT\t1884\n # Shanks & Pottenger don't give as much detail, so go with Koželj.\n \t\t\t1:00\t-\tCET\t1982 Nov 27\n \t\t\t1:00\tEU\tCE%sT\n-Link Europe/Belgrade Europe/Ljubljana\t# Slovenia\n-Link Europe/Belgrade Europe/Podgorica\t# Montenegro\n-Link Europe/Belgrade Europe/Sarajevo\t# Bosnia and Herzegovina\n-Link Europe/Belgrade Europe/Skopje\t# North Macedonia\n-Link Europe/Belgrade Europe/Zagreb\t# Croatia\n-\n-# Slovakia\n-# See Europe/Prague.\n-\n-# Slovenia\n-# See Europe/Belgrade.\n \n # Spain\n #\n@@ -3413,7 +3385,7 @@ Zone\tEurope/Madrid\t-0:14:44 -\tLMT\t1901 Jan  1  0:00u\n \t\t\t 0:00\tSpain\tWE%sT\t1940 Mar 16 23:00\n \t\t\t 1:00\tSpain\tCE%sT\t1979\n \t\t\t 1:00\tEU\tCE%sT\n-Zone\tAfrica/Ceuta\t-0:21:16 -\tLMT\t1900 Dec 31 23:38:44\n+Zone\tAfrica/Ceuta\t-0:21:16 -\tLMT\t1901 Jan  1  0:00u\n \t\t\t 0:00\t-\tWET\t1918 May  6 23:00\n \t\t\t 0:00\t1:00\tWEST\t1918 Oct  7 23:00\n \t\t\t 0:00\t-\tWET\t1924\n@@ -3430,10 +3402,11 @@ Zone\tAtlantic/Canary\t-1:01:36 -\tLMT\t1922 Mar # Las Palmas de Gran C.\n # IATA SSIM (1996-09) says the Canaries switch at 2:00u, not 1:00u.\n # Ignore this for now, as the Canaries are part of the EU.\n \n-# Sweden\n-# See Europe/Berlin.\n \n+# Germany (Busingen enclave)\n+# Liechtenstein\n # Switzerland\n+#\n # From Howse:\n # By the end of the 18th century clocks and watches became commonplace\n # and their performance improved enormously.  Communities began to keep\n@@ -3546,9 +3519,6 @@ Zone\tEurope/Zurich\t0:34:08 -\tLMT\t1853 Jul 16 # See above comment.\n \t\t\t0:29:46\t-\tBMT\t1894 Jun    # Bern Mean Time\n \t\t\t1:00\tSwiss\tCE%sT\t1981\n \t\t\t1:00\tEU\tCE%sT\n-Link Europe/Zurich Europe/Busingen\n-Link Europe/Zurich Europe/Vaduz\n-\n \n # Turkey\n \n@@ -3753,7 +3723,6 @@ Zone\tEurope/Istanbul\t1:55:52 -\tLMT\t1880\n \t\t\t2:00\t1:00\tEEST\t2015 Nov  8  1:00u\n \t\t\t2:00\tEU\tEE%sT\t2016 Sep  7\n \t\t\t3:00\t-\t+03\n-Link\tEurope/Istanbul\tAsia/Istanbul\t# Istanbul is in both continents.\n \n # Ukraine\n #\n@@ -3774,8 +3743,8 @@ Link\tEurope/Istanbul\tAsia/Istanbul\t# Istanbul is in both continents.\n # US colleague David Cochrane) are still trying to get more\n # information upon these local deviations from Kiev rules.\n #\n-# From Paul Eggert (2022-02-08):\n-# For now, assume that Ukraine's other three zones followed the same rules,\n+# From Paul Eggert (2022-08-27):\n+# For now, assume that Ukraine's zones all followed the same rules,\n # except that Crimea switched to Moscow time in 1994 as described elsewhere.\n \n # From Igor Karpov, who works for the Ukrainian Ministry of Justice,\n@@ -3845,21 +3814,7 @@ Link\tEurope/Istanbul\tAsia/Istanbul\t# Istanbul is in both continents.\n # * Ukrainian Government's Resolution of 20.03.1992, No. 139.\n # http://www.uazakon.com/documents/date_8u/pg_grcasa.htm\n \n-# From Paul Eggert (2022-04-12):\n-# As is usual in tzdb, Ukrainian zones use the most common English spellings.\n-# In particular, tzdb's name Europe/Kyiv uses the most common spelling in\n-# English for Ukraine's capital.  Although tzdb's former name was Europe/Kiev,\n-# \"Kyiv\" is now more common due to widespread reporting of the current conflict.\n-# Conversely, tzdb continues to use the names Europe/Uzhgorod and\n-# Europe/Zaporozhye; this is similar to tzdb's use of Europe/Prague, which is\n-# certainly wrong as a transliteration of the Czech \"Praha\".\n-# English-language spelling of Ukrainian names is in flux, and\n-# some day \"Uzhhorod\" or \"Zaporizhzhia\" may become substantially more\n-# common in English; in the meantime, do not change these\n-# English spellings as that means less disruption for our users.\n-\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-# This represents most of Ukraine.  See above for the spelling of \"Kyiv\".\n Zone Europe/Kyiv\t2:02:04 -\tLMT\t1880\n \t\t\t2:02:04\t-\tKMT\t1924 May  2 # Kyiv Mean Time\n \t\t\t2:00\t-\tEET\t1930 Jun 21\n@@ -3869,37 +3824,6 @@ Zone Europe/Kyiv\t2:02:04 -\tLMT\t1880\n \t\t\t2:00\t1:00\tEEST\t1991 Sep 29  3:00\n \t\t\t2:00\tC-Eur\tEE%sT\t1996 May 13\n \t\t\t2:00\tEU\tEE%sT\n-# Transcarpathia used CET 1990/1991.\n-# \"Uzhhorod\" is the transliteration of the Rusyn/Ukrainian pronunciation, but\n-# \"Uzhgorod\" is more common in English.\n-Zone Europe/Uzhgorod\t1:29:12 -\tLMT\t1890 Oct\n-\t\t\t1:00\t-\tCET\t1940\n-\t\t\t1:00\tC-Eur\tCE%sT\t1944 Oct\n-\t\t\t1:00\t1:00\tCEST\t1944 Oct 26\n-\t\t\t1:00\t-\tCET\t1945 Jun 29\n-\t\t\t3:00\tRussia\tMSK/MSD\t1990\n-\t\t\t3:00\t-\tMSK\t1990 Jul  1  2:00\n-\t\t\t1:00\t-\tCET\t1991 Mar 31  3:00\n-\t\t\t2:00\t-\tEET\t1992 Mar 20\n-\t\t\t2:00\tC-Eur\tEE%sT\t1996 May 13\n-\t\t\t2:00\tEU\tEE%sT\n-# Zaporozh'ye and eastern Lugansk oblasts observed DST 1990/1991.\n-# \"Zaporizhzhia\" is the transliteration of the Ukrainian name, but\n-# \"Zaporozh'ye\" is more common in English.  Use the common English\n-# spelling, except omit the apostrophe as it is not allowed in\n-# portable Posix file names.\n-Zone Europe/Zaporozhye\t2:20:40 -\tLMT\t1880\n-\t\t\t2:20\t-\t+0220\t1924 May  2\n-\t\t\t2:00\t-\tEET\t1930 Jun 21\n-\t\t\t3:00\t-\tMSK\t1941 Aug 25\n-\t\t\t1:00\tC-Eur\tCE%sT\t1943 Oct 25\n-\t\t\t3:00\tRussia\tMSK/MSD\t1991 Mar 31  2:00\n-\t\t\t2:00\tE-Eur\tEE%sT\t1992 Mar 20\n-\t\t\t2:00\tC-Eur\tEE%sT\t1996 May 13\n-\t\t\t2:00\tEU\tEE%sT\n-\n-# Vatican City\n-# See Europe/Rome.\n \n ###############################################################################\n "
      },
      {
        "sha": "fbfb74bec45ce97a6a6b914defeb958ca0297e6f",
        "filename": "make/data/tzdata/iso3166.tab",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fiso3166.tab",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fiso3166.tab",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Fiso3166.tab?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -26,13 +26,13 @@\n # This file is in the public domain, so clarified as of\n # 2009-05-17 by Arthur David Olson.\n #\n-# From Paul Eggert (2015-05-02):\n+# From Paul Eggert (2022-11-18):\n # This file contains a table of two-letter country codes.  Columns are\n # separated by a single tab.  Lines beginning with '#' are comments.\n # All text uses UTF-8 encoding.  The columns of the table are as follows:\n #\n # 1.  ISO 3166-1 alpha-2 country code, current as of\n-#     ISO 3166-1 N976 (2018-11-06).  See: Updates on ISO 3166-1\n+#     ISO 3166-1 N1087 (2022-09-02).  See: Updates on ISO 3166-1\n #     https://isotc.iso.org/livelink/livelink/Open/16944257\n # 2.  The usual English name for the coded region,\n #     chosen so that alphabetic sorting of subsets produces helpful lists.\n@@ -261,7 +261,7 @@ SY\tSyria\n SZ\tEswatini (Swaziland)\n TC\tTurks & Caicos Is\n TD\tChad\n-TF\tFrench Southern & Antarctic Lands\n+TF\tFrench Southern Territories\n TG\tTogo\n TH\tThailand\n TJ\tTajikistan"
      },
      {
        "sha": "a5fd701f88ce4d66423c19ac082b9e15eb54e215",
        "filename": "make/data/tzdata/northamerica",
        "status": "modified",
        "additions": 164,
        "deletions": 244,
        "changes": 408,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fnorthamerica",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fnorthamerica",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Fnorthamerica?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -462,7 +462,7 @@ Rule\tChicago\t1922\t1966\t-\tApr\tlastSun\t2:00\t1:00\tD\n Rule\tChicago\t1922\t1954\t-\tSep\tlastSun\t2:00\t0\tS\n Rule\tChicago\t1955\t1966\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Chicago\t-5:50:36 -\tLMT\t1883 Nov 18 12:09:24\n+Zone America/Chicago\t-5:50:36 -\tLMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1920\n \t\t\t-6:00\tChicago\tC%sT\t1936 Mar  1  2:00\n \t\t\t-5:00\t-\tEST\t1936 Nov 15  2:00\n@@ -471,7 +471,7 @@ Zone America/Chicago\t-5:50:36 -\tLMT\t1883 Nov 18 12:09:24\n \t\t\t-6:00\tChicago\tC%sT\t1967\n \t\t\t-6:00\tUS\tC%sT\n # Oliver County, ND switched from mountain to central time on 1992-10-25.\n-Zone America/North_Dakota/Center -6:45:12 - LMT\t1883 Nov 18 12:14:48\n+Zone America/North_Dakota/Center -6:45:12 - LMT\t1883 Nov 18 19:00u\n \t\t\t-7:00\tUS\tM%sT\t1992 Oct 25  2:00\n \t\t\t-6:00\tUS\tC%sT\n # Morton County, ND, switched from mountain to central time on\n@@ -481,7 +481,7 @@ Zone America/North_Dakota/Center -6:45:12 - LMT\t1883 Nov 18 12:14:48\n # Jones, Mellette, and Todd Counties in South Dakota;\n # but in practice these other counties were already observing central time.\n # See <http://www.epa.gov/fedrgstr/EPA-IMPACT/2003/October/Day-28/i27056.htm>.\n-Zone America/North_Dakota/New_Salem -6:45:39 - LMT\t1883 Nov 18 12:14:21\n+Zone America/North_Dakota/New_Salem -6:45:39 - LMT 1883 Nov 18 19:00u\n \t\t\t-7:00\tUS\tM%sT\t2003 Oct 26  2:00\n \t\t\t-6:00\tUS\tC%sT\n \n@@ -498,7 +498,7 @@ Zone America/North_Dakota/New_Salem -6:45:39 - LMT\t1883 Nov 18 12:14:21\n # largest city in Mercer County).  Google Maps places Beulah's city hall\n # at 47° 15' 51\" N, 101° 46' 40\" W, which yields an offset of 6h47'07\".\n \n-Zone America/North_Dakota/Beulah -6:47:07 - LMT\t1883 Nov 18 12:12:53\n+Zone America/North_Dakota/Beulah -6:47:07 - LMT\t1883 Nov 18 19:00u\n \t\t\t-7:00\tUS\tM%sT\t2010 Nov  7  2:00\n \t\t\t-6:00\tUS\tC%sT\n \n@@ -530,7 +530,7 @@ Rule\tDenver\t1921\tonly\t-\tMay\t22\t2:00\t0\tS\n Rule\tDenver\t1965\t1966\t-\tApr\tlastSun\t2:00\t1:00\tD\n Rule\tDenver\t1965\t1966\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Denver\t-6:59:56 -\tLMT\t1883 Nov 18 12:00:04\n+Zone America/Denver\t-6:59:56 -\tLMT\t1883 Nov 18 19:00u\n \t\t\t-7:00\tUS\tM%sT\t1920\n \t\t\t-7:00\tDenver\tM%sT\t1942\n \t\t\t-7:00\tUS\tM%sT\t1946\n@@ -583,7 +583,7 @@ Rule\tCA\t1950\t1966\t-\tApr\tlastSun\t1:00\t1:00\tD\n Rule\tCA\t1950\t1961\t-\tSep\tlastSun\t2:00\t0\tS\n Rule\tCA\t1962\t1966\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Los_Angeles -7:52:58 -\tLMT\t1883 Nov 18 12:07:02\n+Zone America/Los_Angeles -7:52:58 -\tLMT\t1883 Nov 18 20:00u\n \t\t\t-8:00\tUS\tP%sT\t1946\n \t\t\t-8:00\tCA\tP%sT\t1967\n \t\t\t-8:00\tUS\tP%sT\n@@ -845,14 +845,13 @@ Zone Pacific/Honolulu\t-10:31:26 -\tLMT\t1896 Jan 13 12:00\n # Go with the Arizona State Library instead.\n \n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Phoenix\t-7:28:18 -\tLMT\t1883 Nov 18 11:31:42\n+Zone America/Phoenix\t-7:28:18 -\tLMT\t1883 Nov 18 19:00u\n \t\t\t-7:00\tUS\tM%sT\t1944 Jan  1  0:01\n \t\t\t-7:00\t-\tMST\t1944 Apr  1  0:01\n \t\t\t-7:00\tUS\tM%sT\t1944 Oct  1  0:01\n \t\t\t-7:00\t-\tMST\t1967\n \t\t\t-7:00\tUS\tM%sT\t1968 Mar 21\n \t\t\t-7:00\t-\tMST\n-Link America/Phoenix America/Creston\n \n # From Arthur David Olson (1988-02-13):\n # A writer from the Inter Tribal Council of Arizona, Inc.,\n@@ -873,7 +872,7 @@ Link America/Phoenix America/Creston\n # switched four weeks late in 1974.\n #\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Boise\t-7:44:49 -\tLMT\t1883 Nov 18 12:15:11\n+Zone America/Boise\t-7:44:49 -\tLMT\t1883 Nov 18 20:00u\n \t\t\t-8:00\tUS\tP%sT\t1923 May 13  2:00\n \t\t\t-7:00\tUS\tM%sT\t1974\n \t\t\t-7:00\t-\tMST\t1974 Feb  3  2:00\n@@ -945,7 +944,7 @@ Rule Indianapolis 1941\tonly\t-\tJun\t22\t2:00\t1:00\tD\n Rule Indianapolis 1941\t1954\t-\tSep\tlastSun\t2:00\t0\tS\n Rule Indianapolis 1946\t1954\t-\tApr\tlastSun\t2:00\t1:00\tD\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Indiana/Indianapolis -5:44:38 - LMT\t1883 Nov 18 12:15:22\n+Zone America/Indiana/Indianapolis -5:44:38 - LMT 1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1920\n \t\t\t-6:00 Indianapolis C%sT\t1942\n \t\t\t-6:00\tUS\tC%sT\t1946\n@@ -965,7 +964,7 @@ Rule\tMarengo\t1951\tonly\t-\tSep\tlastSun\t2:00\t0\tS\n Rule\tMarengo\t1954\t1960\t-\tApr\tlastSun\t2:00\t1:00\tD\n Rule\tMarengo\t1954\t1960\t-\tSep\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Indiana/Marengo -5:45:23 -\tLMT\t1883 Nov 18 12:14:37\n+Zone America/Indiana/Marengo -5:45:23 -\tLMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1951\n \t\t\t-6:00\tMarengo\tC%sT\t1961 Apr 30  2:00\n \t\t\t-5:00\t-\tEST\t1969\n@@ -989,7 +988,7 @@ Rule Vincennes\t1960\tonly\t-\tOct\tlastSun\t2:00\t0\tS\n Rule Vincennes\t1961\tonly\t-\tSep\tlastSun\t2:00\t0\tS\n Rule Vincennes\t1962\t1963\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Indiana/Vincennes -5:50:07 - LMT\t1883 Nov 18 12:09:53\n+Zone America/Indiana/Vincennes -5:50:07 - LMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1946\n \t\t\t-6:00 Vincennes\tC%sT\t1964 Apr 26  2:00\n \t\t\t-5:00\t-\tEST\t1969\n@@ -1009,7 +1008,7 @@ Rule Perry\t1955\t1960\t-\tSep\tlastSun\t2:00\t0\tS\n Rule Perry\t1956\t1963\t-\tApr\tlastSun\t2:00\t1:00\tD\n Rule Perry\t1961\t1963\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Indiana/Tell_City -5:47:03 - LMT\t1883 Nov 18 12:12:57\n+Zone America/Indiana/Tell_City -5:47:03 - LMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1946\n \t\t\t-6:00 Perry\tC%sT\t1964 Apr 26  2:00\n \t\t\t-5:00\t-\tEST\t1967 Oct 29  2:00\n@@ -1026,7 +1025,7 @@ Rule\tPike\t1955\t1960\t-\tSep\tlastSun\t2:00\t0\tS\n Rule\tPike\t1956\t1964\t-\tApr\tlastSun\t2:00\t1:00\tD\n Rule\tPike\t1961\t1964\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Indiana/Petersburg -5:49:07 - LMT\t1883 Nov 18 12:10:53\n+Zone America/Indiana/Petersburg -5:49:07 - LMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1955\n \t\t\t-6:00\tPike\tC%sT\t1965 Apr 25  2:00\n \t\t\t-5:00\t-\tEST\t1966 Oct 30  2:00\n@@ -1048,7 +1047,7 @@ Rule\tStarke\t1955\t1956\t-\tOct\tlastSun\t2:00\t0\tS\n Rule\tStarke\t1957\t1958\t-\tSep\tlastSun\t2:00\t0\tS\n Rule\tStarke\t1959\t1961\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Indiana/Knox -5:46:30 -\tLMT\t1883 Nov 18 12:13:30\n+Zone America/Indiana/Knox -5:46:30 -\tLMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1947\n \t\t\t-6:00\tStarke\tC%sT\t1962 Apr 29  2:00\n \t\t\t-5:00\t-\tEST\t1963 Oct 27  2:00\n@@ -1064,7 +1063,7 @@ Rule\tPulaski\t1946\t1954\t-\tSep\tlastSun\t2:00\t0\tS\n Rule\tPulaski\t1955\t1956\t-\tOct\tlastSun\t2:00\t0\tS\n Rule\tPulaski\t1957\t1960\t-\tSep\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Indiana/Winamac -5:46:25 - LMT\t1883 Nov 18 12:13:35\n+Zone America/Indiana/Winamac -5:46:25 - LMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1946\n \t\t\t-6:00\tPulaski\tC%sT\t1961 Apr 30  2:00\n \t\t\t-5:00\t-\tEST\t1969\n@@ -1075,7 +1074,7 @@ Zone America/Indiana/Winamac -5:46:25 - LMT\t1883 Nov 18 12:13:35\n #\n # Switzerland County, Indiana, did not observe DST from 1973 through 2005.\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Indiana/Vevay -5:40:16 -\tLMT\t1883 Nov 18 12:19:44\n+Zone America/Indiana/Vevay -5:40:16 -\tLMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1954 Apr 25  2:00\n \t\t\t-5:00\t-\tEST\t1969\n \t\t\t-5:00\tUS\tE%sT\t1973\n@@ -1111,7 +1110,7 @@ Rule Louisville\t1950\t1961\t-\tApr\tlastSun\t2:00\t1:00\tD\n Rule Louisville\t1950\t1955\t-\tSep\tlastSun\t2:00\t0\tS\n Rule Louisville\t1956\t1961\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-Zone America/Kentucky/Louisville -5:43:02 -\tLMT\t1883 Nov 18 12:16:58\n+Zone America/Kentucky/Louisville -5:43:02 - LMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1921\n \t\t\t-6:00 Louisville C%sT\t1942\n \t\t\t-6:00\tUS\tC%sT\t1946\n@@ -1145,7 +1144,7 @@ Zone America/Kentucky/Louisville -5:43:02 -\tLMT\t1883 Nov 18 12:16:58\n # Federal Register 65, 160 (2000-08-17), pp 50154-50158.\n # https://www.gpo.gov/fdsys/pkg/FR-2000-08-17/html/00-20854.htm\n #\n-Zone America/Kentucky/Monticello -5:39:24 - LMT\t1883 Nov 18 12:20:36\n+Zone America/Kentucky/Monticello -5:39:24 - LMT\t1883 Nov 18 18:00u\n \t\t\t-6:00\tUS\tC%sT\t1946\n \t\t\t-6:00\t-\tCST\t1968\n \t\t\t-6:00\tUS\tC%sT\t2000 Oct 29  2:00\n@@ -1626,23 +1625,6 @@ Zone America/Moncton\t-4:19:08 -\tLMT\t1883 Dec  9\n \n # Ontario\n \n-# From Paul Eggert (2006-07-09):\n-# Shanks & Pottenger write that since 1970 most of Ontario has been like\n-# Toronto.\n-# Thunder Bay skipped DST in 1973.\n-# Many smaller locales did not observe peacetime DST until 1974;\n-# Nipigon (EST) and Rainy River (CST) are the largest that we know of.\n-# Far west Ontario is like Winnipeg; far east Quebec is like Halifax.\n-\n-# From Jeffery Nichols (2020-02-06):\n-# According to the [Shanks] atlas, those western Ontario zones are huge,\n-# covering most of Ontario northwest of Sault Ste Marie and Timmins.\n-# The zones seem to include towns bigger than the ones they're named after,\n-# like Dryden in America/Rainy_River and Wawa (and maybe Attawapiskat) in\n-# America/Nipigon.  I assume it's too much trouble to change the name of the\n-# zone (like when you found out that America/Glace_Bay includes Sydney, Nova\n-# Scotia)....\n-\n # From Mark Brader (2003-07-26):\n # [According to the Toronto Star] Orillia, Ontario, adopted DST\n # effective Saturday, 1912-06-22, 22:00; the article mentions that\n@@ -1663,28 +1645,15 @@ Zone America/Moncton\t-4:19:08 -\tLMT\t1883 Dec  9\n \n # From Mark Brader (2010-03-06):\n #\n-# Currently the database has:\n-#\n-# # Ontario\n-#\n-# # From Paul Eggert (2006-07-09):\n-# # Shanks & Pottenger write that since 1970 most of Ontario has been like\n-# # Toronto.\n-# # Thunder Bay skipped DST in 1973.\n-# # Many smaller locales did not observe peacetime DST until 1974;\n-# # Nipigon (EST) and Rainy River (CST) are the largest that we know of.\n-#\n # In the (Toronto) Globe and Mail for Saturday, 1955-09-24, in the bottom\n # right corner of page 1, it says that Toronto will return to standard\n # time at 2 am Sunday morning (which agrees with the database), and that:\n #\n #     The one-hour setback will go into effect throughout most of Ontario,\n #     except in areas like Windsor which remains on standard time all year.\n #\n-# Windsor is, of course, a lot larger than Nipigon.\n-#\n-# I only came across this incidentally.  I don't know if Windsor began\n-# observing DST when Detroit did, or in 1974, or on some other date.\n+# ... I don't know if Windsor began observing DST when Detroit did,\n+# or in 1974, or on some other date.\n #\n # By the way, the article continues by noting that:\n #\n@@ -1766,23 +1735,7 @@ Rule\tToronto\t1951\t1956\t-\tSep\tlastSun\t2:00\t0\tS\n # Toronto Star, which said that DST was ending 1971-10-31 as usual.\n Rule\tToronto\t1957\t1973\t-\tOct\tlastSun\t2:00\t0\tS\n \n-# From Paul Eggert (2003-07-27):\n-# Willett (1914-03) writes (p. 17) \"In the Cities of Fort William, and\n-# Port Arthur, Ontario, the principle of the Bill has been in\n-# operation for the past three years, and in the City of Moose Jaw,\n-# Saskatchewan, for one year.\"\n-\n-# From David Bryan via Tory Tronrud, Director/Curator,\n-# Thunder Bay Museum (2003-11-12):\n-# There is some suggestion, however, that, by-law or not, daylight\n-# savings time was being practiced in Fort William and Port Arthur\n-# before 1909.... [I]n 1910, the line between the Eastern and Central\n-# Time Zones was permanently moved about two hundred miles west to\n-# include the Thunder Bay area....  When Canada adopted daylight\n-# savings time in 1916, Fort William and Port Arthur, having done so\n-# already, did not change their clocks....  During the Second World\n-# War,... [t]he cities agreed to implement DST during the summer\n-# months for the remainder of the war years.\n+# The Bahamas match Toronto since 1970.\n \n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone America/Toronto\t-5:17:32 -\tLMT\t1895\n@@ -1791,22 +1744,6 @@ Zone America/Toronto\t-5:17:32 -\tLMT\t1895\n \t\t\t-5:00\tCanada\tE%sT\t1946\n \t\t\t-5:00\tToronto\tE%sT\t1974\n \t\t\t-5:00\tCanada\tE%sT\n-Link America/Toronto America/Nassau\n-Zone America/Thunder_Bay -5:57:00 -\tLMT\t1895\n-\t\t\t-6:00\t-\tCST\t1910\n-\t\t\t-5:00\t-\tEST\t1942\n-\t\t\t-5:00\tCanada\tE%sT\t1970\n-\t\t\t-5:00\tToronto\tE%sT\t1973\n-\t\t\t-5:00\t-\tEST\t1974\n-\t\t\t-5:00\tCanada\tE%sT\n-Zone America/Nipigon\t-5:53:04 -\tLMT\t1895\n-\t\t\t-5:00\tCanada\tE%sT\t1940 Sep 29\n-\t\t\t-5:00\t1:00\tEDT\t1942 Feb  9  2:00s\n-\t\t\t-5:00\tCanada\tE%sT\n-Zone America/Rainy_River -6:18:16 -\tLMT\t1895\n-\t\t\t-6:00\tCanada\tC%sT\t1940 Sep 29\n-\t\t\t-6:00\t1:00\tCDT\t1942 Feb  9  2:00s\n-\t\t\t-6:00\tCanada\tC%sT\n # For Atikokan see America/Panama.\n \n \n@@ -2055,6 +1992,37 @@ Zone America/Fort_Nelson\t-8:10:47 -\tLMT\t1884\n \n # Northwest Territories, Nunavut, Yukon\n \n+# From Chris Walton (2022-11-06):\n+# Whitehorse Star - Thursday April 22, 1965 - page 1\n+# title: DST Starts Monday ...\n+# https://www.newspapers.com/image/578587481/\n+# The title of this first article is wrong and/or misleading.\n+# Also, the start time shown in the  article is vague; it simply says \"after\n+# midnight\" when it probably should have stated 2:00a.m....\n+#\n+# Whitehorse Star - Monday October 25, 1965 - page 15 ...\n+# https://www.newspapers.com/image/578589147/\n+# The 1965 Yukon Council minutes can be found here:\n+# http://assets.yukonarchives.ca/PER_YG_06_1965_C20_S02_v1.pdf\n+# ... I do not currently believe that NWT touched any of its clocks in 1965....\n+#\n+# Whitehorse Star - Thursday Feb 24,1966 - page 2\n+# title: It's Time for YDT ...\n+# https://www.newspapers.com/image/578575979/ ...\n+# America/Whitehorse as a permanent change from UTC-9(YST) to\n+# UTC-8(PST) at 00:00 on Sunday February 27, 1966....\n+#\n+# Whitehorse Star - Friday April 28,1972 - page 6\n+# title: Daylight Saving Time for N.W.T....\n+# https://www.newspapers.com/image/578701610/ ...\n+# Nunavut and NWT zones ... DST starting in 1972.... Start and End ...\n+# should be the same as the rest of Canada\n+#\n+#\n+# From Paul Eggert (2022-11-06):\n+# For now, assume Yukon's 1965-04-22 spring forward was 00:00 -> 02:00, as this\n+# seems likely than 02:00 -> 04:00 and matches \"after midnight\".\n+\n # From Paul Eggert (2006-03-22):\n # Dawson switched to PST in 1973.  Inuvik switched to MST in 1979.\n # Mathew Englander (1996-10-07) gives the following refs:\n@@ -2169,6 +2137,13 @@ Zone America/Fort_Nelson\t-8:10:47 -\tLMT\t1884\n # * Interpretation Act, RSY 2002, c 125\n # https://www.canlii.org/en/yk/laws/stat/rsy-2002-c-125/latest/rsy-2002-c-125.html\n \n+# From Chris Walton (2022-11-06):\n+# The 5th edition of the Atlas of Canada contains a time zone map that\n+# shows both legislated and observed time zone boundaries.\n+# All communities on Baffin Island are shown to be observing Eastern time.\n+# The date on the map is 1984.\n+# https://ftp.maps.canada.ca/pub/nrcan_rncan/raster/atlas_5_ed/eng/other/referencemaps/mcr4056.pdf\n+\n # From Rives McDow (1999-09-04):\n # Nunavut ... moved ... to incorporate the whole territory into one time zone.\n # Nunavut moves to single time zone Oct. 31\n@@ -2181,40 +2156,7 @@ Zone America/Fort_Nelson\t-8:10:47 -\tLMT\t1884\n # From Paul Eggert (1999-09-20):\n # Basic Facts: The New Territory\n # http://www.nunavut.com/basicfacts/english/basicfacts_1territory.html\n-# (1999) reports that Pangnirtung operates on eastern time,\n-# and that Coral Harbour does not observe DST.  We don't know when\n-# Pangnirtung switched to eastern time; we'll guess 1995.\n-\n-# From Rives McDow (1999-11-08):\n-# On October 31, when the rest of Nunavut went to Central time,\n-# Pangnirtung wobbled.  Here is the result of their wobble:\n-#\n-# The following businesses and organizations in Pangnirtung use Central Time:\n-#\n-#\tFirst Air, Power Corp, Nunavut Construction, Health Center, RCMP,\n-#\tEastern Arctic National Parks, A & D Specialist\n-#\n-# The following businesses and organizations in Pangnirtung use Eastern Time:\n-#\n-#\tHamlet office, All other businesses, Both schools, Airport operator\n-#\n-# This has made for an interesting situation there, which warranted the news.\n-# No one there that I spoke with seems concerned, or has plans to\n-# change the local methods of keeping time, as it evidently does not\n-# really interfere with any activities or make things difficult locally.\n-# They plan to celebrate New Year's turn-over twice, one hour apart,\n-# so it appears that the situation will last at least that long.\n-# The Nunavut Intergovernmental Affairs hopes that they will \"come to\n-# their senses\", but the locals evidently don't see any problem with\n-# the current state of affairs.\n-\n-# From Michaela Rodrigue, writing in the\n-# Nunatsiaq News (1999-11-19):\n-# http://www.nunatsiaqonline.ca/archives/nunavut991130/nvt91119_17.html\n-# Clyde River, Pangnirtung and Sanikiluaq now operate with two time zones,\n-# central - or Nunavut time - for government offices, and eastern time\n-# for municipal offices and schools....  Igloolik [was similar but then]\n-# made the switch to central time on Saturday, Nov. 6.\n+# (1999) reports that ... Coral Harbour does not observe DST.\n \n # From Paul Eggert (2000-10-02):\n # Matthews and Vincent (1998) say the following, but we lack histories\n@@ -2373,18 +2315,12 @@ Rule\tNT_YK\t1919\tonly\t-\tNov\t 1\t0:00\t0\tS\n Rule\tNT_YK\t1942\tonly\t-\tFeb\t 9\t2:00\t1:00\tW # War\n Rule\tNT_YK\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tP # Peace\n Rule\tNT_YK\t1945\tonly\t-\tSep\t30\t2:00\t0\tS\n-Rule\tNT_YK\t1965\tonly\t-\tApr\tlastSun\t0:00\t2:00\tDD\n-Rule\tNT_YK\t1965\tonly\t-\tOct\tlastSun\t2:00\t0\tS\n-Rule\tNT_YK\t1980\t1986\t-\tApr\tlastSun\t2:00\t1:00\tD\n-Rule\tNT_YK\t1980\t2006\t-\tOct\tlastSun\t2:00\t0\tS\n+Rule\tNT_YK\t1972\t1986\t-\tApr\tlastSun\t2:00\t1:00\tD\n+Rule\tNT_YK\t1972\t2006\t-\tOct\tlastSun\t2:00\t0\tS\n Rule\tNT_YK\t1987\t2006\t-\tApr\tSun>=1\t2:00\t1:00\tD\n+Rule\tYukon\t1965\tonly\t-\tApr\tlastSun\t0:00\t2:00\tDD\n+Rule\tYukon\t1965\tonly\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n-# aka Panniqtuuq\n-Zone America/Pangnirtung 0\t-\t-00\t1921 # trading post est.\n-\t\t\t-4:00\tNT_YK\tA%sT\t1995 Apr Sun>=1  2:00\n-\t\t\t-5:00\tCanada\tE%sT\t1999 Oct 31  2:00\n-\t\t\t-6:00\tCanada\tC%sT\t2000 Oct 29  2:00\n-\t\t\t-5:00\tCanada\tE%sT\n # formerly Frobisher Bay\n Zone America/Iqaluit\t0\t-\t-00\t1942 Aug # Frobisher Bay est.\n \t\t\t-5:00\tNT_YK\tE%sT\t1999 Oct 31  2:00\n@@ -2417,13 +2353,15 @@ Zone America/Inuvik\t0\t-\t-00\t1953 # Inuvik founded\n \t\t\t-7:00\tNT_YK\tM%sT\t1980\n \t\t\t-7:00\tCanada\tM%sT\n Zone America/Whitehorse\t-9:00:12 -\tLMT\t1900 Aug 20\n-\t\t\t-9:00\tNT_YK\tY%sT\t1967 May 28  0:00\n-\t\t\t-8:00\tNT_YK\tP%sT\t1980\n+\t\t\t-9:00\tNT_YK\tY%sT\t1965\n+\t\t\t-9:00\tYukon\tY%sT\t1966 Feb 27  0:00\n+\t\t\t-8:00\t-\tPST\t1980\n \t\t\t-8:00\tCanada\tP%sT\t2020 Nov  1\n \t\t\t-7:00\t-\tMST\n Zone America/Dawson\t-9:17:40 -\tLMT\t1900 Aug 20\n-\t\t\t-9:00\tNT_YK\tY%sT\t1973 Oct 28  0:00\n-\t\t\t-8:00\tNT_YK\tP%sT\t1980\n+\t\t\t-9:00\tNT_YK\tY%sT\t1965\n+\t\t\t-9:00\tYukon\tY%sT\t1973 Oct 28  0:00\n+\t\t\t-8:00\t-\tPST\t1980\n \t\t\t-8:00\tCanada\tP%sT\t2020 Nov  1\n \t\t\t-7:00\t-\tMST\n \n@@ -2639,7 +2577,23 @@ Zone America/Dawson\t-9:17:40 -\tLMT\t1900 Aug 20\n # 5- The islands, reefs and keys shall take their timezone from the\n #    longitude they are located at.\n \n+# From Paul Eggert (2022-10-28):\n+# The new Mexican law was published today:\n+# https://www.dof.gob.mx/nota_detalle.php?codigo=5670045&fecha=28/10/2022\n+# This abolishes DST except where US DST rules are observed,\n+# and in addition changes all of Chihuahua to -06 with no DST.\n+\n+# From Heitor David Pinto (2022-11-28):\n+# Now the northern municipalities want to have the same time zone as the\n+# respective neighboring cities in the US, for example Juárez in UTC-7 with\n+# DST, matching El Paso, and Ojinaga in UTC-6 with DST, matching Presidio....\n+# the president authorized the publication of the decree for November 29,\n+# so the time change would occur on November 30 at 0:00.\n+# http://puentelibre.mx/noticia/ciudad_juarez_cambio_horario_noviembre_2022/\n+\n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n+Rule\tMexico\t1931\tonly\t-\tMay\t1\t23:00\t1:00\tD\n+Rule\tMexico\t1931\tonly\t-\tOct\t1\t0:00\t0\tS\n Rule\tMexico\t1939\tonly\t-\tFeb\t5\t0:00\t1:00\tD\n Rule\tMexico\t1939\tonly\t-\tJun\t25\t0:00\t0\tS\n Rule\tMexico\t1940\tonly\t-\tDec\t9\t0:00\t1:00\tD\n@@ -2652,89 +2606,108 @@ Rule\tMexico\t1996\t2000\t-\tApr\tSun>=1\t2:00\t1:00\tD\n Rule\tMexico\t1996\t2000\t-\tOct\tlastSun\t2:00\t0\tS\n Rule\tMexico\t2001\tonly\t-\tMay\tSun>=1\t2:00\t1:00\tD\n Rule\tMexico\t2001\tonly\t-\tSep\tlastSun\t2:00\t0\tS\n-Rule\tMexico\t2002\tmax\t-\tApr\tSun>=1\t2:00\t1:00\tD\n-Rule\tMexico\t2002\tmax\t-\tOct\tlastSun\t2:00\t0\tS\n+Rule\tMexico\t2002\t2022\t-\tApr\tSun>=1\t2:00\t1:00\tD\n+Rule\tMexico\t2002\t2022\t-\tOct\tlastSun\t2:00\t0\tS\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n # Quintana Roo; represented by Cancún\n-Zone America/Cancun\t-5:47:04 -\tLMT\t1922 Jan  1  0:12:56\n+Zone America/Cancun\t-5:47:04 -\tLMT\t1922 Jan  1  6:00u\n \t\t\t-6:00\t-\tCST\t1981 Dec 23\n \t\t\t-5:00\tMexico\tE%sT\t1998 Aug  2  2:00\n \t\t\t-6:00\tMexico\tC%sT\t2015 Feb  1  2:00\n \t\t\t-5:00\t-\tEST\n # Campeche, Yucatán; represented by Mérida\n-Zone America/Merida\t-5:58:28 -\tLMT\t1922 Jan  1  0:01:32\n+Zone America/Merida\t-5:58:28 -\tLMT\t1922 Jan  1  6:00u\n \t\t\t-6:00\t-\tCST\t1981 Dec 23\n \t\t\t-5:00\t-\tEST\t1982 Dec  2\n \t\t\t-6:00\tMexico\tC%sT\n # Coahuila, Nuevo León, Tamaulipas (near US border)\n # This includes the following municipalities:\n-#   in Coahuila: Ocampo, Acuña, Zaragoza, Jiménez, Piedras Negras, Nava,\n-#     Guerrero, Hidalgo.\n-#   in Nuevo León: Anáhuac, Los Aldama.\n+#   in Coahuila: Acuña, Allende, Guerrero, Hidalgo, Jiménez, Morelos, Nava,\n+#     Ocampo, Piedras Negras, Villa Unión, Zaragoza\n+#   in Nuevo León: Anáhuac\n #   in Tamaulipas: Nuevo Laredo, Guerrero, Mier, Miguel Alemán, Camargo,\n #     Gustavo Díaz Ordaz, Reynosa, Río Bravo, Valle Hermoso, Matamoros.\n-# See: Inicia mañana Horario de Verano en zona fronteriza, El Universal,\n-# 2016-03-12\n-# http://www.eluniversal.com.mx/articulo/estados/2016/03/12/inicia-manana-horario-de-verano-en-zona-fronteriza\n-Zone America/Matamoros\t-6:40:00 -\tLMT\t1921 Dec 31 23:20:00\n+# https://www.dof.gob.mx/nota_detalle.php?codigo=5670045&fecha=28/10/2022\n+Zone America/Matamoros\t-6:30:00 -\tLMT\t1922 Jan  1  6:00u\n \t\t\t-6:00\t-\tCST\t1988\n \t\t\t-6:00\tUS\tC%sT\t1989\n \t\t\t-6:00\tMexico\tC%sT\t2010\n \t\t\t-6:00\tUS\tC%sT\n # Durango; Coahuila, Nuevo León, Tamaulipas (away from US border)\n-Zone America/Monterrey\t-6:41:16 -\tLMT\t1921 Dec 31 23:18:44\n+Zone America/Monterrey\t-6:41:16 -\tLMT\t1922 Jan  1  6:00u\n \t\t\t-6:00\t-\tCST\t1988\n \t\t\t-6:00\tUS\tC%sT\t1989\n \t\t\t-6:00\tMexico\tC%sT\n # Central Mexico\n-Zone America/Mexico_City -6:36:36 -\tLMT\t1922 Jan  1  0:23:24\n+Zone America/Mexico_City -6:36:36 -\tLMT\t1922 Jan  1  7:00u\n \t\t\t-7:00\t-\tMST\t1927 Jun 10 23:00\n \t\t\t-6:00\t-\tCST\t1930 Nov 15\n-\t\t\t-7:00\t-\tMST\t1931 May  1 23:00\n-\t\t\t-6:00\t-\tCST\t1931 Oct\n-\t\t\t-7:00\t-\tMST\t1932 Apr  1\n+\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n \t\t\t-6:00\tMexico\tC%sT\t2001 Sep 30  2:00\n \t\t\t-6:00\t-\tCST\t2002 Feb 20\n \t\t\t-6:00\tMexico\tC%sT\n-# Chihuahua (near US border)\n+# Chihuahua (near US border - western side)\n # This includes the municipalities of Janos, Ascensión, Juárez, Guadalupe,\n-# Práxedis G Guerrero, Coyame del Sotol, Ojinaga, and Manuel Benavides.\n-# (See the 2016-03-12 El Universal source mentioned above.)\n-Zone America/Ojinaga\t-6:57:40 -\tLMT\t1922 Jan  1  0:02:20\n+# and Práxedis G Guerrero.\n+# http://gaceta.diputados.gob.mx/PDF/65/2a022/nov/20221124-VII.pdf\n+Zone America/Ciudad_Juarez -7:05:56 -\tLMT\t1922 Jan  1  7:00u\n \t\t\t-7:00\t-\tMST\t1927 Jun 10 23:00\n \t\t\t-6:00\t-\tCST\t1930 Nov 15\n-\t\t\t-7:00\t-\tMST\t1931 May  1 23:00\n-\t\t\t-6:00\t-\tCST\t1931 Oct\n-\t\t\t-7:00\t-\tMST\t1932 Apr  1\n+\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n \t\t\t-6:00\t-\tCST\t1996\n \t\t\t-6:00\tMexico\tC%sT\t1998\n \t\t\t-6:00\t-\tCST\t1998 Apr Sun>=1  3:00\n \t\t\t-7:00\tMexico\tM%sT\t2010\n+\t\t\t-7:00\tUS\tM%sT\t2022 Oct 30  2:00\n+\t\t\t-6:00\t-\tCST\t2022 Nov 30  0:00\n \t\t\t-7:00\tUS\tM%sT\n+# Chihuahua (near US border - eastern side)\n+# The municipalities of Coyame del Sotol, Ojinaga, and Manuel Benavides.\n+# http://gaceta.diputados.gob.mx/PDF/65/2a022/nov/20221124-VII.pdf\n+Zone America/Ojinaga\t-6:57:40 -\tLMT\t1922 Jan  1  7:00u\n+\t\t\t-7:00\t-\tMST\t1927 Jun 10 23:00\n+\t\t\t-6:00\t-\tCST\t1930 Nov 15\n+\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n+\t\t\t-6:00\t-\tCST\t1996\n+\t\t\t-6:00\tMexico\tC%sT\t1998\n+\t\t\t-6:00\t-\tCST\t1998 Apr Sun>=1  3:00\n+\t\t\t-7:00\tMexico\tM%sT\t2010\n+\t\t\t-7:00\tUS\tM%sT\t2022 Oct 30  2:00\n+\t\t\t-6:00\t-\tCST\t2022 Nov 30  0:00\n+\t\t\t-6:00\tUS\tC%sT\n # Chihuahua (away from US border)\n-Zone America/Chihuahua\t-7:04:20 -\tLMT\t1921 Dec 31 23:55:40\n+Zone America/Chihuahua\t-7:04:20 -\tLMT\t1922 Jan  1  7:00u\n \t\t\t-7:00\t-\tMST\t1927 Jun 10 23:00\n \t\t\t-6:00\t-\tCST\t1930 Nov 15\n-\t\t\t-7:00\t-\tMST\t1931 May  1 23:00\n-\t\t\t-6:00\t-\tCST\t1931 Oct\n-\t\t\t-7:00\t-\tMST\t1932 Apr  1\n+\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n \t\t\t-6:00\t-\tCST\t1996\n \t\t\t-6:00\tMexico\tC%sT\t1998\n \t\t\t-6:00\t-\tCST\t1998 Apr Sun>=1  3:00\n-\t\t\t-7:00\tMexico\tM%sT\n+\t\t\t-7:00\tMexico\tM%sT\t2022 Oct 30  2:00\n+\t\t\t-6:00\t-\tCST\n # Sonora\n-Zone America/Hermosillo\t-7:23:52 -\tLMT\t1921 Dec 31 23:36:08\n+Zone America/Hermosillo\t-7:23:52 -\tLMT\t1922 Jan  1  7:00u\n \t\t\t-7:00\t-\tMST\t1927 Jun 10 23:00\n \t\t\t-6:00\t-\tCST\t1930 Nov 15\n-\t\t\t-7:00\t-\tMST\t1931 May  1 23:00\n-\t\t\t-6:00\t-\tCST\t1931 Oct\n-\t\t\t-7:00\t-\tMST\t1932 Apr  1\n+\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n \t\t\t-6:00\t-\tCST\t1942 Apr 24\n \t\t\t-7:00\t-\tMST\t1949 Jan 14\n \t\t\t-8:00\t-\tPST\t1970\n \t\t\t-7:00\tMexico\tM%sT\t1999\n \t\t\t-7:00\t-\tMST\n \n+# Baja California Sur, Nayarit (except Bahía de Banderas), Sinaloa\n+Zone America/Mazatlan\t-7:05:40 -\tLMT\t1922 Jan  1  7:00u\n+\t\t\t-7:00\t-\tMST\t1927 Jun 10 23:00\n+\t\t\t-6:00\t-\tCST\t1930 Nov 15\n+\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n+\t\t\t-6:00\t-\tCST\t1942 Apr 24\n+\t\t\t-7:00\t-\tMST\t1949 Jan 14\n+\t\t\t-8:00\t-\tPST\t1970\n+\t\t\t-7:00\tMexico\tM%sT\n+\n+# Bahía de Banderas\n+\n # From Alexander Krivenyshev (2010-04-21):\n # According to news, Bahía de Banderas (Mexican state of Nayarit)\n # changed time zone UTC-7 to new time zone UTC-6 on April 4, 2010 (to\n@@ -2762,33 +2735,18 @@ Zone America/Hermosillo\t-7:23:52 -\tLMT\t1921 Dec 31 23:36:08\n # From Arthur David Olson (2010-05-01):\n # Use \"Bahia_Banderas\" to keep the name to fourteen characters.\n \n-# Mazatlán\n-Zone America/Mazatlan\t-7:05:40 -\tLMT\t1921 Dec 31 23:54:20\n-\t\t\t-7:00\t-\tMST\t1927 Jun 10 23:00\n-\t\t\t-6:00\t-\tCST\t1930 Nov 15\n-\t\t\t-7:00\t-\tMST\t1931 May  1 23:00\n-\t\t\t-6:00\t-\tCST\t1931 Oct\n-\t\t\t-7:00\t-\tMST\t1932 Apr  1\n-\t\t\t-6:00\t-\tCST\t1942 Apr 24\n-\t\t\t-7:00\t-\tMST\t1949 Jan 14\n-\t\t\t-8:00\t-\tPST\t1970\n-\t\t\t-7:00\tMexico\tM%sT\n-\n-# Bahía de Banderas\n-Zone America/Bahia_Banderas\t-7:01:00 -\tLMT\t1921 Dec 31 23:59:00\n+Zone America/Bahia_Banderas -7:01:00 -\tLMT\t1922 Jan  1  7:00u\n \t\t\t-7:00\t-\tMST\t1927 Jun 10 23:00\n \t\t\t-6:00\t-\tCST\t1930 Nov 15\n-\t\t\t-7:00\t-\tMST\t1931 May  1 23:00\n-\t\t\t-6:00\t-\tCST\t1931 Oct\n-\t\t\t-7:00\t-\tMST\t1932 Apr  1\n+\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n \t\t\t-6:00\t-\tCST\t1942 Apr 24\n \t\t\t-7:00\t-\tMST\t1949 Jan 14\n \t\t\t-8:00\t-\tPST\t1970\n \t\t\t-7:00\tMexico\tM%sT\t2010 Apr  4  2:00\n \t\t\t-6:00\tMexico\tC%sT\n \n # Baja California\n-Zone America/Tijuana\t-7:48:04 -\tLMT\t1922 Jan  1  0:11:56\n+Zone America/Tijuana\t-7:48:04 -\tLMT\t1922 Jan  1  7:00u\n \t\t\t-7:00\t-\tMST\t1924\n \t\t\t-8:00\t-\tPST\t1927 Jun 10 23:00\n \t\t\t-7:00\t-\tMST\t1930 Nov 15\n@@ -2825,20 +2783,16 @@ Zone America/Tijuana\t-7:48:04 -\tLMT\t1922 Jan  1  0:11:56\n # http://dof.gob.mx/nota_detalle.php?codigo=5127480&fecha=06/01/2010\n # It has been moved to the 'backward' file.\n #\n+# From Paul Eggert (2022-10-28):\n+# Today's new law states that the entire state of Baja California\n+# follows US DST rules, which agrees with simplifications noted above.\n+#\n #\n # Revillagigedo Is\n # no information\n \n ###############################################################################\n \n-# Anguilla\n-# Antigua and Barbuda\n-# See America/Puerto_Rico.\n-\n-# The Bahamas\n-# See America/Toronto.\n-\n-\n # Barbados\n \n # For 1899 Milne gives -3:58:29.2.\n@@ -3051,12 +3005,6 @@ Zone Atlantic/Bermuda\t-4:19:18 -\tLMT\t1890\t# Hamilton\n \t\t\t-4:00\tCanada\tA%sT\t1976\n \t\t\t-4:00\tUS\tA%sT\n \n-# Caribbean Netherlands\n-# See America/Puerto_Rico.\n-\n-# Cayman Is\n-# See America/Panama.\n-\n # Costa Rica\n \n # Milne gives -5:36:13.3 as San José mean time.\n@@ -3282,9 +3230,6 @@ Zone\tAmerica/Havana\t-5:29:28 -\tLMT\t1890\n \t\t\t-5:29:36 -\tHMT\t1925 Jul 19 12:00 # Havana MT\n \t\t\t-5:00\tCuba\tC%sT\n \n-# Dominica\n-# See America/Puerto_Rico.\n-\n # Dominican Republic\n \n # From Steffen Thorsen (2000-10-30):\n@@ -3331,12 +3276,6 @@ Rule\tSalv\t1987\t1988\t-\tSep\tlastSun\t0:00\t0\tS\n Zone America/El_Salvador -5:56:48 -\tLMT\t1921 # San Salvador\n \t\t\t-6:00\tSalv\tC%sT\n \n-# Grenada\n-# Guadeloupe\n-# St Barthélemy\n-# St Martin (French part)\n-# See America/Puerto_Rico.\n-\n # Guatemala\n #\n # From Gwillim Law (2006-04-22), after a heads-up from Oscar van Vlijmen:\n@@ -3522,9 +3461,6 @@ Zone America/Martinique\t-4:04:20 -      LMT\t1890        # Fort-de-France\n \t\t\t-4:00\t1:00\tADT\t1980 Sep 28\n \t\t\t-4:00\t-\tAST\n \n-# Montserrat\n-# See America/Puerto_Rico.\n-\n # Nicaragua\n #\n # This uses Shanks & Pottenger for times before 2005.\n@@ -3590,44 +3526,39 @@ Zone\tAmerica/Managua\t-5:45:08 -\tLMT\t1890\n \t\t\t-5:00\t-\tEST\t1997\n \t\t\t-6:00\tNic\tC%sT\n \n+# Cayman Is\n # Panama\n+#\n+# Atikokan and Coral Harbour, Canada, match Panama since 1970.\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAmerica/Panama\t-5:18:08 -\tLMT\t1890\n \t\t\t-5:19:36 -\tCMT\t1908 Apr 22 # Colón Mean Time\n \t\t\t-5:00\t-\tEST\n-Link America/Panama America/Atikokan\n-Link America/Panama America/Cayman\n \n+# Anguilla\n+# Antigua & Barbuda\n+# Aruba\n+# Caribbean Netherlands\n+# Curaçao\n+# Dominica\n+# Grenada\n+# Guadeloupe\n+# Montserrat\n # Puerto Rico\n+# St Barthélemy\n+# St Kitts-Nevis\n+# Sint Maarten / St Martin\n+# St Lucia\n+# St Vincent & the Grenadines\n+# Trinidad & Tobago\n+# Virgin Is (UK & US)\n+#\n # There are too many San Juans elsewhere, so we'll use 'Puerto_Rico'.\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone America/Puerto_Rico -4:24:25 -\tLMT\t1899 Mar 28 12:00 # San Juan\n \t\t\t-4:00\t-\tAST\t1942 May  3\n \t\t\t-4:00\tUS\tA%sT\t1946\n \t\t\t-4:00\t-\tAST\n-Link America/Puerto_Rico America/Anguilla\n-Link America/Puerto_Rico America/Antigua\n-Link America/Puerto_Rico America/Aruba\n-Link America/Puerto_Rico America/Curacao\n-Link America/Puerto_Rico America/Blanc-Sablon\t# Quebec (Lower North Shore)\n-Link America/Puerto_Rico America/Dominica\n-Link America/Puerto_Rico America/Grenada\n-Link America/Puerto_Rico America/Guadeloupe\n-Link America/Puerto_Rico America/Kralendijk\t# Caribbean Netherlands\n-Link America/Puerto_Rico America/Lower_Princes\t# Sint Maarten\n-Link America/Puerto_Rico America/Marigot\t# St Martin (French part)\n-Link America/Puerto_Rico America/Montserrat\n-Link America/Puerto_Rico America/Port_of_Spain\t# Trinidad & Tobago\n-Link America/Puerto_Rico America/St_Barthelemy\t# St Barthélemy\n-Link America/Puerto_Rico America/St_Kitts\t# St Kitts & Nevis\n-Link America/Puerto_Rico America/St_Lucia\n-Link America/Puerto_Rico America/St_Thomas\t# Virgin Islands (US)\n-Link America/Puerto_Rico America/St_Vincent\n-Link America/Puerto_Rico America/Tortola\t# Virgin Islands (UK)\n-\n-# St Kitts-Nevis\n-# St Lucia\n-# See America/Puerto_Rico.\n \n # St Pierre and Miquelon\n # There are too many St Pierres elsewhere, so we'll use 'Miquelon'.\n@@ -3637,12 +3568,6 @@ Zone America/Miquelon\t-3:44:40 -\tLMT\t1911 May 15 # St Pierre\n \t\t\t-3:00\t-\t-03\t1987\n \t\t\t-3:00\tCanada\t-03/-02\n \n-# St Vincent and the Grenadines\n-# See America/Puerto_Rico.\n-\n-# Sint Maarten\n-# See America/Puerto_Rico.\n-\n # Turks and Caicos\n #\n # From Chris Dunn in\n@@ -3712,11 +3637,6 @@ Zone America/Grand_Turk\t-4:44:32 -\tLMT\t1890\n \t\t\t-4:00\t-\tAST\t2018 Mar 11  3:00\n \t\t\t-5:00\tUS\tE%sT\n \n-# British Virgin Is\n-# US Virgin Is\n-# See America/Puerto_Rico.\n-\n-\n # Local Variables:\n # coding: utf-8\n # End:"
      },
      {
        "sha": "81fdd793df43a2e1737c69df599971bb6fdefd8c",
        "filename": "make/data/tzdata/southamerica",
        "status": "modified",
        "additions": 15,
        "deletions": 19,
        "changes": 34,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fsouthamerica",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fsouthamerica",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Fsouthamerica?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -608,9 +608,6 @@ Zone America/Argentina/Ushuaia -4:33:12 - LMT\t1894 Oct 31\n \t\t\t-3:00\tArg\t-03/-02\t2008 Oct 18\n \t\t\t-3:00\t-\t-03\n \n-# Aruba\n-# See America/Puerto_Rico.\n-\n # Bolivia\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n Zone\tAmerica/La_Paz\t-4:32:36 -\tLMT\t1890\n@@ -1332,8 +1329,14 @@ Zone America/Rio_Branco\t-4:31:12 -\tLMT\t1914\n # for America/Santiago will start on midnight of September 11th;\n # and will end on April 1st, 2023. Magallanes region (America/Punta_Arenas)\n # will keep UTC -3 \"indefinitely\"...  This is because on September 4th\n-# we will have a voting whether to approve a new Constitution....\n-# https://www.interior.gob.cl/noticias/2022/08/09/comunicado-el-proximo-sabado-10-de-septiembre-los-relojes-se-deben-adelantar-una-hora/\n+# we will have a voting whether to approve a new Constitution.\n+#\n+# From Eduardo Romero Urra (2022-08-17):\n+# https://www.diariooficial.interior.gob.cl/publicaciones/2022/08/13/43327/01/2172567.pdf\n+#\n+# From Paul Eggert (2022-08-17):\n+# Although the presidential decree stops at fall 2026, assume that\n+# similar DST rules will continue thereafter.\n \n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n Rule\tChile\t1927\t1931\t-\tSep\t 1\t0:00\t1:00\t-\n@@ -1438,9 +1441,14 @@ Zone Antarctica/Palmer\t0\t-\t-00\t1965\n # Milne gives 4:56:16.4 for Bogotá time in 1899.  He writes,\n # \"A variation of fifteen minutes in the public clocks of Bogota is not rare.\"\n \n+# From Alois Treindl (2022-11-10):\n+# End of time change in Colombia 1993 ... should be 6 February 24h ...\n+# DECRETO 267 DE 1993\n+# https://www.suin-juriscol.gov.co/viewDocument.asp?ruta=Decretos/1061335\n+\n # Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n-Rule\tCO\t1992\tonly\t-\tMay\t 3\t0:00\t1:00\t-\n-Rule\tCO\t1993\tonly\t-\tApr\t 4\t0:00\t0\t-\n+Rule\tCO\t1992\tonly\t-\tMay\t 3\t 0:00\t1:00\t-\n+Rule\tCO\t1993\tonly\t-\tFeb\t 6\t24:00\t0\t-\n # Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n \t\t#STDOFF\t-4:56:16.4\n Zone\tAmerica/Bogota\t-4:56:16 -\tLMT\t1884 Mar 13\n@@ -1449,15 +1457,6 @@ Zone\tAmerica/Bogota\t-4:56:16 -\tLMT\t1884 Mar 13\n # Malpelo, Providencia, San Andres\n # no information; probably like America/Bogota\n \n-# Curaçao\n-# See America/Puerto_Rico.\n-#\n-# From Arthur David Olson (2011-06-15):\n-# use links for places with new iso3166 codes.\n-# The name \"Lower Prince's Quarter\" is both longer than fourteen characters\n-# and contains an apostrophe; use \"Lower_Princes\"....\n-# From Paul Eggert (2021-09-29):\n-# These backward-compatibility links now are in the 'northamerica' file.\n \n # Ecuador\n #\n@@ -1773,9 +1772,6 @@ Zone America/Paramaribo\t-3:40:40 -\tLMT\t1911\n \t\t\t-3:30\t-\t-0330\t1984 Oct\n \t\t\t-3:00\t-\t-03\n \n-# Trinidad and Tobago\n-# See America/Puerto_Rico.\n-\n # Uruguay\n # From Paul Eggert (1993-11-18):\n # Uruguay wins the prize for the strangest peacetime manipulation of the rules."
      },
      {
        "sha": "939432d3456fbb81e1d33143cf856d8319eaff9c",
        "filename": "make/data/tzdata/zone.tab",
        "status": "modified",
        "additions": 13,
        "deletions": 18,
        "changes": 31,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fzone.tab",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdata%2Ftzdata%2Fzone.tab",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdata%2Ftzdata%2Fzone.tab?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -137,13 +137,9 @@ CA\t+4606-06447\tAmerica/Moncton\tAtlantic - New Brunswick\n CA\t+5320-06025\tAmerica/Goose_Bay\tAtlantic - Labrador (most areas)\n CA\t+5125-05707\tAmerica/Blanc-Sablon\tAST - QC (Lower North Shore)\n CA\t+4339-07923\tAmerica/Toronto\tEastern - ON, QC (most areas)\n-CA\t+4901-08816\tAmerica/Nipigon\tEastern - ON, QC (no DST 1967-73)\n-CA\t+4823-08915\tAmerica/Thunder_Bay\tEastern - ON (Thunder Bay)\n-CA\t+6344-06828\tAmerica/Iqaluit\tEastern - NU (most east areas)\n-CA\t+6608-06544\tAmerica/Pangnirtung\tEastern - NU (Pangnirtung)\n+CA\t+6344-06828\tAmerica/Iqaluit\tEastern - NU (most areas)\n CA\t+484531-0913718\tAmerica/Atikokan\tEST - ON (Atikokan); NU (Coral H)\n CA\t+4953-09709\tAmerica/Winnipeg\tCentral - ON (west); Manitoba\n-CA\t+4843-09434\tAmerica/Rainy_River\tCentral - ON (Rainy R, Ft Frances)\n CA\t+744144-0944945\tAmerica/Resolute\tCentral - NU (Resolute)\n CA\t+624900-0920459\tAmerica/Rankin_Inlet\tCentral - NU (central)\n CA\t+5024-10439\tAmerica/Regina\tCST - SK (most areas)\n@@ -303,17 +299,18 @@ MT\t+3554+01431\tEurope/Malta\n MU\t-2010+05730\tIndian/Mauritius\n MV\t+0410+07330\tIndian/Maldives\n MW\t-1547+03500\tAfrica/Blantyre\n-MX\t+1924-09909\tAmerica/Mexico_City\tCentral Time\n-MX\t+2105-08646\tAmerica/Cancun\tEastern Standard Time - Quintana Roo\n-MX\t+2058-08937\tAmerica/Merida\tCentral Time - Campeche, Yucatan\n-MX\t+2540-10019\tAmerica/Monterrey\tCentral Time - Durango; Coahuila, Nuevo Leon, Tamaulipas (most areas)\n-MX\t+2550-09730\tAmerica/Matamoros\tCentral Time US - Coahuila, Nuevo Leon, Tamaulipas (US border)\n-MX\t+2313-10625\tAmerica/Mazatlan\tMountain Time - Baja California Sur, Nayarit, Sinaloa\n-MX\t+2838-10605\tAmerica/Chihuahua\tMountain Time - Chihuahua (most areas)\n-MX\t+2934-10425\tAmerica/Ojinaga\tMountain Time US - Chihuahua (US border)\n-MX\t+2904-11058\tAmerica/Hermosillo\tMountain Standard Time - Sonora\n-MX\t+3232-11701\tAmerica/Tijuana\tPacific Time US - Baja California\n-MX\t+2048-10515\tAmerica/Bahia_Banderas\tCentral Time - Bahia de Banderas\n+MX\t+1924-09909\tAmerica/Mexico_City\tCentral Mexico\n+MX\t+2105-08646\tAmerica/Cancun\tQuintana Roo\n+MX\t+2058-08937\tAmerica/Merida\tCampeche, Yucatan\n+MX\t+2540-10019\tAmerica/Monterrey\tDurango; Coahuila, Nuevo Leon, Tamaulipas (most areas)\n+MX\t+2550-09730\tAmerica/Matamoros\tCoahuila, Nuevo Leon, Tamaulipas (US border)\n+MX\t+2838-10605\tAmerica/Chihuahua\tChihuahua (most areas)\n+MX\t+3144-10629\tAmerica/Ciudad_Juarez\tChihuahua (US border - west)\n+MX\t+2934-10425\tAmerica/Ojinaga\tChihuahua (US border - east)\n+MX\t+2313-10625\tAmerica/Mazatlan\tBaja California Sur, Nayarit (most areas), Sinaloa\n+MX\t+2048-10515\tAmerica/Bahia_Banderas\tBahia de Banderas\n+MX\t+2904-11058\tAmerica/Hermosillo\tSonora\n+MX\t+3232-11701\tAmerica/Tijuana\tBaja California\n MY\t+0310+10142\tAsia/Kuala_Lumpur\tMalaysia (peninsula)\n MY\t+0133+11020\tAsia/Kuching\tSabah, Sarawak\n MZ\t-2558+03235\tAfrica/Maputo\n@@ -424,8 +421,6 @@ TV\t-0831+17913\tPacific/Funafuti\n TW\t+2503+12130\tAsia/Taipei\n TZ\t-0648+03917\tAfrica/Dar_es_Salaam\n UA\t+5026+03031\tEurope/Kyiv\tUkraine (most areas)\n-UA\t+4837+02218\tEurope/Uzhgorod\tTranscarpathia\n-UA\t+4750+03510\tEurope/Zaporozhye\tZaporozhye and east Lugansk\n UG\t+0019+03225\tAfrica/Kampala\n UM\t+2813-17722\tPacific/Midway\tMidway Islands\n UM\t+1917+16637\tPacific/Wake\tWake Island"
      },
      {
        "sha": "5744863958c2ef626f9f553b40082bd780868aa7",
        "filename": "make/devkit/createJMHBundle.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdevkit%2FcreateJMHBundle.sh",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fdevkit%2FcreateJMHBundle.sh",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fdevkit%2FcreateJMHBundle.sh?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -26,7 +26,7 @@\n # Create a bundle in the build directory, containing what's needed to\n # build and run JMH microbenchmarks from the OpenJDK build.\n \n-JMH_VERSION=1.34\n+JMH_VERSION=1.35\n COMMONS_MATH3_VERSION=3.2\n JOPT_SIMPLE_VERSION=4.6\n "
      },
      {
        "sha": "a80682007e5ba42703a335947831b4425120b2fd",
        "filename": "make/modules/java.desktop/lib/Awt2dLibraries.gmk",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fmodules%2Fjava.desktop%2Flib%2FAwt2dLibraries.gmk",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fmodules%2Fjava.desktop%2Flib%2FAwt2dLibraries.gmk",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fmodules%2Fjava.desktop%2Flib%2FAwt2dLibraries.gmk?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -26,6 +26,7 @@\n WIN_AWT_LIB := $(SUPPORT_OUTPUTDIR)/native/$(MODULE)/libawt/awt.lib\n \n LIBAWT_DEFAULT_HEADER_DIRS := \\\n+    common/awt/utility \\\n     libawt/awt/image \\\n     libawt/awt/image/cvutils \\\n     libawt/java2d \\\n@@ -368,7 +369,6 @@ ifeq ($(call isTargetOs, windows macosx), false)\n       common/awt/debug \\\n       common/font \\\n       common/java2d/opengl \\\n-      include \\\n       #\n \n   LIBAWT_HEADLESS_CFLAGS := $(CUPS_CFLAGS) $(FONTCONFIG_CFLAGS) $(X_CFLAGS) \\\n@@ -474,11 +474,11 @@ endif\n LIBFONTMANAGER_EXTRA_HEADER_DIRS := \\\n     libharfbuzz \\\n     common/awt \\\n+    common/awt/utility \\\n     common/font \\\n     libawt/java2d \\\n     libawt/java2d/pipe \\\n     libawt/java2d/loops \\\n-    include \\\n     #\n \n LIBFONTMANAGER_CFLAGS += $(LIBFREETYPE_CFLAGS)\n@@ -563,6 +563,7 @@ ifeq ($(call isTargetOs, windows), true)\n   LIBJAWT_EXTRA_HEADER_DIRS := \\\n       include \\\n       common/awt/debug \\\n+      common/awt/utility \\\n       libawt/awt/image/cvutils \\\n       libawt/java2d \\\n       libawt/java2d/windows \\\n@@ -658,7 +659,7 @@ ifeq ($(ENABLE_HEADLESS_ONLY), false)\n       common/awt/systemscale \\\n       #\n \n-  LIBSPLASHSCREEN_HEADER_DIRS += include\n+  LIBSPLASHSCREEN_HEADER_DIRS += common/awt/utility\n \n   ifeq ($(USE_EXTERNAL_LIBGIF), false)\n     LIBSPLASHSCREEN_HEADER_DIRS += libsplashscreen/giflib"
      },
      {
        "sha": "580a4f3a33589e102279461da19c01dccf2926b9",
        "filename": "make/modules/java.security.jgss/Lib.gmk",
        "status": "modified",
        "additions": 14,
        "deletions": 12,
        "changes": 26,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fmodules%2Fjava.security.jgss%2FLib.gmk",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fmodules%2Fjava.security.jgss%2FLib.gmk",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fmodules%2Fjava.security.jgss%2FLib.gmk?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n #\n-# Copyright (c) 2011, 2021, Oracle and/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and/or its affiliates. All rights reserved.\n # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n #\n # This code is free software; you can redistribute it and/or modify it\n@@ -40,6 +40,19 @@ $(eval $(call SetupJdkLibrary, BUILD_LIBJ2GSS, \\\n \n TARGETS += $(BUILD_LIBJ2GSS)\n \n+ifeq ($(call isTargetOs, windows), true)\n+  $(eval $(call SetupJdkLibrary, BUILD_LIBSSPI_BRIDGE, \\\n+      NAME := sspi_bridge, \\\n+      OPTIMIZATION := LOW, \\\n+      CFLAGS := $(CFLAGS_JDKLIB) \\\n+          -I$(TOPDIR)/src/java.security.jgss/share/native/libj2gss, \\\n+      LDFLAGS := $(LDFLAGS_JDKLIB) \\\n+          $(call SET_SHARED_LIBRARY_ORIGIN) \\\n+  ))\n+\n+  TARGETS += $(BUILD_LIBSSPI_BRIDGE)\n+endif\n+\n ################################################################################\n \n ifneq ($(BUILD_CRYPTO), false)\n@@ -57,17 +70,6 @@ ifneq ($(BUILD_CRYPTO), false)\n     ))\n \n     TARGETS += $(BUILD_LIBW2K_LSA_AUTH)\n-\n-    $(eval $(call SetupJdkLibrary, BUILD_LIBSSPI_BRIDGE, \\\n-        NAME := sspi_bridge, \\\n-        OPTIMIZATION := LOW, \\\n-        CFLAGS := $(CFLAGS_JDKLIB) \\\n-            -I$(TOPDIR)/src/java.security.jgss/share/native/libj2gss, \\\n-        LDFLAGS := $(LDFLAGS_JDKLIB) \\\n-            $(call SET_SHARED_LIBRARY_ORIGIN) \\\n-    ))\n-\n-    TARGETS += $(BUILD_LIBSSPI_BRIDGE)\n   endif\n \n   ifeq ($(call isTargetOs, macosx), true)"
      },
      {
        "sha": "b33c80c784456fec65b9cae6842317e910bef537",
        "filename": "make/scripts/compare.sh",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fscripts%2Fcompare.sh",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/make%2Fscripts%2Fcompare.sh",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/make%2Fscripts%2Fcompare.sh?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -42,6 +42,7 @@ if [ \"$OPENJDK_TARGET_OS\" = \"macosx\" ]; then\n     LDD_CMD=\"$OTOOL -L\"\n     DIS_CMD=\"$OTOOL -v -V -t\"\n     STAT_PRINT_SIZE=\"-f %z\"\n+    STRIP=\"$STRIP -no_code_signature_warning\"\n elif [ \"$OPENJDK_TARGET_OS\" = \"windows\" ]; then\n     FULLDUMP_CMD=\"$DUMPBIN -all\"\n     LDD_CMD=\"$DUMPBIN -dependents\"\n@@ -674,14 +675,22 @@ compare_bin_file() {\n     ORIG_THIS_FILE=\"$THIS_FILE\"\n     ORIG_OTHER_FILE=\"$OTHER_FILE\"\n \n-    if [ \"$STRIP_ALL\" = \"true\" ] || [[ \"$STRIP_BEFORE_COMPARE\" = *\"$BIN_FILE\"* ]]; then\n+    if [ \"$STRIP_ALL\" = \"true\" ] || [[ \"$STRIP_BEFORE_COMPARE\" = *\"$BIN_FILE\"* ]] \\\n+           || [ \"$OPENJDK_TARGET_OS\" = \"macosx\" ]; then\n         THIS_STRIPPED_FILE=$FILE_WORK_DIR/this/$NAME\n         OTHER_STRIPPED_FILE=$FILE_WORK_DIR/other/$NAME\n         $MKDIR -p $FILE_WORK_DIR/this $FILE_WORK_DIR/other\n         $CP $THIS_FILE $THIS_STRIPPED_FILE\n         $CP $OTHER_FILE $OTHER_STRIPPED_FILE\n-        $STRIP $THIS_STRIPPED_FILE\n-        $STRIP $OTHER_STRIPPED_FILE\n+        if [ \"$STRIP_ALL\" = \"true\" ] || [[ \"$STRIP_BEFORE_COMPARE\" = *\"$BIN_FILE\"* ]]; then\n+            $STRIP $THIS_STRIPPED_FILE\n+            $STRIP $OTHER_STRIPPED_FILE\n+        fi\n+        # On macosx, always remove any signature before comparing\n+        if [ \"$OPENJDK_TARGET_OS\" = \"macosx\" ]; then\n+            $CODESIGN --remove-signature $THIS_STRIPPED_FILE\n+            $CODESIGN --remove-signature $OTHER_STRIPPED_FILE\n+        fi\n         THIS_FILE=\"$THIS_STRIPPED_FILE\"\n         OTHER_FILE=\"$OTHER_STRIPPED_FILE\"\n     fi"
      },
      {
        "sha": "55a8fb2f4c9f61fada77c533ea83e30932d105c0",
        "filename": "src/hotspot/cpu/aarch64/aarch64.ad",
        "status": "modified",
        "additions": 214,
        "deletions": 11,
        "changes": 225,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64.ad",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64.ad",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64.ad?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1279,12 +1279,12 @@ class HandlerImpl {\n   static int emit_deopt_handler(CodeBuffer& cbuf);\n \n   static uint size_exception_handler() {\n-    return MacroAssembler::far_branch_size();\n+    return MacroAssembler::far_codestub_branch_size();\n   }\n \n   static uint size_deopt_handler() {\n     // count one adr and one far branch instruction\n-    return 4 * NativeInstruction::instruction_size;\n+    return NativeInstruction::instruction_size + MacroAssembler::far_codestub_branch_size();\n   }\n };\n \n@@ -2358,7 +2358,7 @@ int HandlerImpl::emit_deopt_handler(CodeBuffer& cbuf)\n   __ adr(lr, __ pc());\n   __ far_jump(RuntimeAddress(SharedRuntime::deopt_blob()->unpack()));\n \n-  assert(__ offset() - offset <= (int) size_deopt_handler(), \"overflow\");\n+  assert(__ offset() - offset == (int) size_deopt_handler(), \"overflow\");\n   __ end_a_stub();\n   return offset;\n }\n@@ -3105,16 +3105,30 @@ encode %{\n                  rscratch1, stlrb);\n   %}\n \n+  enc_class aarch64_enc_stlrb0(memory mem) %{\n+    MOV_VOLATILE(zr, $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n+                 rscratch1, stlrb);\n+  %}\n+\n   enc_class aarch64_enc_stlrh(iRegI src, memory mem) %{\n     MOV_VOLATILE(as_Register($src$$reg), $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n                  rscratch1, stlrh);\n   %}\n \n+  enc_class aarch64_enc_stlrh0(memory mem) %{\n+    MOV_VOLATILE(zr, $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n+                 rscratch1, stlrh);\n+  %}\n+\n   enc_class aarch64_enc_stlrw(iRegI src, memory mem) %{\n     MOV_VOLATILE(as_Register($src$$reg), $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n                  rscratch1, stlrw);\n   %}\n \n+  enc_class aarch64_enc_stlrw0(memory mem) %{\n+    MOV_VOLATILE(zr, $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n+                 rscratch1, stlrw);\n+  %}\n \n   enc_class aarch64_enc_ldarsbw(iRegI dst, memory mem) %{\n     Register dst_reg = as_Register($dst$$reg);\n@@ -3205,6 +3219,11 @@ encode %{\n                  rscratch1, stlr);\n   %}\n \n+  enc_class aarch64_enc_stlr0(memory mem) %{\n+    MOV_VOLATILE(zr, $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n+                 rscratch1, stlr);\n+  %}\n+\n   enc_class aarch64_enc_fstlrs(vRegF src, memory mem) %{\n     {\n       C2_MacroAssembler _masm(&cbuf);\n@@ -3913,19 +3932,15 @@ encode %{\n     __ bind(object_has_monitor);\n     STATIC_ASSERT(markWord::monitor_value <= INT_MAX);\n     __ add(tmp, tmp, -(int)markWord::monitor_value); // monitor\n-    __ ldr(rscratch1, Address(tmp, ObjectMonitor::owner_offset_in_bytes()));\n     __ ldr(disp_hdr, Address(tmp, ObjectMonitor::recursions_offset_in_bytes()));\n \n     Label notRecursive;\n-    __ cmp(rscratch1, rthread);\n-    __ br(Assembler::NE, cont);\n-\n     __ cbz(disp_hdr, notRecursive);\n \n     // Recursive lock\n     __ sub(disp_hdr, disp_hdr, 1u);\n     __ str(disp_hdr, Address(tmp, ObjectMonitor::recursions_offset_in_bytes()));\n-    // flag == EQ was set in the ownership check above\n+    __ cmp(disp_hdr, disp_hdr); // Sets flags for result\n     __ b(cont);\n \n     __ bind(notRecursive);\n@@ -4295,6 +4310,16 @@ operand immI_65535()\n   interface(CONST_INTER);\n %}\n \n+operand immI_positive()\n+%{\n+  predicate(n->get_int() > 0);\n+  match(ConI);\n+\n+  op_cost(0);\n+  format %{ %}\n+  interface(CONST_INTER);\n+%}\n+\n operand immL_255()\n %{\n   predicate(n->get_long() == 255L);\n@@ -8109,6 +8134,18 @@ instruct storeB_volatile(iRegIorL2I src, /* sync_memory*/indirect mem)\n   ins_pipe(pipe_class_memory);\n %}\n \n+instruct storeimmB0_volatile(immI0 zero, /* sync_memory*/indirect mem)\n+%{\n+  match(Set mem (StoreB mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlrb  zr, $mem\\t# byte\" %}\n+\n+  ins_encode(aarch64_enc_stlrb0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n // Store Char/Short\n instruct storeC_volatile(iRegIorL2I src, /* sync_memory*/indirect mem)\n %{\n@@ -8122,6 +8159,18 @@ instruct storeC_volatile(iRegIorL2I src, /* sync_memory*/indirect mem)\n   ins_pipe(pipe_class_memory);\n %}\n \n+instruct storeimmC0_volatile(immI0 zero, /* sync_memory*/indirect mem)\n+%{\n+  match(Set mem (StoreC mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlrh  zr, $mem\\t# short\" %}\n+\n+  ins_encode(aarch64_enc_stlrh0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n // Store Integer\n \n instruct storeI_volatile(iRegIorL2I src, /* sync_memory*/indirect mem)\n@@ -8136,6 +8185,18 @@ instruct storeI_volatile(iRegIorL2I src, /* sync_memory*/indirect mem)\n   ins_pipe(pipe_class_memory);\n %}\n \n+instruct storeimmI0_volatile(immI0 zero, /* sync_memory*/indirect mem)\n+%{\n+  match(Set mem(StoreI mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlrw  zr, $mem\\t# int\" %}\n+\n+  ins_encode(aarch64_enc_stlrw0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n // Store Long (64 bit signed)\n instruct storeL_volatile(iRegL src, /* sync_memory*/indirect mem)\n %{\n@@ -8149,6 +8210,18 @@ instruct storeL_volatile(iRegL src, /* sync_memory*/indirect mem)\n   ins_pipe(pipe_class_memory);\n %}\n \n+instruct storeimmL0_volatile(immL0 zero, /* sync_memory*/indirect mem)\n+%{\n+  match(Set mem (StoreL mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlr  zr, $mem\\t# int\" %}\n+\n+  ins_encode(aarch64_enc_stlr0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n // Store Pointer\n instruct storeP_volatile(iRegP src, /* sync_memory*/indirect mem)\n %{\n@@ -8162,6 +8235,18 @@ instruct storeP_volatile(iRegP src, /* sync_memory*/indirect mem)\n   ins_pipe(pipe_class_memory);\n %}\n \n+instruct storeimmP0_volatile(immP0 zero, /* sync_memory*/indirect mem)\n+%{\n+  match(Set mem (StoreP mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlr  zr, $mem\\t# ptr\" %}\n+\n+  ins_encode(aarch64_enc_stlr0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n // Store Compressed Pointer\n instruct storeN_volatile(iRegN src, /* sync_memory*/indirect mem)\n %{\n@@ -8175,6 +8260,18 @@ instruct storeN_volatile(iRegN src, /* sync_memory*/indirect mem)\n   ins_pipe(pipe_class_memory);\n %}\n \n+instruct storeimmN0_volatile(immN0 zero, /* sync_memory*/indirect mem)\n+%{\n+  match(Set mem (StoreN mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlrw  zr, $mem\\t# compressed ptr\" %}\n+\n+  ins_encode(aarch64_enc_stlrw0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n // Store Float\n instruct storeF_volatile(vRegF src, /* sync_memory*/indirect mem)\n %{\n@@ -11318,6 +11415,108 @@ instruct regI_not_reg(iRegINoSp dst,\n   ins_pipe(ialu_reg);\n %}\n \n+// This pattern is automatically generated from aarch64_ad.m4\n+// DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+instruct NegI_reg_URShift_reg(iRegINoSp dst,\n+                              immI0 zero, iRegIorL2I src1, immI src2) %{\n+  match(Set dst (SubI zero (URShiftI src1 src2)));\n+\n+  ins_cost(1.9 * INSN_COST);\n+  format %{ \"negw  $dst, $src1, LSR $src2\" %}\n+\n+  ins_encode %{\n+    __ negw(as_Register($dst$$reg), as_Register($src1$$reg),\n+            Assembler::LSR, $src2$$constant & 0x1f);\n+  %}\n+\n+  ins_pipe(ialu_reg_shift);\n+%}\n+\n+// This pattern is automatically generated from aarch64_ad.m4\n+// DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+instruct NegI_reg_RShift_reg(iRegINoSp dst,\n+                              immI0 zero, iRegIorL2I src1, immI src2) %{\n+  match(Set dst (SubI zero (RShiftI src1 src2)));\n+\n+  ins_cost(1.9 * INSN_COST);\n+  format %{ \"negw  $dst, $src1, ASR $src2\" %}\n+\n+  ins_encode %{\n+    __ negw(as_Register($dst$$reg), as_Register($src1$$reg),\n+            Assembler::ASR, $src2$$constant & 0x1f);\n+  %}\n+\n+  ins_pipe(ialu_reg_shift);\n+%}\n+\n+// This pattern is automatically generated from aarch64_ad.m4\n+// DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+instruct NegI_reg_LShift_reg(iRegINoSp dst,\n+                              immI0 zero, iRegIorL2I src1, immI src2) %{\n+  match(Set dst (SubI zero (LShiftI src1 src2)));\n+\n+  ins_cost(1.9 * INSN_COST);\n+  format %{ \"negw  $dst, $src1, LSL $src2\" %}\n+\n+  ins_encode %{\n+    __ negw(as_Register($dst$$reg), as_Register($src1$$reg),\n+            Assembler::LSL, $src2$$constant & 0x1f);\n+  %}\n+\n+  ins_pipe(ialu_reg_shift);\n+%}\n+\n+// This pattern is automatically generated from aarch64_ad.m4\n+// DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+instruct NegL_reg_URShift_reg(iRegLNoSp dst,\n+                              immL0 zero, iRegL src1, immI src2) %{\n+  match(Set dst (SubL zero (URShiftL src1 src2)));\n+\n+  ins_cost(1.9 * INSN_COST);\n+  format %{ \"neg  $dst, $src1, LSR $src2\" %}\n+\n+  ins_encode %{\n+    __ neg(as_Register($dst$$reg), as_Register($src1$$reg),\n+            Assembler::LSR, $src2$$constant & 0x3f);\n+  %}\n+\n+  ins_pipe(ialu_reg_shift);\n+%}\n+\n+// This pattern is automatically generated from aarch64_ad.m4\n+// DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+instruct NegL_reg_RShift_reg(iRegLNoSp dst,\n+                              immL0 zero, iRegL src1, immI src2) %{\n+  match(Set dst (SubL zero (RShiftL src1 src2)));\n+\n+  ins_cost(1.9 * INSN_COST);\n+  format %{ \"neg  $dst, $src1, ASR $src2\" %}\n+\n+  ins_encode %{\n+    __ neg(as_Register($dst$$reg), as_Register($src1$$reg),\n+            Assembler::ASR, $src2$$constant & 0x3f);\n+  %}\n+\n+  ins_pipe(ialu_reg_shift);\n+%}\n+\n+// This pattern is automatically generated from aarch64_ad.m4\n+// DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+instruct NegL_reg_LShift_reg(iRegLNoSp dst,\n+                              immL0 zero, iRegL src1, immI src2) %{\n+  match(Set dst (SubL zero (LShiftL src1 src2)));\n+\n+  ins_cost(1.9 * INSN_COST);\n+  format %{ \"neg  $dst, $src1, LSL $src2\" %}\n+\n+  ins_encode %{\n+    __ neg(as_Register($dst$$reg), as_Register($src1$$reg),\n+            Assembler::LSL, $src2$$constant & 0x3f);\n+  %}\n+\n+  ins_pipe(ialu_reg_shift);\n+%}\n+\n // This pattern is automatically generated from aarch64_ad.m4\n // DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n instruct AndI_reg_not_reg(iRegINoSp dst,\n@@ -14997,18 +15196,22 @@ instruct clearArray_reg_reg(iRegL_R11 cnt, iRegP_R10 base, Universe dummy, rFlag\n   ins_pipe(pipe_class_memory);\n %}\n \n-instruct clearArray_imm_reg(immL cnt, iRegP_R10 base, Universe dummy, rFlagsReg cr)\n+instruct clearArray_imm_reg(immL cnt, iRegP_R10 base, iRegL_R11 temp, Universe dummy, rFlagsReg cr)\n %{\n   predicate((uint64_t)n->in(2)->get_long()\n             < (uint64_t)(BlockZeroingLowLimit >> LogBytesPerWord));\n   match(Set dummy (ClearArray cnt base));\n-  effect(USE_KILL base);\n+  effect(TEMP temp, USE_KILL base, KILL cr);\n \n   ins_cost(4 * INSN_COST);\n   format %{ \"ClearArray $cnt, $base\" %}\n \n   ins_encode %{\n-    __ zero_words($base$$Register, (uint64_t)$cnt$$constant);\n+    address tpc = __ zero_words($base$$Register, (uint64_t)$cnt$$constant);\n+    if (tpc == NULL) {\n+      ciEnv::current()->record_failure(\"CodeCache is full\");\n+      return;\n+    }\n   %}\n \n   ins_pipe(pipe_class_memory);"
      },
      {
        "sha": "ffb5c57195f3b7b08cf9096a75327dfe7a21ac81",
        "filename": "src/hotspot/cpu/aarch64/aarch64_ad.m4",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64_ad.m4",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64_ad.m4",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64_ad.m4?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -52,6 +52,24 @@ instruct $2$1_reg_$4_reg(iReg$1NoSp dst,\n   ins_pipe(ialu_reg_reg_shift);\n %}\n ')dnl\n+define(`NEG_SHIFT_INSN',\n+`// This pattern is automatically generated from aarch64_ad.m4\n+// DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+instruct Neg$1_reg_$2_reg(iReg$1NoSp dst,\n+                              imm$1`0' zero, iReg$1`'ORL2I($1) src1, immI src2) %{\n+  match(Set dst (Sub$1 zero ($2$1 src1 src2)));\n+\n+  ins_cost(1.9 * INSN_COST);\n+  format %{ \"ifelse($1, I, negw, neg)  $dst, $src1, $3 $src2\" %}\n+\n+  ins_encode %{\n+    __ ifelse($1, I, negw, neg)(as_Register($dst$$reg), as_Register($src1$$reg),\n+            Assembler::$3, $src2$$constant & ifelse($1,I,0x1f,0x3f));\n+  %}\n+\n+  ins_pipe(ialu_reg_shift);\n+%}\n+')dnl\n define(`BASE_INVERTED_INSN',\n `// This pattern is automatically generated from aarch64_ad.m4\n // DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -126,6 +144,11 @@ define(`BOTH_SHIFT_INSNS',\n `BASE_SHIFT_INSN(I, $1, ifelse($2,andr,andw,$2w), $3, $4)\n BASE_SHIFT_INSN(L, $1, $2, $3, $4)')dnl\n dnl\n+define(`BOTH_NEG_SHIFT_INSNS',\n+`NEG_SHIFT_INSN($1, URShift, LSR)\n+NEG_SHIFT_INSN($1, RShift, ASR)\n+NEG_SHIFT_INSN($1, LShift, LSL)')dnl\n+dnl\n define(`BOTH_INVERTED_INSNS',\n `BASE_INVERTED_INSN(I, $1, $2w, $3, $4)\n BASE_INVERTED_INSN(L, $1, $2, $3, $4)')dnl\n@@ -151,6 +174,8 @@ BOTH_INVERTED_SHIFT_INSNS($1, $2, LShift, LSL)')dnl\n dnl\n NOT_INSN(L, eon)\n NOT_INSN(I, eonw)\n+BOTH_NEG_SHIFT_INSNS(I)\n+BOTH_NEG_SHIFT_INSNS(L)\n BOTH_INVERTED_INSNS(And, bic)\n BOTH_INVERTED_INSNS(Or, orn)\n BOTH_INVERTED_INSNS(Xor, eon)"
      },
      {
        "sha": "643c05cbc0983828a2522e213d40f1dc6ae8a430",
        "filename": "src/hotspot/cpu/aarch64/aarch64_neon.ad",
        "status": "modified",
        "additions": 35,
        "deletions": 40,
        "changes": 75,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64_neon.ad",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64_neon.ad",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64_neon.ad?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -3103,16 +3103,14 @@ instruct replicate2L(vecX dst, iRegL src)\n   ins_pipe(vdup_reg_reg128);\n %}\n \n-instruct replicate2L_zero(vecX dst, immI0 zero)\n+instruct replicate2L_imm(vecX dst, immL con)\n %{\n   predicate(UseSVE == 0 && n->as_Vector()->length() == 2);\n-  match(Set dst (ReplicateI zero));\n+  match(Set dst (ReplicateL con));\n   ins_cost(INSN_COST);\n-  format %{ \"movi  $dst, $zero\\t# vector (4I)\" %}\n+  format %{ \"movi  $dst, $con\\t# vector (2L)\" %}\n   ins_encode %{\n-    __ eor(as_FloatRegister($dst$$reg), __ T16B,\n-           as_FloatRegister($dst$$reg),\n-           as_FloatRegister($dst$$reg));\n+    __ mov(as_FloatRegister($dst$$reg), __ T2D, $con$$constant);\n   %}\n   ins_pipe(vmovi_reg_imm128);\n %}\n@@ -3124,8 +3122,7 @@ instruct replicate2F(vecD dst, vRegF src)\n   ins_cost(INSN_COST);\n   format %{ \"dup  $dst, $src\\t# vector (2F)\" %}\n   ins_encode %{\n-    __ dup(as_FloatRegister($dst$$reg), __ T2S,\n-           as_FloatRegister($src$$reg));\n+    __ dup(as_FloatRegister($dst$$reg), __ T2S, as_FloatRegister($src$$reg));\n   %}\n   ins_pipe(vdup_reg_freg64);\n %}\n@@ -3137,8 +3134,7 @@ instruct replicate4F(vecX dst, vRegF src)\n   ins_cost(INSN_COST);\n   format %{ \"dup  $dst, $src\\t# vector (4F)\" %}\n   ins_encode %{\n-    __ dup(as_FloatRegister($dst$$reg), __ T4S,\n-           as_FloatRegister($src$$reg));\n+    __ dup(as_FloatRegister($dst$$reg), __ T4S, as_FloatRegister($src$$reg));\n   %}\n   ins_pipe(vdup_reg_freg128);\n %}\n@@ -3150,8 +3146,7 @@ instruct replicate2D(vecX dst, vRegD src)\n   ins_cost(INSN_COST);\n   format %{ \"dup  $dst, $src\\t# vector (2D)\" %}\n   ins_encode %{\n-    __ dup(as_FloatRegister($dst$$reg), __ T2D,\n-           as_FloatRegister($src$$reg));\n+    __ dup(as_FloatRegister($dst$$reg), __ T2D, as_FloatRegister($src$$reg));\n   %}\n   ins_pipe(vdup_reg_dreg128);\n %}\n@@ -4428,7 +4423,7 @@ instruct vsll16B_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsra8B_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsra8B_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 4 ||\n             n->as_Vector()->length() == 8);\n   match(Set dst (RShiftVB src (RShiftCntV shift)));\n@@ -4443,7 +4438,7 @@ instruct vsra8B_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsra16B_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsra16B_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 16);\n   match(Set dst (RShiftVB src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4457,7 +4452,7 @@ instruct vsra16B_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsrl8B_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsrl8B_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 4 ||\n             n->as_Vector()->length() == 8);\n   match(Set dst (URShiftVB src (RShiftCntV shift)));\n@@ -4477,7 +4472,7 @@ instruct vsrl8B_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsrl16B_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsrl16B_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 16);\n   match(Set dst (URShiftVB src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4632,7 +4627,7 @@ instruct vsll8S_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsra4S_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsra4S_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2 ||\n             n->as_Vector()->length() == 4);\n   match(Set dst (RShiftVS src (RShiftCntV shift)));\n@@ -4647,7 +4642,7 @@ instruct vsra4S_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsra8S_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsra8S_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 8);\n   match(Set dst (RShiftVS src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4661,7 +4656,7 @@ instruct vsra8S_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsrl4S_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsrl4S_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2 ||\n             n->as_Vector()->length() == 4);\n   match(Set dst (URShiftVS src (RShiftCntV shift)));\n@@ -4681,7 +4676,7 @@ instruct vsrl4S_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsrl8S_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsrl8S_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 8);\n   match(Set dst (URShiftVS src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4820,7 +4815,7 @@ instruct vsll4I_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsra2I_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsra2I_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2);\n   match(Set dst (RShiftVI src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4833,7 +4828,7 @@ instruct vsra2I_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsra4I_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsra4I_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 4);\n   match(Set dst (RShiftVI src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4846,7 +4841,7 @@ instruct vsra4I_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsrl2I_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsrl2I_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2);\n   match(Set dst (URShiftVI src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4859,7 +4854,7 @@ instruct vsrl2I_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsrl4I_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsrl4I_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 4);\n   match(Set dst (URShiftVI src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4932,7 +4927,7 @@ instruct vsll2L_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsra2L_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsra2L_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2);\n   match(Set dst (RShiftVL src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4945,7 +4940,7 @@ instruct vsra2L_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsrl2L_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsrl2L_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2);\n   match(Set dst (URShiftVL src (RShiftCntV shift)));\n   ins_cost(INSN_COST);\n@@ -4958,7 +4953,7 @@ instruct vsrl2L_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsraa8B_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsraa8B_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 8);\n   match(Set dst (AddVB dst (RShiftVB src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -4972,7 +4967,7 @@ instruct vsraa8B_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsraa16B_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsraa16B_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 16);\n   match(Set dst (AddVB dst (RShiftVB src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -4986,7 +4981,7 @@ instruct vsraa16B_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsraa4S_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsraa4S_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 4);\n   match(Set dst (AddVS dst (RShiftVS src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5000,7 +4995,7 @@ instruct vsraa4S_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsraa8S_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsraa8S_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 8);\n   match(Set dst (AddVS dst (RShiftVS src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5014,7 +5009,7 @@ instruct vsraa8S_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsraa2I_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsraa2I_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2);\n   match(Set dst (AddVI dst (RShiftVI src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5027,7 +5022,7 @@ instruct vsraa2I_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsraa4I_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsraa4I_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 4);\n   match(Set dst (AddVI dst (RShiftVI src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5040,7 +5035,7 @@ instruct vsraa4I_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsraa2L_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsraa2L_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2);\n   match(Set dst (AddVL dst (RShiftVL src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5053,7 +5048,7 @@ instruct vsraa2L_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsrla8B_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsrla8B_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 8);\n   match(Set dst (AddVB dst (URShiftVB src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5068,7 +5063,7 @@ instruct vsrla8B_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsrla16B_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsrla16B_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 16);\n   match(Set dst (AddVB dst (URShiftVB src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5083,7 +5078,7 @@ instruct vsrla16B_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsrla4S_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsrla4S_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 4);\n   match(Set dst (AddVS dst (URShiftVS src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5098,7 +5093,7 @@ instruct vsrla4S_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsrla8S_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsrla8S_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 8);\n   match(Set dst (AddVS dst (URShiftVS src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5113,7 +5108,7 @@ instruct vsrla8S_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsrla2I_imm(vecD dst, vecD src, immI shift) %{\n+instruct vsrla2I_imm(vecD dst, vecD src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2);\n   match(Set dst (AddVI dst (URShiftVI src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5126,7 +5121,7 @@ instruct vsrla2I_imm(vecD dst, vecD src, immI shift) %{\n   ins_pipe(vshift64_imm);\n %}\n \n-instruct vsrla4I_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsrla4I_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 4);\n   match(Set dst (AddVI dst (URShiftVI src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -5139,7 +5134,7 @@ instruct vsrla4I_imm(vecX dst, vecX src, immI shift) %{\n   ins_pipe(vshift128_imm);\n %}\n \n-instruct vsrla2L_imm(vecX dst, vecX src, immI shift) %{\n+instruct vsrla2L_imm(vecX dst, vecX src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == 2);\n   match(Set dst (AddVL dst (URShiftVL src (RShiftCntV shift))));\n   ins_cost(INSN_COST);"
      },
      {
        "sha": "b1b213f0fb3411d17ee8da1d0cfaa9a388272db6",
        "filename": "src/hotspot/cpu/aarch64/aarch64_neon_ad.m4",
        "status": "modified",
        "additions": 52,
        "deletions": 53,
        "changes": 105,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64_neon_ad.m4",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64_neon_ad.m4",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Faarch64_neon_ad.m4?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1463,55 +1463,54 @@ VFABD(fabd, fabd, 2, F, D, S, 64)\n VFABD(fabd, fabd, 4, F, X, S, 128)\n VFABD(fabd, fabd, 2, D, X, D, 128)\n dnl\n-define(`VREPLICATE', `\n-instruct replicate$3$4$5`'(vec$6 dst, $7 ifelse($7, immI0, zero, $7, immI, con, src))\n-%{\n-  predicate(ifelse($8, UseSVE == 0 && , $8,\n-                   $8, , , $8`\n-            ')n->as_Vector()->length() == $3);\n-  match(Set dst (Replicate`'ifelse($7, immI0, I, $4) ifelse($7, immI0, zero, $7, immI, con, $7, zero, I, src)));\n-  ins_cost(INSN_COST);\n-  format %{ \"$1  $dst, $ifelse($7, immI0, zero, $7, immI, con, src)`\\t# vector ('ifelse($4$7, SimmI, $3H, $2, eor, 4I, $3$4)`)\"' %}\n-  ins_encode %{\n-    __ $2(as_FloatRegister($dst$$reg), __ ifelse(\n-            $2, eor, T16B, T$3`'$9),ifelse(\n-            `$4 $7', `B immI', ` '$con$$constant & 0xff,\n-            `$4 $7', `S immI', ` '$con$$constant & 0xffff,\n-            `$4 $7', `I immI', ` '$con$$constant,\n-            `$2', eor,`\n-           as_FloatRegister($dst$$reg),\n-           as_FloatRegister($dst$$reg)',\n-            `$7', vRegF,`\n-           as_FloatRegister($src$$reg)',\n-            `$7', vRegD,`\n-           as_FloatRegister($src$$reg)',\n-           ` 'as_Register($src$$reg)));\n-  %}\n-  ins_pipe(ifelse($7, immI0, v$1_reg_imm,\n-                  $7, immI,  v$1_reg_imm,\n-                  $7, iRegIorL2I, v$1_reg_reg,\n-                  $7, zero, vmovi_reg_imm,\n-                  $7, iRegL, vdup_reg_reg,\n-                  $4, F, vdup_reg_freg, vdup_reg_dreg)`'ifelse($6, X, 128, 64));\n-%}')dnl\n-dnl        $1    $2    $3  $4 $5     $6 $7          $8                                $9\n-VREPLICATE(dup,  dup,  8,  B, ,      D, iRegIorL2I, n->as_Vector()->length() == 4 ||, B)\n-VREPLICATE(dup,  dup,  16, B, ,      X, iRegIorL2I, UseSVE == 0 && ,                  B)\n-VREPLICATE(movi, mov,  8,  B, _imm,  D, immI,       n->as_Vector()->length() == 4 ||, B)\n-VREPLICATE(movi, mov,  16, B, _imm,  X, immI,       UseSVE == 0 && ,                  B)\n-VREPLICATE(dup,  dup,  4,  S, ,      D, iRegIorL2I, n->as_Vector()->length() == 2 ||, H)\n-VREPLICATE(dup,  dup,  8,  S, ,      X, iRegIorL2I, UseSVE == 0 && ,                  H)\n-VREPLICATE(movi, mov,  4,  S, _imm,  D, immI,       n->as_Vector()->length() == 2 ||, H)\n-VREPLICATE(movi, mov,  8,  S,  _imm, X, immI,       UseSVE == 0 && ,                  H)\n-VREPLICATE(dup,  dup,  2,  I, ,      D, iRegIorL2I, ,                                 S)\n-VREPLICATE(dup,  dup,  4,  I, ,      X, iRegIorL2I, UseSVE == 0 && ,                  S)\n-VREPLICATE(movi, mov,  2,  I, _imm,  D, immI,       ,                                 S)\n-VREPLICATE(movi, mov,  4,  I,  _imm, X, immI,       UseSVE == 0 && ,                  S)\n-VREPLICATE(dup,  dup,  2,  L, ,      X, iRegL,      UseSVE == 0 && ,                  D)\n-VREPLICATE(movi, eor,  2,  L, _zero, X, immI0,      UseSVE == 0 && ,                  D)\n-VREPLICATE(dup,  dup,  2,  F, ,      D, vRegF,      ,                                 S)\n-VREPLICATE(dup,  dup,  4,  F, ,      X, vRegF,      UseSVE == 0 && ,                  S)\n-VREPLICATE(dup,  dup,  2,  D, ,      X, vRegD,      UseSVE == 0 && ,                  D)\n+define(`VREPLICATE_REG', `\n+instruct replicate$2$3`'(vec$4 dst, $5 src)\n+%{\n+  predicate(ifelse($7, UseSVE == 0 && , $7,\n+                   $7, , , $7`\n+            ')n->as_Vector()->length() == $2);\n+  match(Set dst (Replicate$3 src));\n+  ins_cost(INSN_COST);\n+  format %{ \"dup  $dst, $src\\t# vector ($2$3)\" %}\n+  ins_encode %{\n+    __ dup(as_FloatRegister($dst$$reg), __ T$2$1, $6($src$$reg));\n+  %}\n+  ins_pipe(ifelse($5, iRegIorL2I, vdup_reg_reg,\n+                  $5, iRegL, vdup_reg_reg,\n+                  $3, F, vdup_reg_freg, vdup_reg_dreg)`'ifelse($4, X, 128, 64));\n+%}')dnl\n+define(`VREPLICATE_IMM', `\n+instruct replicate$2$3_imm`'(vec$4 dst, $5 con)\n+%{\n+  predicate(ifelse($7, UseSVE == 0 && , $7,\n+                   $7, , , $7`\n+            ')n->as_Vector()->length() == $2);\n+  match(Set dst (Replicate$3 con));\n+  ins_cost(INSN_COST);\n+  format %{ \"movi  $dst, $con\\t`#' vector ($2`'ifelse($3, S, H, $3))\" %}\n+  ins_encode %{\n+    __ mov(as_FloatRegister($dst$$reg), __ T$2`'iTYPE2SIMD($3), $con$$constant`'$6);\n+  %}\n+  ins_pipe(vmovi_reg_imm`'ifelse($4, X, 128, 64));\n+%}')dnl\n+dnl            $1 $2  $3 $4 $5          $6                $7\n+VREPLICATE_REG(B, 8,  B, D, iRegIorL2I, as_Register,      n->as_Vector()->length() == 4 ||)\n+VREPLICATE_REG(B, 16, B, X, iRegIorL2I, as_Register,      UseSVE == 0 && )\n+VREPLICATE_IMM(B, 8,  B, D, immI,       ` & 0xff',        n->as_Vector()->length() == 4 ||)\n+VREPLICATE_IMM(B, 16, B, X, immI,       ` & 0xff',        UseSVE == 0 && )\n+VREPLICATE_REG(H, 4,  S, D, iRegIorL2I, as_Register,      n->as_Vector()->length() == 2 ||)\n+VREPLICATE_REG(H, 8,  S, X, iRegIorL2I, as_Register,      UseSVE == 0 && )\n+VREPLICATE_IMM(H, 4,  S, D, immI,       ` & 0xffff',      n->as_Vector()->length() == 2 ||)\n+VREPLICATE_IMM(H, 8,  S, X, immI,       ` & 0xffff',      UseSVE == 0 && )\n+VREPLICATE_REG(S, 2,  I, D, iRegIorL2I, as_Register,      )\n+VREPLICATE_REG(S, 4,  I, X, iRegIorL2I, as_Register,      UseSVE == 0 && )\n+VREPLICATE_IMM(S, 2,  I, D, immI,       ,                 )\n+VREPLICATE_IMM(S, 4,  I, X, immI,       ,                 UseSVE == 0 && )\n+VREPLICATE_REG(D, 2,  L, X, iRegL,      as_Register,      UseSVE == 0 && )\n+VREPLICATE_IMM(D, 2,  L, X, immL,       ,                 UseSVE == 0 && )\n+VREPLICATE_REG(S, 2,  F, D, vRegF,      as_FloatRegister, )\n+VREPLICATE_REG(S, 4,  F, X, vRegF,      as_FloatRegister, UseSVE == 0 && )\n+VREPLICATE_REG(D, 2,  D, X, vRegD,      as_FloatRegister, UseSVE == 0 && )\n dnl\n \n // ====================REDUCTION ARITHMETIC====================================\n@@ -1992,7 +1991,7 @@ instruct vsll$3$4_imm`'(vec$6 dst, vec$6 src, immI shift) %{\n   ins_pipe(vshift`'ifelse($6, D, 64, 128)_imm);\n %}')dnl\n define(`VSRA_IMM', `\n-instruct vsra$3$4_imm`'(vec$6 dst, vec$6 src, immI shift) %{\n+instruct vsra$3$4_imm`'(vec$6 dst, vec$6 src, immI_positive shift) %{\n   predicate(ifelse($3$4, 8B, n->as_Vector()->length() == 4 ||`\n             ',\n   $3$4, 4S, n->as_Vector()->length() == 2 ||`\n@@ -2017,7 +2016,7 @@ instruct vsra$3$4_imm`'(vec$6 dst, vec$6 src, immI shift) %{\n %}')dnl\n dnl\n define(`VSRL_IMM', `\n-instruct vsrl$3$4_imm`'(vec$6 dst, vec$6 src, immI shift) %{\n+instruct vsrl$3$4_imm`'(vec$6 dst, vec$6 src, immI_positive shift) %{\n   predicate(ifelse($3$4, 8B, n->as_Vector()->length() == 4 ||`\n             ',\n   $3$4, 4S, n->as_Vector()->length() == 2 ||`\n@@ -2052,7 +2051,7 @@ instruct vsrl$3$4_imm`'(vec$6 dst, vec$6 src, immI shift) %{\n %}')dnl\n dnl\n define(`VSRLA_IMM', `\n-instruct vsrla$3$4_imm`'(vec$6 dst, vec$6 src, immI shift) %{\n+instruct vsrla$3$4_imm`'(vec$6 dst, vec$6 src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == $3);\n   match(Set dst (AddV$4 dst (URShiftV$4 src (RShiftCntV shift))));\n   ins_cost(INSN_COST);\n@@ -2076,7 +2075,7 @@ instruct vsrla$3$4_imm`'(vec$6 dst, vec$6 src, immI shift) %{\n %}')dnl\n dnl\n define(`VSRAA_IMM', `\n-instruct vsraa$3$4_imm`'(vec$6 dst, vec$6 src, immI shift) %{\n+instruct vsraa$3$4_imm`'(vec$6 dst, vec$6 src, immI_positive shift) %{\n   predicate(n->as_Vector()->length() == $3);\n   match(Set dst (AddV$4 dst (RShiftV$4 src (RShiftCntV shift))));\n   ins_cost(INSN_COST);"
      },
      {
        "sha": "d31f638832b176b9ce1c0b9b0755b143063bb8a8",
        "filename": "src/hotspot/cpu/aarch64/assembler_aarch64.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 1,
        "changes": 49,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fassembler_aarch64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fassembler_aarch64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fassembler_aarch64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * Copyright (c) 2014, 2020 Red Hat Inc. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n@@ -313,6 +313,53 @@ bool Assembler::operand_valid_for_logical_immediate(bool is32, uint64_t imm) {\n   return encode_logical_immediate(is32, imm) != 0xffffffff;\n }\n \n+// Check immediate encoding for movi.\n+// Return the shift amount which can be {0, 8, 16, 24} for B/H/S types. As the D type\n+// movi does not have shift variant, in this case the return value is the immediate\n+// after encoding.\n+// Return -1 if the input imm64 can not be encoded.\n+int Assembler::operand_valid_for_movi_immediate(uint64_t imm64, SIMD_Arrangement T) {\n+  if (T == T1D || T == T2D) {\n+     // To encode into movi, the 64-bit imm must be in the form of\n+     // 'aaaaaaaabbbbbbbbccccccccddddddddeeeeeeeeffffffffgggggggghhhhhhhh'\n+     // and encoded in \"a:b:c:d:e:f:g:h\".\n+     uint64_t tmp = imm64;\n+     uint64_t one_byte = 0;\n+     for (int i = 0; i < 8; i++) {\n+       one_byte = tmp & 0xffULL;\n+       if (one_byte != 0xffULL && one_byte != 0) {\n+         return -1; // can not be encoded\n+       }\n+       tmp = tmp >> 8;\n+     }\n+\n+     imm64 &= 0x0101010101010101ULL;\n+     imm64 |= (imm64 >> 7);\n+     imm64 |= (imm64 >> 14);\n+     imm64 |= (imm64 >> 28);\n+\n+     return imm64 & 0xff;\n+  }\n+\n+  uint32_t imm32 = imm64 & 0xffffffffULL;\n+  if (T == T8B || T == T16B) {       // 8-bit variant\n+    if (0 == (imm32 & ~0xff))        return 0;\n+  } else if(T == T4H || T == T8H) {  // 16-bit variant\n+    if (0 == (imm32 & ~0xff))        return 0;\n+    if (0 == (imm32 & ~0xff00))      return 8;\n+  } else if (T == T2S || T == T4S) { // 32-bit variant\n+    if (0 == (imm32 & ~0xff))        return 0;\n+    if (0 == (imm32 & ~0xff00))      return 8;\n+    if (0 == (imm32 & ~0xff0000))    return 16;\n+    if (0 == (imm32 & ~0xff000000))  return 24;\n+  } else {\n+    assert(false, \"unsupported\");\n+    ShouldNotReachHere();\n+  }\n+\n+  return -1;\n+}\n+\n static uint64_t doubleTo64Bits(jdouble d) {\n   union {\n     jdouble double_value;"
      },
      {
        "sha": "70f50dbe4ae941ce7e73b4e3455f2de96dea983e",
        "filename": "src/hotspot/cpu/aarch64/assembler_aarch64.hpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fassembler_aarch64.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fassembler_aarch64.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fassembler_aarch64.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -476,16 +476,17 @@ class Address {\n           assert(size == 0, \"bad size\");\n           size = 0b100;\n         }\n+        assert(offset_ok_for_immed(_offset, size),\n+               \"must be, was: \" INT64_FORMAT \", %d\", _offset, size);\n         unsigned mask = (1 << size) - 1;\n-        if (_offset < 0 || _offset & mask)\n-          {\n-            i->f(0b00, 25, 24);\n-            i->f(0, 21), i->f(0b00, 11, 10);\n-            i->sf(_offset, 20, 12);\n-          } else {\n-            i->f(0b01, 25, 24);\n-            i->f(_offset >> size, 21, 10);\n-          }\n+        if (_offset < 0 || _offset & mask) {\n+          i->f(0b00, 25, 24);\n+          i->f(0, 21), i->f(0b00, 11, 10);\n+          i->sf(_offset, 20, 12);\n+        } else {\n+          i->f(0b01, 25, 24);\n+          i->f(_offset >> size, 21, 10);\n+        }\n       }\n       break;\n \n@@ -3254,6 +3255,7 @@ void mvnw(Register Rd, Register Rm,\n   static bool operand_valid_for_logical_immediate(bool is32, uint64_t imm);\n   static bool operand_valid_for_add_sub_immediate(int64_t imm);\n   static bool operand_valid_for_float_immediate(double imm);\n+  static int  operand_valid_for_movi_immediate(uint64_t imm64, SIMD_Arrangement T);\n \n   void emit_data64(jlong data, relocInfo::relocType rtype, int format = 0);\n   void emit_data64(jlong data, RelocationHolder const& rspec, int format = 0);"
      },
      {
        "sha": "e7efe472b829047a09ae79d63fc84a72ac76452c",
        "filename": "src/hotspot/cpu/aarch64/assembler_aarch64.inline.hpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fassembler_aarch64.inline.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fassembler_aarch64.inline.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fassembler_aarch64.inline.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -30,8 +30,14 @@\n #include \"asm/codeBuffer.hpp\"\n #include \"code/codeCache.hpp\"\n \n-\n+// Check if an offset is within the encoding range for LDR/STR instructions\n+// with an immediate offset, either using unscaled signed 9-bits or, scaled\n+// unsigned 12-bits. We favour the scaled unsigned encoding for all aligned\n+// offsets (only using the signed 9-bit encoding for negative and unaligned\n+// offsets). As a precondition, 0 <= shift <= 4 is the log2(size), for the\n+// supported data widths, {1, 2, 4, 8, 16} bytes.\n inline bool Address::offset_ok_for_immed(int64_t offset, uint shift) {\n+  precond(shift < 5);\n   uint mask = (1 << shift) - 1;\n   if (offset < 0 || (offset & mask) != 0) {\n     // Unscaled signed offset, encoded in a signed imm9 field."
      },
      {
        "sha": "5ce3ecf9e7ab64db9d75345fc81aaac6e57c84e2",
        "filename": "src/hotspot/cpu/aarch64/c1_LIRAssembler_aarch64.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_LIRAssembler_aarch64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_LIRAssembler_aarch64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_LIRAssembler_aarch64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -187,14 +187,13 @@ Address LIR_Assembler::as_Address(LIR_Address* addr, Register tmp) {\n       default:\n         ShouldNotReachHere();\n       }\n-  } else  {\n-    intptr_t addr_offset = intptr_t(addr->disp());\n-    if (Address::offset_ok_for_immed(addr_offset, addr->scale()))\n-      return Address(base, addr_offset, Address::lsl(addr->scale()));\n-    else {\n-      __ mov(tmp, addr_offset);\n-      return Address(base, tmp, Address::lsl(addr->scale()));\n-    }\n+  } else {\n+    assert(addr->scale() == 0,\n+           \"expected for immediate operand, was: %d\", addr->scale());\n+    ptrdiff_t offset = ptrdiff_t(addr->disp());\n+    // NOTE: Does not handle any 16 byte vector access.\n+    const uint type_size = type2aelembytes(addr->type(), true);\n+    return __ legitimize_address(Address(base, offset), type_size, tmp);\n   }\n   return Address();\n }\n@@ -283,10 +282,9 @@ void LIR_Assembler::osr_entry() {\n         __ bind(L);\n       }\n #endif\n-      __ ldr(r19, Address(OSR_buf, slot_offset + 0));\n+      __ ldp(r19, r20, Address(OSR_buf, slot_offset));\n       __ str(r19, frame_map()->address_for_monitor_lock(i));\n-      __ ldr(r19, Address(OSR_buf, slot_offset + 1*BytesPerWord));\n-      __ str(r19, frame_map()->address_for_monitor_object(i));\n+      __ str(r20, frame_map()->address_for_monitor_object(i));\n     }\n   }\n }"
      },
      {
        "sha": "d2cbdbdba26c74d1d3fa0a042ef0819113739495",
        "filename": "src/hotspot/cpu/aarch64/c1_LIRGenerator_aarch64.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 26,
        "changes": 35,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_LIRGenerator_aarch64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_LIRGenerator_aarch64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_LIRGenerator_aarch64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -148,7 +148,7 @@ LIR_Address* LIRGenerator::generate_address(LIR_Opr base, LIR_Opr index,\n   if (index->is_constant()) {\n     LIR_Const *constant = index->as_constant_ptr();\n     if (constant->type() == T_INT) {\n-      large_disp += index->as_jint() << shift;\n+      large_disp += ((intx)index->as_jint()) << shift;\n     } else {\n       assert(constant->type() == T_LONG, \"should be\");\n       jlong c = index->as_jlong() << shift;\n@@ -194,7 +194,7 @@ LIR_Address* LIRGenerator::generate_address(LIR_Opr base, LIR_Opr index,\n   if (large_disp == 0 && index->is_register()) {\n     return new LIR_Address(base, index, type);\n   } else {\n-    assert(Address::offset_ok_for_immed(large_disp, 0), \"must be\");\n+    assert(Address::offset_ok_for_immed(large_disp, shift), \"failed for large_disp: \" INTPTR_FORMAT \" and shift %d\", large_disp, shift);\n     return new LIR_Address(base, large_disp, type);\n   }\n }\n@@ -204,24 +204,7 @@ LIR_Address* LIRGenerator::emit_array_address(LIR_Opr array_opr, LIR_Opr index_o\n   int offset_in_bytes = arrayOopDesc::base_offset_in_bytes(type);\n   int elem_size = type2aelembytes(type);\n   int shift = exact_log2(elem_size);\n-\n-  LIR_Address* addr;\n-  if (index_opr->is_constant()) {\n-    addr = new LIR_Address(array_opr,\n-                           offset_in_bytes + (intx)(index_opr->as_jint()) * elem_size, type);\n-  } else {\n-    if (offset_in_bytes) {\n-      LIR_Opr tmp = new_pointer_register();\n-      __ add(array_opr, LIR_OprFact::intConst(offset_in_bytes), tmp);\n-      array_opr = tmp;\n-      offset_in_bytes = 0;\n-    }\n-    addr =  new LIR_Address(array_opr,\n-                            index_opr,\n-                            LIR_Address::scale(type),\n-                            offset_in_bytes, type);\n-  }\n-  return addr;\n+  return generate_address(array_opr, index_opr, shift, offset_in_bytes, type);\n }\n \n LIR_Opr LIRGenerator::load_immediate(int x, BasicType type) {\n@@ -1132,8 +1115,8 @@ void LIRGenerator::do_NewInstance(NewInstance* x) {\n   CodeEmitInfo* info = state_for(x, x->state());\n   LIR_Opr reg = result_register_for(x->type());\n   new_instance(reg, x->klass(), x->is_unresolved(),\n-                       FrameMap::r2_oop_opr,\n-                       FrameMap::r5_oop_opr,\n+                       FrameMap::r10_oop_opr,\n+                       FrameMap::r11_oop_opr,\n                        FrameMap::r4_oop_opr,\n                        LIR_OprFact::illegalOpr,\n                        FrameMap::r3_metadata_opr, info);\n@@ -1148,8 +1131,8 @@ void LIRGenerator::do_NewTypeArray(NewTypeArray* x) {\n   length.load_item_force(FrameMap::r19_opr);\n \n   LIR_Opr reg = result_register_for(x->type());\n-  LIR_Opr tmp1 = FrameMap::r2_oop_opr;\n-  LIR_Opr tmp2 = FrameMap::r4_oop_opr;\n+  LIR_Opr tmp1 = FrameMap::r10_oop_opr;\n+  LIR_Opr tmp2 = FrameMap::r11_oop_opr;\n   LIR_Opr tmp3 = FrameMap::r5_oop_opr;\n   LIR_Opr tmp4 = reg;\n   LIR_Opr klass_reg = FrameMap::r3_metadata_opr;\n@@ -1177,8 +1160,8 @@ void LIRGenerator::do_NewObjectArray(NewObjectArray* x) {\n   CodeEmitInfo* info = state_for(x, x->state());\n \n   LIR_Opr reg = result_register_for(x->type());\n-  LIR_Opr tmp1 = FrameMap::r2_oop_opr;\n-  LIR_Opr tmp2 = FrameMap::r4_oop_opr;\n+  LIR_Opr tmp1 = FrameMap::r10_oop_opr;\n+  LIR_Opr tmp2 = FrameMap::r11_oop_opr;\n   LIR_Opr tmp3 = FrameMap::r5_oop_opr;\n   LIR_Opr tmp4 = reg;\n   LIR_Opr klass_reg = FrameMap::r3_metadata_opr;"
      },
      {
        "sha": "3b17370304b954183d8e5150d075b100bb9f8aba",
        "filename": "src/hotspot/cpu/aarch64/c1_MacroAssembler_aarch64.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 46,
        "changes": 64,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_MacroAssembler_aarch64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_MacroAssembler_aarch64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_MacroAssembler_aarch64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,6 +1,6 @@\n /*\n  * Copyright (c) 1999, 2021, Oracle and/or its affiliates. All rights reserved.\n- * Copyright (c) 2014, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2014, 2021, Red Hat Inc. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -203,20 +203,24 @@ void C1_MacroAssembler::initialize_header(Register obj, Register klass, Register\n }\n \n // preserves obj, destroys len_in_bytes\n-void C1_MacroAssembler::initialize_body(Register obj, Register len_in_bytes, int hdr_size_in_bytes, Register t1) {\n+//\n+// Scratch registers: t1 = r10, t2 = r11\n+//\n+void C1_MacroAssembler::initialize_body(Register obj, Register len_in_bytes, int hdr_size_in_bytes, Register t1, Register t2) {\n   assert(hdr_size_in_bytes >= 0, \"header size must be positive or 0\");\n+  assert(t1 == r10 && t2 == r11, \"must be\");\n+\n   Label done;\n \n   // len_in_bytes is positive and ptr sized\n   subs(len_in_bytes, len_in_bytes, hdr_size_in_bytes);\n   br(Assembler::EQ, done);\n \n-  // Preserve obj\n-  if (hdr_size_in_bytes)\n-    add(obj, obj, hdr_size_in_bytes);\n-  zero_memory(obj, len_in_bytes, t1);\n-  if (hdr_size_in_bytes)\n-    sub(obj, obj, hdr_size_in_bytes);\n+  // zero_words() takes ptr in r10 and count in words in r11\n+  mov(rscratch1, len_in_bytes);\n+  lea(t1, Address(obj, hdr_size_in_bytes));\n+  lsr(t2, rscratch1, LogBytesPerWord);\n+  zero_words(t1, t2);\n \n   bind(done);\n }\n@@ -231,6 +235,7 @@ void C1_MacroAssembler::allocate_object(Register obj, Register t1, Register t2,\n   initialize_object(obj, klass, noreg, object_size * HeapWordSize, t1, t2, UseTLAB);\n }\n \n+// Scratch registers: t1 = r10, t2 = r11\n void C1_MacroAssembler::initialize_object(Register obj, Register klass, Register var_size_in_bytes, int con_size_in_bytes, Register t1, Register t2, bool is_tlab_allocated) {\n   assert((con_size_in_bytes & MinObjAlignmentInBytesMask) == 0,\n          \"con_size_in_bytes is not multiple of alignment\");\n@@ -241,45 +246,13 @@ void C1_MacroAssembler::initialize_object(Register obj, Register klass, Register\n   if (!(UseTLAB && ZeroTLAB && is_tlab_allocated)) {\n      // clear rest of allocated space\n      const Register index = t2;\n-     const int threshold = 16 * BytesPerWord;   // approximate break even point for code size (see comments below)\n      if (var_size_in_bytes != noreg) {\n        mov(index, var_size_in_bytes);\n-       initialize_body(obj, index, hdr_size_in_bytes, t1);\n-     } else if (con_size_in_bytes <= threshold) {\n-       // use explicit null stores\n-       int i = hdr_size_in_bytes;\n-       if (i < con_size_in_bytes && (con_size_in_bytes % (2 * BytesPerWord))) {\n-         str(zr, Address(obj, i));\n-         i += BytesPerWord;\n-       }\n-       for (; i < con_size_in_bytes; i += 2 * BytesPerWord)\n-         stp(zr, zr, Address(obj, i));\n+       initialize_body(obj, index, hdr_size_in_bytes, t1, t2);\n      } else if (con_size_in_bytes > hdr_size_in_bytes) {\n-       block_comment(\"zero memory\");\n-      // use loop to null out the fields\n-\n-       int words = (con_size_in_bytes - hdr_size_in_bytes) / BytesPerWord;\n-       mov(index,  words / 8);\n-\n-       const int unroll = 8; // Number of str(zr) instructions we'll unroll\n-       int remainder = words % unroll;\n-       lea(rscratch1, Address(obj, hdr_size_in_bytes + remainder * BytesPerWord));\n-\n-       Label entry_point, loop;\n-       b(entry_point);\n-\n-       bind(loop);\n-       sub(index, index, 1);\n-       for (int i = -unroll; i < 0; i++) {\n-         if (-i == remainder)\n-           bind(entry_point);\n-         str(zr, Address(rscratch1, i * wordSize));\n-       }\n-       if (remainder == 0)\n-         bind(entry_point);\n-       add(rscratch1, rscratch1, unroll * wordSize);\n-       cbnz(index, loop);\n-\n+       con_size_in_bytes -= hdr_size_in_bytes;\n+       lea(t1, Address(obj, hdr_size_in_bytes));\n+       zero_words(t1, con_size_in_bytes / BytesPerWord);\n      }\n   }\n \n@@ -314,8 +287,7 @@ void C1_MacroAssembler::allocate_array(Register obj, Register len, Register t1,\n   initialize_header(obj, klass, len, t1, t2);\n \n   // clear rest of allocated space\n-  const Register len_zero = len;\n-  initialize_body(obj, arr_size, header_size * BytesPerWord, len_zero);\n+  initialize_body(obj, arr_size, header_size * BytesPerWord, t1, t2);\n \n   membar(StoreStore);\n "
      },
      {
        "sha": "e10968240db338d8c4aa418b842a57337fa8cfed",
        "filename": "src/hotspot/cpu/aarch64/c1_MacroAssembler_aarch64.hpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_MacroAssembler_aarch64.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_MacroAssembler_aarch64.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_MacroAssembler_aarch64.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,6 +1,6 @@\n /*\n- * Copyright (c) 1999, 2019, Oracle and/or its affiliates. All rights reserved.\n- * Copyright (c) 2014, 2015, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Red Hat Inc. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -48,7 +48,7 @@ using MacroAssembler::null_check;\n   );\n \n   void initialize_header(Register obj, Register klass, Register len, Register t1, Register t2);\n-  void initialize_body(Register obj, Register len_in_bytes, int hdr_size_in_bytes, Register t1);\n+  void initialize_body(Register obj, Register len_in_bytes, int hdr_size_in_bytes, Register t1, Register t2);\n \n   void float_cmp(bool is_float, int unordered_result,\n                  FloatRegister f0, FloatRegister f1,"
      },
      {
        "sha": "e02989c1e9f8d03eadbbe3a0dd41333993c063fc",
        "filename": "src/hotspot/cpu/aarch64/c1_Runtime1_aarch64.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_Runtime1_aarch64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_Runtime1_aarch64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fc1_Runtime1_aarch64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,6 +1,6 @@\n /*\n  * Copyright (c) 1999, 2021, Oracle and/or its affiliates. All rights reserved.\n- * Copyright (c) 2014, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2014, 2021, Red Hat Inc. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -656,9 +656,9 @@ OopMapSet* Runtime1::generate_code_for(StubID id, StubAssembler* sasm) {\n         if ((id == fast_new_instance_id || id == fast_new_instance_init_check_id) &&\n             !UseTLAB && Universe::heap()->supports_inline_contig_alloc()) {\n           Label slow_path;\n-          Register obj_size = r2;\n-          Register t1       = r19;\n-          Register t2       = r4;\n+          Register obj_size = r19;\n+          Register t1       = r10;\n+          Register t2       = r11;\n           assert_different_registers(klass, obj, obj_size, t1, t2);\n \n           __ stp(r19, zr, Address(__ pre(sp, -2 * wordSize)));\n@@ -769,9 +769,9 @@ OopMapSet* Runtime1::generate_code_for(StubID id, StubAssembler* sasm) {\n         // allocations.\n         // Otherwise, just go to the slow path.\n         if (!UseTLAB && Universe::heap()->supports_inline_contig_alloc()) {\n-          Register arr_size = r4;\n-          Register t1       = r2;\n-          Register t2       = r5;\n+          Register arr_size = r5;\n+          Register t1       = r10;\n+          Register t2       = r11;\n           Label slow_path;\n           assert_different_registers(length, klass, obj, arr_size, t1, t2);\n \n@@ -801,7 +801,7 @@ OopMapSet* Runtime1::generate_code_for(StubID id, StubAssembler* sasm) {\n           __ andr(t1, t1, Klass::_lh_header_size_mask);\n           __ sub(arr_size, arr_size, t1);  // body length\n           __ add(t1, t1, obj);       // body start\n-          __ initialize_body(t1, arr_size, 0, t2);\n+          __ initialize_body(t1, arr_size, 0, t1, t2);\n           __ membar(Assembler::StoreStore);\n           __ verify_oop(obj);\n "
      },
      {
        "sha": "fefc2e5c3d3cb40c81cdefe32d30312f2e99c449",
        "filename": "src/hotspot/cpu/aarch64/globals_aarch64.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fglobals_aarch64.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fglobals_aarch64.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fglobals_aarch64.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -106,7 +106,7 @@ define_pd_global(intx, InlineSmallCode,          1000);\n           \"Use DC ZVA for block zeroing\")                               \\\n   product(intx, BlockZeroingLowLimit, 256,                              \\\n           \"Minimum size in bytes when block zeroing will be used\")      \\\n-          range(1, max_jint)                                            \\\n+          range(wordSize, max_jint)                                     \\\n   product(bool, TraceTraps, false, \"Trace all traps the signal handler\")\\\n   product(int, SoftwarePrefetchHintDistance, -1,                        \\\n           \"Use prfm hint with specified distance in compiled code.\"     \\"
      },
      {
        "sha": "7d0483fb35c0df3654ad4bc267022036d2c5a0f7",
        "filename": "src/hotspot/cpu/aarch64/icBuffer_aarch64.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2FicBuffer_aarch64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2FicBuffer_aarch64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2FicBuffer_aarch64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -52,9 +52,15 @@ void InlineCacheBuffer::assemble_ic_buffer_code(address code_begin, void* cached\n   address start = __ pc();\n   Label l;\n   __ ldr(rscratch2, l);\n-  __ far_jump(ExternalAddress(entry_point));\n-  __ align(wordSize);\n+  int jump_code_size = __ far_jump(ExternalAddress(entry_point));\n+  // IC stub code size is not expected to vary depending on target address.\n+  // We use NOPs to make the [ldr + far_jump + nops + int64] stub size equal to ic_stub_code_size.\n+  for (int size = NativeInstruction::instruction_size + jump_code_size + 8;\n+           size < ic_stub_code_size(); size += NativeInstruction::instruction_size) {\n+    __ nop();\n+  }\n   __ bind(l);\n+  assert((uintptr_t)__ pc() % wordSize == 0, \"\");\n   __ emit_int64((int64_t)cached_value);\n   // Only need to invalidate the 1st two instructions - not the whole ic stub\n   ICache::invalidate_range(code_begin, InlineCacheBuffer::ic_stub_code_size());"
      },
      {
        "sha": "676a548d0399aadf0e81b99f4d4151362f1a0103",
        "filename": "src/hotspot/cpu/aarch64/macroAssembler_aarch64.cpp",
        "status": "modified",
        "additions": 123,
        "deletions": 146,
        "changes": 269,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2FmacroAssembler_aarch64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2FmacroAssembler_aarch64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2FmacroAssembler_aarch64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -29,6 +29,7 @@\n #include \"jvm.h\"\n #include \"asm/assembler.hpp\"\n #include \"asm/assembler.inline.hpp\"\n+#include \"ci/ciEnv.hpp\"\n #include \"gc/shared/barrierSet.hpp\"\n #include \"gc/shared/barrierSetAssembler.hpp\"\n #include \"gc/shared/cardTableBarrierSet.hpp\"\n@@ -37,6 +38,7 @@\n #include \"gc/shared/tlab_globals.hpp\"\n #include \"interpreter/bytecodeHistogram.hpp\"\n #include \"interpreter/interpreter.hpp\"\n+#include \"compiler/compileTask.hpp\"\n #include \"compiler/disassembler.hpp\"\n #include \"memory/resourceArea.hpp\"\n #include \"memory/universe.hpp\"\n@@ -382,14 +384,27 @@ void MacroAssembler::set_last_Java_frame(Register last_java_sp,\n   }\n }\n \n+static inline bool target_needs_far_branch(address addr) {\n+  // codecache size <= 128M\n+  if (!MacroAssembler::far_branches()) {\n+    return false;\n+  }\n+  // codecache size > 240M\n+  if (MacroAssembler::codestub_branch_needs_far_jump()) {\n+    return true;\n+  }\n+  // codecache size: 128M..240M\n+  return !CodeCache::is_non_nmethod(addr);\n+}\n+\n void MacroAssembler::far_call(Address entry, CodeBuffer *cbuf, Register tmp) {\n   assert(ReservedCodeCacheSize < 4*G, \"branch out of range\");\n   assert(CodeCache::find_blob(entry.target()) != NULL,\n          \"destination of far call not found in code cache\");\n-  if (far_branches()) {\n+  if (target_needs_far_branch(entry.target())) {\n     uint64_t offset;\n     // We can use ADRP here because we know that the total size of\n-    // the code cache cannot exceed 2Gb.\n+    // the code cache cannot exceed 2Gb (ADRP limit is 4GB).\n     adrp(tmp, entry, offset);\n     add(tmp, tmp, offset);\n     if (cbuf) cbuf->set_insts_mark();\n@@ -400,14 +415,15 @@ void MacroAssembler::far_call(Address entry, CodeBuffer *cbuf, Register tmp) {\n   }\n }\n \n-void MacroAssembler::far_jump(Address entry, CodeBuffer *cbuf, Register tmp) {\n+int MacroAssembler::far_jump(Address entry, CodeBuffer *cbuf, Register tmp) {\n   assert(ReservedCodeCacheSize < 4*G, \"branch out of range\");\n   assert(CodeCache::find_blob(entry.target()) != NULL,\n          \"destination of far call not found in code cache\");\n-  if (far_branches()) {\n+  address start = pc();\n+  if (target_needs_far_branch(entry.target())) {\n     uint64_t offset;\n     // We can use ADRP here because we know that the total size of\n-    // the code cache cannot exceed 2Gb.\n+    // the code cache cannot exceed 2Gb (ADRP limit is 4GB).\n     adrp(tmp, entry, offset);\n     add(tmp, tmp, offset);\n     if (cbuf) cbuf->set_insts_mark();\n@@ -416,6 +432,7 @@ void MacroAssembler::far_jump(Address entry, CodeBuffer *cbuf, Register tmp) {\n     if (cbuf) cbuf->set_insts_mark();\n     b(entry);\n   }\n+  return pc() - start;\n }\n \n void MacroAssembler::reserved_stack_check() {\n@@ -1229,7 +1246,7 @@ void MacroAssembler::check_klass_subtype_slow_path(Register sub_klass,\n   if (!IS_A_TEMP(r2))    pushed_registers += r2;\n   if (!IS_A_TEMP(r5))    pushed_registers += r5;\n \n-  if (super_klass != r0 || UseCompressedOops) {\n+  if (super_klass != r0) {\n     if (!IS_A_TEMP(r0))   pushed_registers += r0;\n   }\n \n@@ -1509,48 +1526,43 @@ void MacroAssembler::movptr(Register r, uintptr_t imm64) {\n }\n \n // Macro to mov replicated immediate to vector register.\n-//  Vd will get the following values for different arrangements in T\n-//   imm32 == hex 000000gh  T8B:  Vd = ghghghghghghghgh\n-//   imm32 == hex 000000gh  T16B: Vd = ghghghghghghghghghghghghghghghgh\n-//   imm32 == hex 0000efgh  T4H:  Vd = efghefghefghefgh\n-//   imm32 == hex 0000efgh  T8H:  Vd = efghefghefghefghefghefghefghefgh\n-//   imm32 == hex abcdefgh  T2S:  Vd = abcdefghabcdefgh\n-//   imm32 == hex abcdefgh  T4S:  Vd = abcdefghabcdefghabcdefghabcdefgh\n-//   T1D/T2D: invalid\n-void MacroAssembler::mov(FloatRegister Vd, SIMD_Arrangement T, uint32_t imm32) {\n-  assert(T != T1D && T != T2D, \"invalid arrangement\");\n-  if (T == T8B || T == T16B) {\n-    assert((imm32 & ~0xff) == 0, \"extraneous bits in unsigned imm32 (T8B/T16B)\");\n-    movi(Vd, T, imm32 & 0xff, 0);\n+// imm64: only the lower 8/16/32 bits are considered for B/H/S type. That is,\n+//        the upper 56/48/32 bits must be zeros for B/H/S type.\n+// Vd will get the following values for different arrangements in T\n+//   imm64 == hex 000000gh  T8B:  Vd = ghghghghghghghgh\n+//   imm64 == hex 000000gh  T16B: Vd = ghghghghghghghghghghghghghghghgh\n+//   imm64 == hex 0000efgh  T4H:  Vd = efghefghefghefgh\n+//   imm64 == hex 0000efgh  T8H:  Vd = efghefghefghefghefghefghefghefgh\n+//   imm64 == hex abcdefgh  T2S:  Vd = abcdefghabcdefgh\n+//   imm64 == hex abcdefgh  T4S:  Vd = abcdefghabcdefghabcdefghabcdefgh\n+//   imm64 == hex abcdefgh  T1D:  Vd = 00000000abcdefgh\n+//   imm64 == hex abcdefgh  T2D:  Vd = 00000000abcdefgh00000000abcdefgh\n+// Clobbers rscratch1\n+void MacroAssembler::mov(FloatRegister Vd, SIMD_Arrangement T, uint64_t imm64) {\n+  assert(T != T1Q, \"unsupported\");\n+  if (T == T1D || T == T2D) {\n+    int imm = operand_valid_for_movi_immediate(imm64, T);\n+    if (-1 != imm) {\n+      movi(Vd, T, imm);\n+    } else {\n+      mov(rscratch1, imm64);\n+      dup(Vd, T, rscratch1);\n+    }\n     return;\n   }\n-  uint32_t nimm32 = ~imm32;\n-  if (T == T4H || T == T8H) {\n-    assert((imm32  & ~0xffff) == 0, \"extraneous bits in unsigned imm32 (T4H/T8H)\");\n-    imm32 &= 0xffff;\n-    nimm32 &= 0xffff;\n-  }\n-  uint32_t x = imm32;\n-  int movi_cnt = 0;\n-  int movn_cnt = 0;\n-  while (x) { if (x & 0xff) movi_cnt++; x >>= 8; }\n-  x = nimm32;\n-  while (x) { if (x & 0xff) movn_cnt++; x >>= 8; }\n-  if (movn_cnt < movi_cnt) imm32 = nimm32;\n-  unsigned lsl = 0;\n-  while (imm32 && (imm32 & 0xff) == 0) { lsl += 8; imm32 >>= 8; }\n-  if (movn_cnt < movi_cnt)\n-    mvni(Vd, T, imm32 & 0xff, lsl);\n-  else\n-    movi(Vd, T, imm32 & 0xff, lsl);\n-  imm32 >>= 8; lsl += 8;\n-  while (imm32) {\n-    while ((imm32 & 0xff) == 0) { lsl += 8; imm32 >>= 8; }\n-    if (movn_cnt < movi_cnt)\n-      bici(Vd, T, imm32 & 0xff, lsl);\n-    else\n-      orri(Vd, T, imm32 & 0xff, lsl);\n-    lsl += 8; imm32 >>= 8;\n+\n+#ifdef ASSERT\n+  if (T == T8B || T == T16B) assert((imm64 & ~0xff) == 0, \"extraneous bits (T8B/T16B)\");\n+  if (T == T4H || T == T8H) assert((imm64  & ~0xffff) == 0, \"extraneous bits (T4H/T8H)\");\n+  if (T == T2S || T == T4S) assert((imm64  & ~0xffffffff) == 0, \"extraneous bits (T2S/T4S)\");\n+#endif\n+  int shift = operand_valid_for_movi_immediate(imm64, T);\n+  uint32_t imm32 = imm64 & 0xffffffffULL;\n+  if (shift >= 0) {\n+    movi(Vd, T, (imm32 >> shift) & 0xff, shift);\n+  } else {\n+    movw(rscratch1, imm32);\n+    dup(Vd, T, rscratch1);\n   }\n }\n \n@@ -4283,68 +4295,6 @@ void MacroAssembler::eden_allocate(Register obj,\n   bs->eden_allocate(this, obj, var_size_in_bytes, con_size_in_bytes, t1, slow_case);\n }\n \n-// Zero words; len is in bytes\n-// Destroys all registers except addr\n-// len must be a nonzero multiple of wordSize\n-void MacroAssembler::zero_memory(Register addr, Register len, Register t1) {\n-  assert_different_registers(addr, len, t1, rscratch1, rscratch2);\n-\n-#ifdef ASSERT\n-  { Label L;\n-    tst(len, BytesPerWord - 1);\n-    br(Assembler::EQ, L);\n-    stop(\"len is not a multiple of BytesPerWord\");\n-    bind(L);\n-  }\n-#endif\n-\n-#ifndef PRODUCT\n-  block_comment(\"zero memory\");\n-#endif\n-\n-  Label loop;\n-  Label entry;\n-\n-//  Algorithm:\n-//\n-//    scratch1 = cnt & 7;\n-//    cnt -= scratch1;\n-//    p += scratch1;\n-//    switch (scratch1) {\n-//      do {\n-//        cnt -= 8;\n-//          p[-8] = 0;\n-//        case 7:\n-//          p[-7] = 0;\n-//        case 6:\n-//          p[-6] = 0;\n-//          // ...\n-//        case 1:\n-//          p[-1] = 0;\n-//        case 0:\n-//          p += 8;\n-//      } while (cnt);\n-//    }\n-\n-  const int unroll = 8; // Number of str(zr) instructions we'll unroll\n-\n-  lsr(len, len, LogBytesPerWord);\n-  andr(rscratch1, len, unroll - 1);  // tmp1 = cnt % unroll\n-  sub(len, len, rscratch1);      // cnt -= unroll\n-  // t1 always points to the end of the region we're about to zero\n-  add(t1, addr, rscratch1, Assembler::LSL, LogBytesPerWord);\n-  adr(rscratch2, entry);\n-  sub(rscratch2, rscratch2, rscratch1, Assembler::LSL, 2);\n-  br(rscratch2);\n-  bind(loop);\n-  sub(len, len, unroll);\n-  for (int i = -unroll; i < 0; i++)\n-    Assembler::str(zr, Address(t1, i * wordSize));\n-  bind(entry);\n-  add(t1, t1, unroll * wordSize);\n-  cbnz(len, loop);\n-}\n-\n void MacroAssembler::verify_tlab() {\n #ifdef ASSERT\n   if (UseTLAB && VerifyOops) {\n@@ -4863,10 +4813,11 @@ void MacroAssembler::string_equals(Register a1, Register a2,\n // handle anything smaller than this ourselves in zero_words().\n const int MacroAssembler::zero_words_block_size = 8;\n \n-// zero_words() is used by C2 ClearArray patterns.  It is as small as\n-// possible, handling small word counts locally and delegating\n-// anything larger to the zero_blocks stub.  It is expanded many times\n-// in compiled code, so it is important to keep it short.\n+// zero_words() is used by C2 ClearArray patterns and by\n+// C1_MacroAssembler.  It is as small as possible, handling small word\n+// counts locally and delegating anything larger to the zero_blocks\n+// stub.  It is expanded many times in compiled code, so it is\n+// important to keep it short.\n \n // ptr:   Address of a buffer to be zeroed.\n // cnt:   Count in HeapWords.\n@@ -4875,32 +4826,45 @@ const int MacroAssembler::zero_words_block_size = 8;\n address MacroAssembler::zero_words(Register ptr, Register cnt)\n {\n   assert(is_power_of_2(zero_words_block_size), \"adjust this\");\n-  assert(ptr == r10 && cnt == r11, \"mismatch in register usage\");\n \n   BLOCK_COMMENT(\"zero_words {\");\n-  cmp(cnt, (u1)zero_words_block_size);\n+  assert(ptr == r10 && cnt == r11, \"mismatch in register usage\");\n+  RuntimeAddress zero_blocks = RuntimeAddress(StubRoutines::aarch64::zero_blocks());\n+  assert(zero_blocks.target() != NULL, \"zero_blocks stub has not been generated\");\n+\n+  subs(rscratch1, cnt, zero_words_block_size);\n   Label around;\n   br(LO, around);\n   {\n     RuntimeAddress zero_blocks = RuntimeAddress(StubRoutines::aarch64::zero_blocks());\n     assert(zero_blocks.target() != NULL, \"zero_blocks stub has not been generated\");\n-    if (StubRoutines::aarch64::complete()) {\n+    // Make sure this is a C2 compilation. C1 allocates space only for\n+    // trampoline stubs generated by Call LIR ops, and in any case it\n+    // makes sense for a C1 compilation task to proceed as quickly as\n+    // possible.\n+    CompileTask* task;\n+    if (StubRoutines::aarch64::complete()\n+        && Thread::current()->is_Compiler_thread()\n+        && (task = ciEnv::current()->task())\n+        && is_c2_compile(task->comp_level())) {\n       address tpc = trampoline_call(zero_blocks);\n       if (tpc == NULL) {\n         DEBUG_ONLY(reset_labels(around));\n-        postcond(pc() == badAddress);\n         return NULL;\n       }\n     } else {\n-      bl(zero_blocks);\n+      far_call(zero_blocks);\n     }\n   }\n   bind(around);\n+\n+  // We have a few words left to do. zero_blocks has adjusted r10 and r11\n+  // for us.\n   for (int i = zero_words_block_size >> 1; i > 1; i >>= 1) {\n     Label l;\n     tbz(cnt, exact_log2(i), l);\n     for (int j = 0; j < i; j += 2) {\n-      stp(zr, zr, post(ptr, 16));\n+      stp(zr, zr, post(ptr, 2 * BytesPerWord));\n     }\n     bind(l);\n   }\n@@ -4910,46 +4874,59 @@ address MacroAssembler::zero_words(Register ptr, Register cnt)\n     str(zr, Address(ptr));\n     bind(l);\n   }\n+\n   BLOCK_COMMENT(\"} zero_words\");\n-  postcond(pc() != badAddress);\n   return pc();\n }\n \n // base:         Address of a buffer to be zeroed, 8 bytes aligned.\n // cnt:          Immediate count in HeapWords.\n-#define SmallArraySize (18 * BytesPerLong)\n-void MacroAssembler::zero_words(Register base, uint64_t cnt)\n+//\n+// r10, r11, rscratch1, and rscratch2 are clobbered.\n+address MacroAssembler::zero_words(Register base, uint64_t cnt)\n {\n-  BLOCK_COMMENT(\"zero_words {\");\n-  int i = cnt & 1;  // store any odd word to start\n-  if (i) str(zr, Address(base));\n-\n-  if (cnt <= SmallArraySize / BytesPerLong) {\n+  assert(wordSize <= BlockZeroingLowLimit,\n+            \"increase BlockZeroingLowLimit\");\n+  address result = nullptr;\n+  if (cnt <= (uint64_t)BlockZeroingLowLimit / BytesPerWord) {\n+#ifndef PRODUCT\n+    {\n+      char buf[64];\n+      snprintf(buf, sizeof buf, \"zero_words (count = %\" PRIu64 \") {\", cnt);\n+      BLOCK_COMMENT(buf);\n+    }\n+#endif\n+    if (cnt >= 16) {\n+      uint64_t loops = cnt/16;\n+      if (loops > 1) {\n+        mov(rscratch2, loops - 1);\n+      }\n+      {\n+        Label loop;\n+        bind(loop);\n+        for (int i = 0; i < 16; i += 2) {\n+          stp(zr, zr, Address(base, i * BytesPerWord));\n+        }\n+        add(base, base, 16 * BytesPerWord);\n+        if (loops > 1) {\n+          subs(rscratch2, rscratch2, 1);\n+          br(GE, loop);\n+        }\n+      }\n+    }\n+    cnt %= 16;\n+    int i = cnt & 1;  // store any odd word to start\n+    if (i) str(zr, Address(base));\n     for (; i < (int)cnt; i += 2) {\n       stp(zr, zr, Address(base, i * wordSize));\n     }\n+    BLOCK_COMMENT(\"} zero_words\");\n+    result = pc();\n   } else {\n-    const int unroll = 4; // Number of stp(zr, zr) instructions we'll unroll\n-    int remainder = cnt % (2 * unroll);\n-    for (; i < remainder; i += 2) {\n-      stp(zr, zr, Address(base, i * wordSize));\n-    }\n-    Label loop;\n-    Register cnt_reg = rscratch1;\n-    Register loop_base = rscratch2;\n-    cnt = cnt - remainder;\n-    mov(cnt_reg, cnt);\n-    // adjust base and prebias by -2 * wordSize so we can pre-increment\n-    add(loop_base, base, (remainder - 2) * wordSize);\n-    bind(loop);\n-    sub(cnt_reg, cnt_reg, 2 * unroll);\n-    for (i = 1; i < unroll; i++) {\n-      stp(zr, zr, Address(loop_base, 2 * i * wordSize));\n-    }\n-    stp(zr, zr, Address(pre(loop_base, 2 * unroll * wordSize)));\n-    cbnz(cnt_reg, loop);\n+    mov(r10, base); mov(r11, cnt);\n+    result = zero_words(r10, r11);\n   }\n-  BLOCK_COMMENT(\"} zero_words\");\n+  return result;\n }\n \n // Zero blocks of memory by using DC ZVA."
      },
      {
        "sha": "e403289e22f4e38c9347c48f1abd4f907aedab92",
        "filename": "src/hotspot/cpu/aarch64/macroAssembler_aarch64.hpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2FmacroAssembler_aarch64.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2FmacroAssembler_aarch64.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2FmacroAssembler_aarch64.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -525,7 +525,7 @@ class MacroAssembler: public Assembler {\n \n   void movptr(Register r, uintptr_t imm64);\n \n-  void mov(FloatRegister Vd, SIMD_Arrangement T, uint32_t imm32);\n+  void mov(FloatRegister Vd, SIMD_Arrangement T, uint64_t imm64);\n \n   void mov(FloatRegister Vd, SIMD_Arrangement T, FloatRegister Vn) {\n     orr(Vd, T, Vn, Vn);\n@@ -907,7 +907,6 @@ class MacroAssembler: public Assembler {\n     Register t2,                       // temp register\n     Label&   slow_case                 // continuation point if fast allocation fails\n   );\n-  void zero_memory(Register addr, Register len, Register t1);\n   void verify_tlab();\n \n   // interface method calling\n@@ -1087,13 +1086,18 @@ class MacroAssembler: public Assembler {\n     return ReservedCodeCacheSize > branch_range;\n   }\n \n+  // Check if branches to the the non nmethod section require a far jump\n+  static bool codestub_branch_needs_far_jump() {\n+    return CodeCache::max_distance_to_non_nmethod() > branch_range;\n+  }\n+\n   // Jumps that can reach anywhere in the code cache.\n   // Trashes tmp.\n   void far_call(Address entry, CodeBuffer *cbuf = NULL, Register tmp = rscratch1);\n-  void far_jump(Address entry, CodeBuffer *cbuf = NULL, Register tmp = rscratch1);\n+  int far_jump(Address entry, CodeBuffer *cbuf = NULL, Register tmp = rscratch1);\n \n-  static int far_branch_size() {\n-    if (far_branches()) {\n+  static int far_codestub_branch_size() {\n+    if (codestub_branch_needs_far_jump()) {\n       return 3 * 4;  // adrp, add, br\n     } else {\n       return 4;\n@@ -1258,7 +1262,7 @@ class MacroAssembler: public Assembler {\n                      int elem_size);\n \n   void fill_words(Register base, Register cnt, Register value);\n-  void zero_words(Register base, uint64_t cnt);\n+  address zero_words(Register base, uint64_t cnt);\n   address zero_words(Register ptr, Register cnt);\n   void zero_dcache_blocks(Register base, Register cnt);\n "
      },
      {
        "sha": "8c3e165ab8effe111948b21c3f5141f0db04e681",
        "filename": "src/hotspot/cpu/aarch64/stubGenerator_aarch64.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2FstubGenerator_aarch64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2FstubGenerator_aarch64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2FstubGenerator_aarch64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -4752,7 +4752,7 @@ class StubGenerator: public StubCodeGenerator {\n \n     __ enter();\n \n-  Label RET_TRUE, RET_TRUE_NO_POP, RET_FALSE, ALIGNED, LOOP16, CHECK_16, DONE,\n+  Label RET_TRUE, RET_TRUE_NO_POP, RET_FALSE, ALIGNED, LOOP16, CHECK_16,\n         LARGE_LOOP, POST_LOOP16, LEN_OVER_15, LEN_OVER_8, POST_LOOP16_LOAD_TAIL;\n \n   __ cmp(len, (u1)15);\n@@ -4894,10 +4894,6 @@ class StubGenerator: public StubCodeGenerator {\n     __ mov(result, 1);\n     __ ret(lr);\n \n-  __ bind(DONE);\n-    __ pop(spilled_regs, sp);\n-    __ leave();\n-    __ ret(lr);\n     return entry;\n   }\n \n@@ -6129,6 +6125,7 @@ class StubGenerator: public StubCodeGenerator {\n    *  c_rarg3   - dest_start\n    *  c_rarg4   - dest_offset\n    *  c_rarg5   - isURL\n+   *  c_rarg6   - isMIME\n    *\n    */\n   address generate_base64_decodeBlock() {\n@@ -6211,12 +6208,13 @@ class StubGenerator: public StubCodeGenerator {\n     StubCodeMark mark(this, \"StubRoutines\", \"decodeBlock\");\n     address start = __ pc();\n \n-    Register src   = c_rarg0;  // source array\n-    Register soff  = c_rarg1;  // source start offset\n-    Register send  = c_rarg2;  // source end offset\n-    Register dst   = c_rarg3;  // dest array\n-    Register doff  = c_rarg4;  // position for writing to dest array\n-    Register isURL = c_rarg5;  // Base64 or URL character set\n+    Register src    = c_rarg0;  // source array\n+    Register soff   = c_rarg1;  // source start offset\n+    Register send   = c_rarg2;  // source end offset\n+    Register dst    = c_rarg3;  // dest array\n+    Register doff   = c_rarg4;  // position for writing to dest array\n+    Register isURL  = c_rarg5;  // Base64 or URL character set\n+    Register isMIME = c_rarg6;  // Decoding MIME block - unused in this implementation\n \n     Register length = send;    // reuse send as length of source data to process\n "
      },
      {
        "sha": "f655ef8d1b31d9f6bf68f785c4b948cc9ad859fd",
        "filename": "src/hotspot/cpu/aarch64/vm_version_aarch64.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fvm_version_aarch64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Faarch64%2Fvm_version_aarch64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Faarch64%2Fvm_version_aarch64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -266,7 +266,7 @@ void VM_Version::initialize() {\n       UseAES = true;\n     }\n     if (FLAG_IS_DEFAULT(UseAESCTRIntrinsics)) {\n-      FLAG_SET_DEFAULT(UseAESCTRIntrinsics, false);\n+      FLAG_SET_DEFAULT(UseAESCTRIntrinsics, true);\n     }\n   } else {\n     if (UseAES) {"
      },
      {
        "sha": "1c21f835f7568429f684ee2ad24e69d14bdd7d47",
        "filename": "src/hotspot/cpu/arm/c1_LIRAssembler_arm.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Farm%2Fc1_LIRAssembler_arm.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Farm%2Fc1_LIRAssembler_arm.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Farm%2Fc1_LIRAssembler_arm.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1483,6 +1483,9 @@ void LIR_Assembler::cmove(LIR_Condition condition, LIR_Opr opr1, LIR_Opr opr2, L\n           __ mov_double(result->as_double_reg(), c->as_jdouble(), acond);\n #endif // __SOFTFP__\n           break;\n+        case T_METADATA:\n+          __ mov_metadata(result->as_register(), c->as_metadata(), acond);\n+          break;\n         default:\n           ShouldNotReachHere();\n       }"
      },
      {
        "sha": "a202a7f09490b6a3dddf009753186477f2f1d3dc",
        "filename": "src/hotspot/cpu/arm/stubGenerator_arm.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Farm%2FstubGenerator_arm.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Farm%2FstubGenerator_arm.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Farm%2FstubGenerator_arm.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -635,17 +635,17 @@ class StubGenerator: public StubCodeGenerator {\n     Register result_hi = R1;\n     Register src       = R0;\n \n-    if (!os::is_MP()) {\n-      __ ldmia(src, RegisterSet(result_lo, result_hi));\n-      __ bx(LR);\n-    } else if (VM_Version::supports_ldrexd()) {\n+    if (VM_Version::supports_ldrexd()) {\n       __ ldrexd(result_lo, Address(src));\n       __ clrex(); // FIXME: safe to remove?\n-      __ bx(LR);\n+    } else if (!os::is_MP()) {\n+      // Last-ditch attempt: we are allegedly running on uni-processor.\n+      // Load the thing non-atomically and hope for the best.\n+      __ ldmia(src, RegisterSet(result_lo, result_hi));\n     } else {\n       __ stop(\"Atomic load(jlong) unsupported on this platform\");\n-      __ bx(LR);\n     }\n+    __ bx(LR);\n \n     return start;\n   }\n@@ -662,22 +662,22 @@ class StubGenerator: public StubCodeGenerator {\n     Register scratch_hi    = R3;  /* After load from stack */\n     Register result    = R3;\n \n-    if (!os::is_MP()) {\n-      __ stmia(dest, RegisterSet(newval_lo, newval_hi));\n-      __ bx(LR);\n-    } else if (VM_Version::supports_ldrexd()) {\n+    if (VM_Version::supports_ldrexd()) {\n       __ mov(Rtemp, dest);  // get dest to Rtemp\n       Label retry;\n       __ bind(retry);\n       __ ldrexd(scratch_lo, Address(Rtemp));\n       __ strexd(result, R0, Address(Rtemp));\n       __ rsbs(result, result, 1);\n       __ b(retry, eq);\n-      __ bx(LR);\n+    } else if (!os::is_MP()) {\n+      // Last-ditch attempt: we are allegedly running on uni-processor.\n+      // Store the thing non-atomically and hope for the best.\n+      __ stmia(dest, RegisterSet(newval_lo, newval_hi));\n     } else {\n       __ stop(\"Atomic store(jlong) unsupported on this platform\");\n-      __ bx(LR);\n     }\n+    __ bx(LR);\n \n     return start;\n   }"
      },
      {
        "sha": "1e3d12e219c1f95941962d4a85ae7800aa8df17b",
        "filename": "src/hotspot/cpu/arm/templateTable_arm.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Farm%2FtemplateTable_arm.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Farm%2FtemplateTable_arm.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Farm%2FtemplateTable_arm.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -490,29 +490,30 @@ void TemplateTable::ldc2_w() {\n   __ add(Rtemp, Rtags, tags_offset);\n   __ ldrb(Rtemp, Address(Rtemp, Rindex));\n \n-  Label Condy, exit;\n-#ifdef __ABI_HARD__\n-  Label NotDouble;\n+  Label Done, NotLong, NotDouble;\n   __ cmp(Rtemp, JVM_CONSTANT_Double);\n   __ b(NotDouble, ne);\n+#ifdef __SOFTFP__\n+  __ ldr(R0_tos_lo, Address(Rbase, base_offset + 0 * wordSize));\n+  __ ldr(R1_tos_hi, Address(Rbase, base_offset + 1 * wordSize));\n+#else // !__SOFTFP__\n   __ ldr_double(D0_tos, Address(Rbase, base_offset));\n-\n+#endif // __SOFTFP__\n   __ push(dtos);\n-  __ b(exit);\n+  __ b(Done);\n   __ bind(NotDouble);\n-#endif\n \n   __ cmp(Rtemp, JVM_CONSTANT_Long);\n-  __ b(Condy, ne);\n+  __ b(NotLong, ne);\n   __ ldr(R0_tos_lo, Address(Rbase, base_offset + 0 * wordSize));\n   __ ldr(R1_tos_hi, Address(Rbase, base_offset + 1 * wordSize));\n   __ push(ltos);\n-  __ b(exit);\n+  __ b(Done);\n+  __ bind(NotLong);\n \n-  __ bind(Condy);\n-  condy_helper(exit);\n+  condy_helper(Done);\n \n-  __ bind(exit);\n+  __ bind(Done);\n }\n \n "
      },
      {
        "sha": "1b6c9c6ba963196b14edd79112119989062524eb",
        "filename": "src/hotspot/cpu/ppc/ppc.ad",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fppc%2Fppc.ad",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fppc%2Fppc.ad",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fppc%2Fppc.ad?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -6834,6 +6834,9 @@ instruct decodeN_Disjoint_notNull_Ex(iRegPdst dst, iRegNsrc src) %{\n     n2->_opnds[2] = op_dst;\n     n2->_bottom_type = _bottom_type;\n \n+    assert(ra_->is_oop(this) == true, \"A decodeN node must produce an oop!\");\n+    ra_->set_oop(n2, true);\n+\n     ra_->set_pair(n1->_idx, ra_->get_reg_second(this), ra_->get_reg_first(this));\n     ra_->set_pair(n2->_idx, ra_->get_reg_second(this), ra_->get_reg_first(this));\n "
      },
      {
        "sha": "8daa0070dbb5430cf8a550b6ee8d08568df1f96c",
        "filename": "src/hotspot/cpu/ppc/stubGenerator_ppc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fppc%2FstubGenerator_ppc.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fppc%2FstubGenerator_ppc.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fppc%2FstubGenerator_ppc.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -3757,6 +3757,7 @@ class StubGenerator: public StubCodeGenerator {\n     Register d      = R6_ARG4; // destination address\n     Register dp     = R7_ARG5; // destination offset\n     Register isURL  = R8_ARG6; // boolean, if non-zero indicates use of RFC 4648 base64url encoding\n+    Register isMIME = R9_ARG7; // boolean, if non-zero indicates use of RFC 2045 MIME encoding - not used\n \n     // Local variables\n     Register const_ptr     = R9;  // used for loading constants"
      },
      {
        "sha": "945b849d18c40017c06766234711a97ffe37180d",
        "filename": "src/hotspot/cpu/s390/assembler_s390.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fs390%2Fassembler_s390.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fs390%2Fassembler_s390.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fs390%2Fassembler_s390.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -139,7 +139,7 @@ Assembler::branch_condition Assembler::inverse_float_condition(Assembler::branch\n   return inverse_cc;\n }\n \n-#ifdef ASSERT\n+#ifndef PRODUCT\n void Assembler::print_dbg_msg(outputStream* out, unsigned long inst, const char* msg, int ilen) {\n   out->flush();\n   switch (ilen) {"
      },
      {
        "sha": "838780f0f2efc359a3e6c4b1b050ec962b505449",
        "filename": "src/hotspot/cpu/s390/interp_masm_s390.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fs390%2Finterp_masm_s390.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fs390%2Finterp_masm_s390.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fs390%2Finterp_masm_s390.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -166,7 +166,7 @@ class InterpreterMacroAssembler: public MacroAssembler {\n \n   // Accessors to the template interpreter state.\n \n-  void asm_assert_ijava_state_magic(Register tmp) PRODUCT_RETURN;\n+  void asm_assert_ijava_state_magic(Register tmp) NOT_DEBUG_RETURN;\n \n   void save_bcp();\n "
      },
      {
        "sha": "54d76832244eff538152ed6b7afcb0e856db75a9",
        "filename": "src/hotspot/cpu/x86/assembler_x86.cpp",
        "status": "modified",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fassembler_x86.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fassembler_x86.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2Fassembler_x86.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -3758,6 +3758,15 @@ void Assembler::vpermb(XMMRegister dst, XMMRegister nds, XMMRegister src, int ve\n   emit_int16((unsigned char)0x8D, (0xC0 | encode));\n }\n \n+void Assembler::vpermb(XMMRegister dst, XMMRegister nds, Address src, int vector_len) {\n+  assert(VM_Version::supports_avx512_vbmi(), \"\");\n+  InstructionAttr attributes(vector_len, /* rex_w */ false, /* legacy_mode */ false, /* no_mask_reg */ true, /* uses_vl */ true);\n+  attributes.set_is_evex_instruction();\n+  vex_prefix(src, nds->encoding(), dst->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int8((unsigned char)0x8D);\n+  emit_operand(dst, src);\n+}\n+\n void Assembler::vpermw(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n   assert(vector_len == AVX_128bit ? VM_Version::supports_avx512vlbw() :\n          vector_len == AVX_256bit ? VM_Version::supports_avx512vlbw() :\n@@ -3830,6 +3839,22 @@ void Assembler::evpermi2q(XMMRegister dst, XMMRegister nds, XMMRegister src, int\n   emit_int16(0x76, (0xC0 | encode));\n }\n \n+void Assembler::evpermt2b(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert(VM_Version::supports_avx512_vbmi(), \"\");\n+  InstructionAttr attributes(vector_len, /* vex_w */ false, /* legacy_mode */ false, /* no_mask_reg */ true, /* uses_vl */ true);\n+  attributes.set_is_evex_instruction();\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x7D, (0xC0 | encode));\n+}\n+\n+void Assembler::evpmultishiftqb(XMMRegister dst, XMMRegister ctl, XMMRegister src, int vector_len) {\n+  assert(VM_Version::supports_avx512_vbmi(), \"\");\n+  InstructionAttr attributes(vector_len, /* vex_w */ true, /* legacy_mode */ false, /* no_mask_reg */ true, /* uses_vl */ true);\n+  attributes.set_is_evex_instruction();\n+  int encode = vex_prefix_and_encode(dst->encoding(), ctl->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16((unsigned char)0x83, (unsigned char)(0xC0 | encode));\n+}\n+\n void Assembler::pause() {\n   emit_int16((unsigned char)0xF3, (unsigned char)0x90);\n }\n@@ -4128,6 +4153,15 @@ void Assembler::vpmovmskb(Register dst, XMMRegister src, int vec_enc) {\n   emit_int16((unsigned char)0xD7, (0xC0 | encode));\n }\n \n+void Assembler::vpmaskmovd(XMMRegister dst, XMMRegister nds, Address src, int vector_len) {\n+  assert((VM_Version::supports_avx2() && vector_len == AVX_256bit), \"\");\n+  InstructionMark im(this);\n+  InstructionAttr attributes(vector_len, /* vex_w */ false, /* legacy_mode */ true, /* no_mask_reg */ false, /* uses_vl */ true);\n+  vex_prefix(src, nds->encoding(), dst->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int8((unsigned char)0x8C);\n+  emit_operand(dst, src);\n+}\n+\n void Assembler::pextrd(Register dst, XMMRegister src, int imm8) {\n   assert(VM_Version::supports_sse4_1(), \"\");\n   InstructionAttr attributes(AVX_128bit, /* rex_w */ false, /* legacy_mode */ _legacy_mode_dq, /* no_mask_reg */ true, /* uses_vl */ false);\n@@ -4549,6 +4583,15 @@ void Assembler::vpmaddwd(XMMRegister dst, XMMRegister nds, XMMRegister src, int\n   emit_int16((unsigned char)0xF5, (0xC0 | encode));\n }\n \n+void Assembler::vpmaddubsw(XMMRegister dst, XMMRegister src1, XMMRegister src2, int vector_len) {\n+assert(vector_len == AVX_128bit? VM_Version::supports_avx() :\n+       vector_len == AVX_256bit? VM_Version::supports_avx2() :\n+       vector_len == AVX_512bit? VM_Version::supports_avx512bw() : 0, \"\");\n+  InstructionAttr attributes(vector_len, /* rex_w */ false, /* legacy_mode */ _legacy_mode_bw, /* no_mask_reg */ true, /* uses_vl */ true);\n+  int encode = simd_prefix_and_encode(dst, src1, src2, VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x04, (0xC0 | encode));\n+}\n+\n void Assembler::evpdpwssd(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n   assert(VM_Version::supports_evex(), \"\");\n   assert(VM_Version::supports_avx512_vnni(), \"must support vnni\");\n@@ -4857,6 +4900,15 @@ void Assembler::vptest(XMMRegister dst, XMMRegister src, int vector_len) {\n   emit_int16(0x17, (0xC0 | encode));\n }\n \n+void Assembler::evptestmb(KRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert(VM_Version::supports_avx512vlbw(), \"\");\n+  // Encoding: EVEX.NDS.XXX.66.0F.W0 DB /r\n+  InstructionAttr attributes(vector_len, /* vex_w */ false, /* legacy_mode */ false, /* no_mask_reg */ true, /* uses_vl */ true);\n+  attributes.set_is_evex_instruction();\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16((unsigned char)0x26, (0xC0 | encode));\n+}\n+\n void Assembler::punpcklbw(XMMRegister dst, Address src) {\n   NOT_LP64(assert(VM_Version::supports_sse2(), \"\"));\n   assert((UseAVX > 0), \"SSE mode requires address alignment 16 bytes\");\n@@ -6539,6 +6591,13 @@ void Assembler::psubq(XMMRegister dst, XMMRegister src) {\n   emit_int8((0xC0 | encode));\n }\n \n+void Assembler::vpsubusb(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert(UseAVX > 0, \"requires some form of AVX\");\n+  InstructionAttr attributes(vector_len, /* vex_w */ false, /* legacy_mode */ _legacy_mode_bw, /* no_mask_reg */ true, /* uses_vl */ true);\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F, &attributes);\n+  emit_int16((unsigned char)0xD8, (0xC0 | encode));\n+}\n+\n void Assembler::vpsubb(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n   assert(UseAVX > 0, \"requires some form of AVX\");\n   InstructionAttr attributes(vector_len, /* vex_w */ false, /* legacy_mode */ _legacy_mode_bw, /* no_mask_reg */ true, /* uses_vl */ true);\n@@ -6630,6 +6689,15 @@ void Assembler::pmuludq(XMMRegister dst, XMMRegister src) {\n   emit_int16((unsigned char)0xF4, (0xC0 | encode));\n }\n \n+void Assembler::vpmulhuw(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert((vector_len == AVX_128bit && VM_Version::supports_avx()) ||\n+         (vector_len == AVX_256bit && VM_Version::supports_avx2()) ||\n+         (vector_len == AVX_512bit && VM_Version::supports_avx512bw()), \"\");\n+  InstructionAttr attributes(vector_len, /* vex_w */ false, /* legacy_mode */ _legacy_mode_bw, /* no_mask_reg */ true, /* uses_vl */ true);\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F, &attributes);\n+  emit_int16((unsigned char)0xE4, (0xC0 | encode));\n+}\n+\n void Assembler::vpmullw(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n   assert(UseAVX > 0, \"requires some form of AVX\");\n   InstructionAttr attributes(vector_len, /* vex_w */ false, /* legacy_mode */ _legacy_mode_bw, /* no_mask_reg */ true, /* uses_vl */ true);\n@@ -9410,6 +9478,13 @@ void Assembler::shlxq(Register dst, Register src1, Register src2) {\n   emit_int16((unsigned char)0xF7, (0xC0 | encode));\n }\n \n+void Assembler::shrxl(Register dst, Register src1, Register src2) {\n+  assert(VM_Version::supports_bmi2(), \"\");\n+  InstructionAttr attributes(AVX_128bit, /* vex_w */ false, /* legacy_mode */ true, /* no_mask_reg */ true, /* uses_vl */ true);\n+  int encode = vex_prefix_and_encode(dst->encoding(), src2->encoding(), src1->encoding(), VEX_SIMD_F2, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16((unsigned char)0xF7, (0xC0 | encode));\n+}\n+\n void Assembler::shrxq(Register dst, Register src1, Register src2) {\n   assert(VM_Version::supports_bmi2(), \"\");\n   InstructionAttr attributes(AVX_128bit, /* vex_w */ true, /* legacy_mode */ true, /* no_mask_reg */ true, /* uses_vl */ true);"
      },
      {
        "sha": "a702bd06e7f5b57cc666291ecd1181cfeba7ad1e",
        "filename": "src/hotspot/cpu/x86/assembler_x86.hpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fassembler_x86.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fassembler_x86.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2Fassembler_x86.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1690,6 +1690,7 @@ class Assembler : public AbstractAssembler  {\n   void vpermq(XMMRegister dst, XMMRegister src, int imm8);\n   void vpermq(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n   void vpermb(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n+  void vpermb(XMMRegister dst, XMMRegister nds, Address src, int vector_len);\n   void vpermw(XMMRegister dst,  XMMRegister nds, XMMRegister src, int vector_len);\n   void vpermd(XMMRegister dst,  XMMRegister nds, Address src, int vector_len);\n   void vpermd(XMMRegister dst,  XMMRegister nds, XMMRegister src, int vector_len);\n@@ -1699,6 +1700,8 @@ class Assembler : public AbstractAssembler  {\n   void vpermilpd(XMMRegister dst, XMMRegister src, int imm8, int vector_len);\n   void vpermpd(XMMRegister dst, XMMRegister src, int imm8, int vector_len);\n   void evpermi2q(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n+  void evpermt2b(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n+  void evpmultishiftqb(XMMRegister dst, XMMRegister ctl, XMMRegister src, int vector_len);\n \n   void pause();\n \n@@ -1747,6 +1750,7 @@ class Assembler : public AbstractAssembler  {\n \n   void pmovmskb(Register dst, XMMRegister src);\n   void vpmovmskb(Register dst, XMMRegister src, int vec_enc);\n+  void vpmaskmovd(XMMRegister dst, XMMRegister nds, Address src, int vector_len);\n \n   // SSE 4.1 extract\n   void pextrd(Register dst, XMMRegister src, int imm8);\n@@ -1812,6 +1816,8 @@ class Assembler : public AbstractAssembler  {\n   // Multiply add\n   void pmaddwd(XMMRegister dst, XMMRegister src);\n   void vpmaddwd(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n+  void vpmaddubsw(XMMRegister dst, XMMRegister src1, XMMRegister src2, int vector_len);\n+\n   // Multiply add accumulate\n   void evpdpwssd(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n \n@@ -1879,6 +1885,8 @@ class Assembler : public AbstractAssembler  {\n   void vptest(XMMRegister dst, XMMRegister src);\n   void vptest(XMMRegister dst, Address src);\n \n+  void evptestmb(KRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n+\n   // Vector compare\n   void vptest(XMMRegister dst, XMMRegister src, int vector_len);\n \n@@ -2140,6 +2148,7 @@ class Assembler : public AbstractAssembler  {\n \n   void shlxl(Register dst, Register src1, Register src2);\n   void shlxq(Register dst, Register src1, Register src2);\n+  void shrxl(Register dst, Register src1, Register src2);\n   void shrxq(Register dst, Register src1, Register src2);\n \n   void bzhiq(Register dst, Register src1, Register src2);\n@@ -2244,6 +2253,7 @@ class Assembler : public AbstractAssembler  {\n   void psubw(XMMRegister dst, XMMRegister src);\n   void psubd(XMMRegister dst, XMMRegister src);\n   void psubq(XMMRegister dst, XMMRegister src);\n+  void vpsubusb(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n   void vpsubb(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n   void vpsubw(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n   void vpsubd(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n@@ -2264,6 +2274,7 @@ class Assembler : public AbstractAssembler  {\n   void vpmullw(XMMRegister dst, XMMRegister nds, Address src, int vector_len);\n   void vpmulld(XMMRegister dst, XMMRegister nds, Address src, int vector_len);\n   void vpmullq(XMMRegister dst, XMMRegister nds, Address src, int vector_len);\n+  void vpmulhuw(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n \n   // Minimum of packed integers\n   void pminsb(XMMRegister dst, XMMRegister src);"
      },
      {
        "sha": "740189c144fb08092a70ba6b6d85fed55887acd0",
        "filename": "src/hotspot/cpu/x86/macroAssembler_x86.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 20,
        "changes": 55,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1171,7 +1171,20 @@ void MacroAssembler::addpd(XMMRegister dst, AddressLiteral src) {\n   }\n }\n \n+// See 8273459.  Function for ensuring 64-byte alignment, intended for stubs only.\n+// Stub code is generated once and never copied.\n+// NMethods can't use this because they get copied and we can't force alignment > 32 bytes.\n+void MacroAssembler::align64() {\n+  align(64, (unsigned long long) pc());\n+}\n+\n+void MacroAssembler::align32() {\n+  align(32, (unsigned long long) pc());\n+}\n+\n void MacroAssembler::align(int modulus) {\n+  // 8273459: Ensure alignment is possible with current segment alignment\n+  assert(modulus <= CodeEntryAlignment, \"Alignment must be <= CodeEntryAlignment\");\n   align(modulus, offset());\n }\n \n@@ -4051,7 +4064,7 @@ void MacroAssembler::check_klass_subtype_slow_path(Register sub_klass,\n \n   // Get super_klass value into rax (even if it was in rdi or rcx).\n   bool pushed_rax = false, pushed_rcx = false, pushed_rdi = false;\n-  if (super_klass != rax || UseCompressedOops) {\n+  if (super_klass != rax) {\n     if (!IS_A_TEMP(rax)) { push(rax); pushed_rax = true; }\n     mov(rax, super_klass);\n   }\n@@ -7114,7 +7127,7 @@ void MacroAssembler::kernel_crc32(Register crc, Register buf, Register len, Regi\n   // 128 bits per each of 4 parallel streams.\n   movdqu(xmm0, ExternalAddress(StubRoutines::x86::crc_by128_masks_addr() + 32));\n \n-  align(32);\n+  align32();\n   BIND(L_fold_512b_loop);\n   fold_128bit_crc32(xmm1, xmm0, xmm5, buf,  0);\n   fold_128bit_crc32(xmm2, xmm0, xmm5, buf, 16);\n@@ -7204,7 +7217,7 @@ void MacroAssembler::fold512bit_crc32_avx512(XMMRegister xcrc, XMMRegister xK, X\n \n // Helper function for AVX 512 CRC32\n // Compute CRC32 for < 256B buffers\n-void MacroAssembler::kernel_crc32_avx512_256B(Register crc, Register buf, Register len, Register key, Register pos,\n+void MacroAssembler::kernel_crc32_avx512_256B(Register crc, Register buf, Register len, Register table, Register pos,\n                                               Register tmp1, Register tmp2, Label& L_barrett, Label& L_16B_reduction_loop,\n                                               Label& L_get_last_two_xmms, Label& L_128_done, Label& L_cleanup) {\n \n@@ -7217,7 +7230,7 @@ void MacroAssembler::kernel_crc32_avx512_256B(Register crc, Register buf, Regist\n   jcc(Assembler::less, L_less_than_32);\n \n   // if there is, load the constants\n-  movdqu(xmm10, Address(key, 1 * 16));    //rk1 and rk2 in xmm10\n+  movdqu(xmm10, Address(table, 1 * 16));    //rk1 and rk2 in xmm10\n   movdl(xmm0, crc);                        // get the initial crc value\n   movdqu(xmm7, Address(buf, pos, Address::times_1, 0 * 16)); //load the plaintext\n   pxor(xmm7, xmm0);\n@@ -7244,7 +7257,7 @@ void MacroAssembler::kernel_crc32_avx512_256B(Register crc, Register buf, Regist\n   pxor(xmm7, xmm0);                       //xor the initial crc value\n   addl(pos, 16);\n   subl(len, 16);\n-  movdqu(xmm10, Address(key, 1 * 16));    // rk1 and rk2 in xmm10\n+  movdqu(xmm10, Address(table, 1 * 16));    // rk1 and rk2 in xmm10\n   jmp(L_get_last_two_xmms);\n \n   bind(L_less_than_16_left);\n@@ -7364,12 +7377,17 @@ void MacroAssembler::kernel_crc32_avx512_256B(Register crc, Register buf, Regist\n * param crc   register containing existing CRC (32-bit)\n * param buf   register pointing to input byte buffer (byte*)\n * param len   register containing number of bytes\n+* param table address of crc or crc32c table\n * param tmp1  scratch register\n * param tmp2  scratch register\n * return rax  result register\n+*\n+* This routine is identical for crc32c with the exception of the precomputed constant\n+* table which will be passed as the table argument.  The calculation steps are\n+* the same for both variants.\n */\n-void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register len, Register key, Register tmp1, Register tmp2) {\n-  assert_different_registers(crc, buf, len, key, tmp1, tmp2, rax);\n+void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register len, Register table, Register tmp1, Register tmp2) {\n+  assert_different_registers(crc, buf, len, table, tmp1, tmp2, rax, r12);\n \n   Label L_tail, L_tail_restore, L_tail_loop, L_exit, L_align_loop, L_aligned;\n   Label L_fold_tail, L_fold_128b, L_fold_512b, L_fold_512b_loop, L_fold_tail_loop;\n@@ -7384,8 +7402,6 @@ void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register le\n   // For EVEX with VL and BW, provide a standard mask, VL = 128 will guide the merge\n   // context for the registers used, where all instructions below are using 128-bit mode\n   // On EVEX without VL and BW, these instructions will all be AVX.\n-  lea(key, ExternalAddress(StubRoutines::x86::crc_table_avx512_addr()));\n-  notl(crc);\n   movl(pos, 0);\n \n   // check if smaller than 256B\n@@ -7399,15 +7415,15 @@ void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register le\n   evmovdquq(xmm0, Address(buf, pos, Address::times_1, 0 * 64), Assembler::AVX_512bit);\n   evmovdquq(xmm4, Address(buf, pos, Address::times_1, 1 * 64), Assembler::AVX_512bit);\n   evpxorq(xmm0, xmm0, xmm10, Assembler::AVX_512bit);\n-  evbroadcasti32x4(xmm10, Address(key, 2 * 16), Assembler::AVX_512bit); //zmm10 has rk3 and rk4\n+  evbroadcasti32x4(xmm10, Address(table, 2 * 16), Assembler::AVX_512bit); //zmm10 has rk3 and rk4\n \n   subl(len, 256);\n   cmpl(len, 256);\n   jcc(Assembler::less, L_fold_128_B_loop);\n \n   evmovdquq(xmm7, Address(buf, pos, Address::times_1, 2 * 64), Assembler::AVX_512bit);\n   evmovdquq(xmm8, Address(buf, pos, Address::times_1, 3 * 64), Assembler::AVX_512bit);\n-  evbroadcasti32x4(xmm16, Address(key, 0 * 16), Assembler::AVX_512bit); //zmm16 has rk-1 and rk-2\n+  evbroadcasti32x4(xmm16, Address(table, 0 * 16), Assembler::AVX_512bit); //zmm16 has rk-1 and rk-2\n   subl(len, 256);\n \n   bind(L_fold_256_B_loop);\n@@ -7453,8 +7469,8 @@ void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register le\n   // at this point, the buffer pointer is pointing at the last y Bytes of the buffer, where 0 <= y < 128\n   // the 128B of folded data is in 8 of the xmm registers : xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n   bind(L_fold_128_B_register);\n-  evmovdquq(xmm16, Address(key, 5 * 16), Assembler::AVX_512bit); // multiply by rk9-rk16\n-  evmovdquq(xmm11, Address(key, 9 * 16), Assembler::AVX_512bit); // multiply by rk17-rk20, rk1,rk2, 0,0\n+  evmovdquq(xmm16, Address(table, 5 * 16), Assembler::AVX_512bit); // multiply by rk9-rk16\n+  evmovdquq(xmm11, Address(table, 9 * 16), Assembler::AVX_512bit); // multiply by rk17-rk20, rk1,rk2, 0,0\n   evpclmulqdq(xmm1, xmm0, xmm16, 0x01, Assembler::AVX_512bit);\n   evpclmulqdq(xmm2, xmm0, xmm16, 0x10, Assembler::AVX_512bit);\n   // save last that has no multiplicand\n@@ -7463,7 +7479,7 @@ void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register le\n   evpclmulqdq(xmm5, xmm4, xmm11, 0x01, Assembler::AVX_512bit);\n   evpclmulqdq(xmm6, xmm4, xmm11, 0x10, Assembler::AVX_512bit);\n   // Needed later in reduction loop\n-  movdqu(xmm10, Address(key, 1 * 16));\n+  movdqu(xmm10, Address(table, 1 * 16));\n   vpternlogq(xmm1, 0x96, xmm2, xmm5, Assembler::AVX_512bit); // xor ABC\n   vpternlogq(xmm1, 0x96, xmm6, xmm7, Assembler::AVX_512bit); // xor ABC\n \n@@ -7479,7 +7495,7 @@ void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register le\n   jcc(Assembler::less, L_final_reduction_for_128);\n \n   bind(L_16B_reduction_loop);\n-  vpclmulqdq(xmm8, xmm7, xmm10, 0x1);\n+  vpclmulqdq(xmm8, xmm7, xmm10, 0x01);\n   vpclmulqdq(xmm7, xmm7, xmm10, 0x10);\n   vpxor(xmm7, xmm7, xmm8, Assembler::AVX_128bit);\n   movdqu(xmm0, Address(buf, pos, Address::times_1, 0 * 16));\n@@ -7510,14 +7526,14 @@ void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register le\n   vpshufb(xmm2, xmm2, xmm0, Assembler::AVX_128bit);\n \n   blendvpb(xmm2, xmm2, xmm1, xmm0, Assembler::AVX_128bit);\n-  vpclmulqdq(xmm8, xmm7, xmm10, 0x1);\n+  vpclmulqdq(xmm8, xmm7, xmm10, 0x01);\n   vpclmulqdq(xmm7, xmm7, xmm10, 0x10);\n   vpxor(xmm7, xmm7, xmm8, Assembler::AVX_128bit);\n   vpxor(xmm7, xmm7, xmm2, Assembler::AVX_128bit);\n \n   bind(L_128_done);\n   // compute crc of a 128-bit value\n-  movdqu(xmm10, Address(key, 3 * 16));\n+  movdqu(xmm10, Address(table, 3 * 16));\n   movdqu(xmm0, xmm7);\n \n   // 64b fold\n@@ -7533,14 +7549,14 @@ void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register le\n   jmp(L_barrett);\n \n   bind(L_less_than_256);\n-  kernel_crc32_avx512_256B(crc, buf, len, key, pos, tmp1, tmp2, L_barrett, L_16B_reduction_loop, L_get_last_two_xmms, L_128_done, L_cleanup);\n+  kernel_crc32_avx512_256B(crc, buf, len, table, pos, tmp1, tmp2, L_barrett, L_16B_reduction_loop, L_get_last_two_xmms, L_128_done, L_cleanup);\n \n   //barrett reduction\n   bind(L_barrett);\n   vpand(xmm7, xmm7, ExternalAddress(StubRoutines::x86::crc_by128_masks_avx512_addr() + 1 * 16), Assembler::AVX_128bit, tmp2);\n   movdqu(xmm1, xmm7);\n   movdqu(xmm2, xmm7);\n-  movdqu(xmm10, Address(key, 4 * 16));\n+  movdqu(xmm10, Address(table, 4 * 16));\n \n   pclmulqdq(xmm7, xmm10, 0x0);\n   pxor(xmm7, xmm2);\n@@ -7552,7 +7568,6 @@ void MacroAssembler::kernel_crc32_avx512(Register crc, Register buf, Register le\n   pextrd(crc, xmm7, 2);\n \n   bind(L_cleanup);\n-  notl(crc); // ~c\n   addptr(rsp, 16 * 2 + 8);\n   pop(r12);\n }"
      },
      {
        "sha": "fcde34b2751748a24fb6cfd630c9051c916b18a6",
        "filename": "src/hotspot/cpu/x86/macroAssembler_x86.hpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -194,6 +194,8 @@ class MacroAssembler: public Assembler {\n   void incrementq(AddressLiteral dst);\n \n   // Alignment\n+  void align32();\n+  void align64();\n   void align(int modulus);\n   void align(int modulus, int target);\n "
      },
      {
        "sha": "97e47fb184d872a707cd7a0998173e95327d1eb6",
        "filename": "src/hotspot/cpu/x86/macroAssembler_x86_adler.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86_adler.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86_adler.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86_adler.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -80,7 +80,7 @@ void MacroAssembler::updateBytesAdler32(Register init_d, Register data, Register\n       cmpptr(data, end);\n       jcc(Assembler::aboveEqual, SKIP_LOOP_1A);\n \n-      align(32);\n+      align32();\n       bind(SLOOP1A);\n       vbroadcastf128(ydata, Address(data, 0), Assembler::AVX_256bit);\n       addptr(data, CHUNKSIZE);\n@@ -178,7 +178,7 @@ void MacroAssembler::updateBytesAdler32(Register init_d, Register data, Register\n       movdl(rax, xb);\n       addl(b_d, rax);\n \n-      align(32);\n+      align32();\n       bind(FINAL_LOOP);\n       movzbl(rax, Address(data, 0)); //movzx   eax, byte[data]\n       addl(a_d, rax);"
      },
      {
        "sha": "4f86bc5b6954e840a1ee247395665c38523dae67",
        "filename": "src/hotspot/cpu/x86/macroAssembler_x86_aes.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86_aes.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86_aes.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2FmacroAssembler_x86_aes.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -808,11 +808,14 @@ void MacroAssembler::aesctr_encrypt(Register src_addr, Register dest_addr, Regis\n     addptr(pos, 1);\n     addptr(used, 1);\n     decrement(len_reg);\n-    jmp(PRELOOP_START);\n+    jcc(Assembler::notEqual, PRELOOP_START);\n \n     bind(EXIT_PRELOOP);\n     movl(Address(used_addr, 0), used);\n \n+    cmpl(len_reg, 0);\n+    jcc(Assembler::equal, EXIT);\n+\n     // Calculate number of rounds i.e. 10, 12, 14,  based on key length(128, 192, 256).\n     movl(rounds, Address(key, arrayOopDesc::length_offset_in_bytes() - arrayOopDesc::base_offset_in_bytes(T_INT)));\n "
      },
      {
        "sha": "d03338342d1730e9348d3c353a06af18c5da25f3",
        "filename": "src/hotspot/cpu/x86/matcher_x86.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fmatcher_x86.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fmatcher_x86.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2Fmatcher_x86.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -178,11 +178,7 @@\n \n   // Some microarchitectures have mask registers used on vectors\n   static const bool has_predicated_vectors(void) {\n-    bool ret_value = false;\n-    if (UseAVX > 2) {\n-      ret_value = VM_Version::supports_avx512vl();\n-    }\n-    return ret_value;\n+    return VM_Version::supports_evex();\n   }\n \n   // true means we have fast l2f convers"
      },
      {
        "sha": "654066ac87262194a4e87e9ee68b7ad699a41f07",
        "filename": "src/hotspot/cpu/x86/stubGenerator_x86_32.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FstubGenerator_x86_32.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FstubGenerator_x86_32.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2FstubGenerator_x86_32.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -2998,7 +2998,7 @@ class StubGenerator: public StubCodeGenerator {\n   }\n \n   address generate_upper_word_mask() {\n-    __ align(64);\n+    __ align64();\n     StubCodeMark mark(this, \"StubRoutines\", \"upper_word_mask\");\n     address start = __ pc();\n     __ emit_data(0x00000000, relocInfo::none, 0);\n@@ -3009,7 +3009,7 @@ class StubGenerator: public StubCodeGenerator {\n   }\n \n   address generate_shuffle_byte_flip_mask() {\n-    __ align(64);\n+    __ align64();\n     StubCodeMark mark(this, \"StubRoutines\", \"shuffle_byte_flip_mask\");\n     address start = __ pc();\n     __ emit_data(0x0c0d0e0f, relocInfo::none, 0);\n@@ -3068,7 +3068,7 @@ class StubGenerator: public StubCodeGenerator {\n   }\n \n   address generate_pshuffle_byte_flip_mask() {\n-    __ align(64);\n+    __ align64();\n     StubCodeMark mark(this, \"StubRoutines\", \"pshuffle_byte_flip_mask\");\n     address start = __ pc();\n     __ emit_data(0x00010203, relocInfo::none, 0);"
      },
      {
        "sha": "c7634a2e59627c5c899d84e6b5aaec152bea598b",
        "filename": "src/hotspot/cpu/x86/stubGenerator_x86_64.cpp",
        "status": "modified",
        "additions": 1089,
        "deletions": 343,
        "changes": 1432,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FstubGenerator_x86_64.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FstubGenerator_x86_64.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2FstubGenerator_x86_64.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1484,7 +1484,7 @@ class StubGenerator: public StubCodeGenerator {\n         __ subq(temp1, loop_size[shift]);\n \n         // Main loop with aligned copy block size of 192 bytes at 32 byte granularity.\n-        __ align(32);\n+        __ align32();\n         __ BIND(L_main_loop);\n            __ copy64_avx(to, from, temp4, xmm1, false, shift, 0);\n            __ copy64_avx(to, from, temp4, xmm1, false, shift, 64);\n@@ -1551,7 +1551,7 @@ class StubGenerator: public StubCodeGenerator {\n \n         // Main loop with aligned copy block size of 192 bytes at\n         // 64 byte copy granularity.\n-        __ align(32);\n+        __ align32();\n         __ BIND(L_main_loop_64bytes);\n            __ copy64_avx(to, from, temp4, xmm1, false, shift, 0 , true);\n            __ copy64_avx(to, from, temp4, xmm1, false, shift, 64, true);\n@@ -1691,7 +1691,7 @@ class StubGenerator: public StubCodeGenerator {\n         __ BIND(L_main_pre_loop);\n \n         // Main loop with aligned copy block size of 192 bytes at 32 byte granularity.\n-        __ align(32);\n+        __ align32();\n         __ BIND(L_main_loop);\n            __ copy64_avx(to, from, temp1, xmm1, true, shift, -64);\n            __ copy64_avx(to, from, temp1, xmm1, true, shift, -128);\n@@ -1724,7 +1724,7 @@ class StubGenerator: public StubCodeGenerator {\n \n         // Main loop with aligned copy block size of 192 bytes at\n         // 64 byte copy granularity.\n-        __ align(32);\n+        __ align32();\n         __ BIND(L_main_loop_64bytes);\n            __ copy64_avx(to, from, temp1, xmm1, true, shift, -64 , true);\n            __ copy64_avx(to, from, temp1, xmm1, true, shift, -128, true);\n@@ -4194,7 +4194,7 @@ class StubGenerator: public StubCodeGenerator {\n   }\n \n   address generate_upper_word_mask() {\n-    __ align(64);\n+    __ align64();\n     StubCodeMark mark(this, \"StubRoutines\", \"upper_word_mask\");\n     address start = __ pc();\n     __ emit_data64(0x0000000000000000, relocInfo::none);\n@@ -4203,7 +4203,7 @@ class StubGenerator: public StubCodeGenerator {\n   }\n \n   address generate_shuffle_byte_flip_mask() {\n-    __ align(64);\n+    __ align64();\n     StubCodeMark mark(this, \"StubRoutines\", \"shuffle_byte_flip_mask\");\n     address start = __ pc();\n     __ emit_data64(0x08090a0b0c0d0e0f, relocInfo::none);\n@@ -4248,7 +4248,7 @@ class StubGenerator: public StubCodeGenerator {\n   }\n \n   address generate_pshuffle_byte_flip_mask() {\n-    __ align(64);\n+    __ align64();\n     StubCodeMark mark(this, \"StubRoutines\", \"pshuffle_byte_flip_mask\");\n     address start = __ pc();\n     __ emit_data64(0x0405060700010203, relocInfo::none);\n@@ -4274,7 +4274,7 @@ class StubGenerator: public StubCodeGenerator {\n \n   //Mask for byte-swapping a couple of qwords in an XMM register using (v)pshufb.\n   address generate_pshuffle_byte_flip_mask_sha512() {\n-    __ align(32);\n+    __ align32();\n     StubCodeMark mark(this, \"StubRoutines\", \"pshuffle_byte_flip_mask_sha512\");\n     address start = __ pc();\n     if (VM_Version::supports_avx2()) {\n@@ -4370,7 +4370,7 @@ class StubGenerator: public StubCodeGenerator {\n \n   // This mask is used for incrementing counter value(linc0, linc4, etc.)\n   address counter_mask_addr() {\n-    __ align(64);\n+    __ align64();\n     StubCodeMark mark(this, \"StubRoutines\", \"counter_mask_addr\");\n     address start = __ pc();\n     __ emit_data64(0x08090a0b0c0d0e0f, relocInfo::none);//lbswapmask\n@@ -5287,164 +5287,691 @@ address generate_avx_ghash_processBlocks() {\n     return start;\n   }\n \n-  //base64 character set\n-  address base64_charset_addr() {\n-    __ align(CodeEntryAlignment);\n-    StubCodeMark mark(this, \"StubRoutines\", \"base64_charset\");\n+  address base64_shuffle_addr()\n+  {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"shuffle_base64\");\n     address start = __ pc();\n-    __ emit_data64(0x0000004200000041, relocInfo::none);\n-    __ emit_data64(0x0000004400000043, relocInfo::none);\n-    __ emit_data64(0x0000004600000045, relocInfo::none);\n-    __ emit_data64(0x0000004800000047, relocInfo::none);\n-    __ emit_data64(0x0000004a00000049, relocInfo::none);\n-    __ emit_data64(0x0000004c0000004b, relocInfo::none);\n-    __ emit_data64(0x0000004e0000004d, relocInfo::none);\n-    __ emit_data64(0x000000500000004f, relocInfo::none);\n-    __ emit_data64(0x0000005200000051, relocInfo::none);\n-    __ emit_data64(0x0000005400000053, relocInfo::none);\n-    __ emit_data64(0x0000005600000055, relocInfo::none);\n-    __ emit_data64(0x0000005800000057, relocInfo::none);\n-    __ emit_data64(0x0000005a00000059, relocInfo::none);\n-    __ emit_data64(0x0000006200000061, relocInfo::none);\n-    __ emit_data64(0x0000006400000063, relocInfo::none);\n-    __ emit_data64(0x0000006600000065, relocInfo::none);\n-    __ emit_data64(0x0000006800000067, relocInfo::none);\n-    __ emit_data64(0x0000006a00000069, relocInfo::none);\n-    __ emit_data64(0x0000006c0000006b, relocInfo::none);\n-    __ emit_data64(0x0000006e0000006d, relocInfo::none);\n-    __ emit_data64(0x000000700000006f, relocInfo::none);\n-    __ emit_data64(0x0000007200000071, relocInfo::none);\n-    __ emit_data64(0x0000007400000073, relocInfo::none);\n-    __ emit_data64(0x0000007600000075, relocInfo::none);\n-    __ emit_data64(0x0000007800000077, relocInfo::none);\n-    __ emit_data64(0x0000007a00000079, relocInfo::none);\n-    __ emit_data64(0x0000003100000030, relocInfo::none);\n-    __ emit_data64(0x0000003300000032, relocInfo::none);\n-    __ emit_data64(0x0000003500000034, relocInfo::none);\n-    __ emit_data64(0x0000003700000036, relocInfo::none);\n-    __ emit_data64(0x0000003900000038, relocInfo::none);\n-    __ emit_data64(0x0000002f0000002b, relocInfo::none);\n+    assert(((unsigned long long)start & 0x3f) == 0,\n+           \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x0405030401020001, relocInfo::none);\n+    __ emit_data64(0x0a0b090a07080607, relocInfo::none);\n+    __ emit_data64(0x10110f100d0e0c0d, relocInfo::none);\n+    __ emit_data64(0x1617151613141213, relocInfo::none);\n+    __ emit_data64(0x1c1d1b1c191a1819, relocInfo::none);\n+    __ emit_data64(0x222321221f201e1f, relocInfo::none);\n+    __ emit_data64(0x2829272825262425, relocInfo::none);\n+    __ emit_data64(0x2e2f2d2e2b2c2a2b, relocInfo::none);\n     return start;\n   }\n \n-  //base64 url character set\n-  address base64url_charset_addr() {\n-    __ align(CodeEntryAlignment);\n-    StubCodeMark mark(this, \"StubRoutines\", \"base64url_charset\");\n+  address base64_avx2_shuffle_addr()\n+  {\n+    __ align32();\n+    StubCodeMark mark(this, \"StubRoutines\", \"avx2_shuffle_base64\");\n     address start = __ pc();\n-    __ emit_data64(0x0000004200000041, relocInfo::none);\n-    __ emit_data64(0x0000004400000043, relocInfo::none);\n-    __ emit_data64(0x0000004600000045, relocInfo::none);\n-    __ emit_data64(0x0000004800000047, relocInfo::none);\n-    __ emit_data64(0x0000004a00000049, relocInfo::none);\n-    __ emit_data64(0x0000004c0000004b, relocInfo::none);\n-    __ emit_data64(0x0000004e0000004d, relocInfo::none);\n-    __ emit_data64(0x000000500000004f, relocInfo::none);\n-    __ emit_data64(0x0000005200000051, relocInfo::none);\n-    __ emit_data64(0x0000005400000053, relocInfo::none);\n-    __ emit_data64(0x0000005600000055, relocInfo::none);\n-    __ emit_data64(0x0000005800000057, relocInfo::none);\n-    __ emit_data64(0x0000005a00000059, relocInfo::none);\n-    __ emit_data64(0x0000006200000061, relocInfo::none);\n-    __ emit_data64(0x0000006400000063, relocInfo::none);\n-    __ emit_data64(0x0000006600000065, relocInfo::none);\n-    __ emit_data64(0x0000006800000067, relocInfo::none);\n-    __ emit_data64(0x0000006a00000069, relocInfo::none);\n-    __ emit_data64(0x0000006c0000006b, relocInfo::none);\n-    __ emit_data64(0x0000006e0000006d, relocInfo::none);\n-    __ emit_data64(0x000000700000006f, relocInfo::none);\n-    __ emit_data64(0x0000007200000071, relocInfo::none);\n-    __ emit_data64(0x0000007400000073, relocInfo::none);\n-    __ emit_data64(0x0000007600000075, relocInfo::none);\n-    __ emit_data64(0x0000007800000077, relocInfo::none);\n-    __ emit_data64(0x0000007a00000079, relocInfo::none);\n-    __ emit_data64(0x0000003100000030, relocInfo::none);\n-    __ emit_data64(0x0000003300000032, relocInfo::none);\n-    __ emit_data64(0x0000003500000034, relocInfo::none);\n-    __ emit_data64(0x0000003700000036, relocInfo::none);\n-    __ emit_data64(0x0000003900000038, relocInfo::none);\n-    __ emit_data64(0x0000005f0000002d, relocInfo::none);\n+    __ emit_data64(0x0809070805060405, relocInfo::none);\n+    __ emit_data64(0x0e0f0d0e0b0c0a0b, relocInfo::none);\n+    __ emit_data64(0x0405030401020001, relocInfo::none);\n+    __ emit_data64(0x0a0b090a07080607, relocInfo::none);\n+    return start;\n+  }\n \n+  address base64_avx2_input_mask_addr()\n+  {\n+    __ align32();\n+    StubCodeMark mark(this, \"StubRoutines\", \"avx2_input_mask_base64\");\n+    address start = __ pc();\n+    __ emit_data64(0x8000000000000000, relocInfo::none);\n+    __ emit_data64(0x8000000080000000, relocInfo::none);\n+    __ emit_data64(0x8000000080000000, relocInfo::none);\n+    __ emit_data64(0x8000000080000000, relocInfo::none);\n     return start;\n   }\n \n-  address base64_bswap_mask_addr() {\n-    __ align(CodeEntryAlignment);\n-    StubCodeMark mark(this, \"StubRoutines\", \"bswap_mask_base64\");\n+  address base64_avx2_lut_addr()\n+  {\n+    __ align32();\n+    StubCodeMark mark(this, \"StubRoutines\", \"avx2_lut_base64\");\n     address start = __ pc();\n-    __ emit_data64(0x0504038002010080, relocInfo::none);\n-    __ emit_data64(0x0b0a098008070680, relocInfo::none);\n-    __ emit_data64(0x0908078006050480, relocInfo::none);\n-    __ emit_data64(0x0f0e0d800c0b0a80, relocInfo::none);\n-    __ emit_data64(0x0605048003020180, relocInfo::none);\n-    __ emit_data64(0x0c0b0a8009080780, relocInfo::none);\n-    __ emit_data64(0x0504038002010080, relocInfo::none);\n-    __ emit_data64(0x0b0a098008070680, relocInfo::none);\n+    __ emit_data64(0xfcfcfcfcfcfc4741, relocInfo::none);\n+    __ emit_data64(0x0000f0edfcfcfcfc, relocInfo::none);\n+    __ emit_data64(0xfcfcfcfcfcfc4741, relocInfo::none);\n+    __ emit_data64(0x0000f0edfcfcfcfc, relocInfo::none);\n+\n+    // URL LUT\n+    __ emit_data64(0xfcfcfcfcfcfc4741, relocInfo::none);\n+    __ emit_data64(0x000020effcfcfcfc, relocInfo::none);\n+    __ emit_data64(0xfcfcfcfcfcfc4741, relocInfo::none);\n+    __ emit_data64(0x000020effcfcfcfc, relocInfo::none);\n+    return start;\n+  }\n \n+  address base64_encoding_table_addr()\n+  {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"encoding_table_base64\");\n+    address start = __ pc();\n+    assert(((unsigned long long)start & 0x3f) == 0, \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x4847464544434241, relocInfo::none);\n+    __ emit_data64(0x504f4e4d4c4b4a49, relocInfo::none);\n+    __ emit_data64(0x5857565554535251, relocInfo::none);\n+    __ emit_data64(0x6665646362615a59, relocInfo::none);\n+    __ emit_data64(0x6e6d6c6b6a696867, relocInfo::none);\n+    __ emit_data64(0x767574737271706f, relocInfo::none);\n+    __ emit_data64(0x333231307a797877, relocInfo::none);\n+    __ emit_data64(0x2f2b393837363534, relocInfo::none);\n+\n+    // URL table\n+    __ emit_data64(0x4847464544434241, relocInfo::none);\n+    __ emit_data64(0x504f4e4d4c4b4a49, relocInfo::none);\n+    __ emit_data64(0x5857565554535251, relocInfo::none);\n+    __ emit_data64(0x6665646362615a59, relocInfo::none);\n+    __ emit_data64(0x6e6d6c6b6a696867, relocInfo::none);\n+    __ emit_data64(0x767574737271706f, relocInfo::none);\n+    __ emit_data64(0x333231307a797877, relocInfo::none);\n+    __ emit_data64(0x5f2d393837363534, relocInfo::none);\n     return start;\n   }\n \n-  address base64_right_shift_mask_addr() {\n+  // Code for generating Base64 encoding.\n+  // Intrinsic function prototype in Base64.java:\n+  // private void encodeBlock(byte[] src, int sp, int sl, byte[] dst, int dp,\n+  // boolean isURL) {\n+  address generate_base64_encodeBlock()\n+  {\n     __ align(CodeEntryAlignment);\n-    StubCodeMark mark(this, \"StubRoutines\", \"right_shift_mask\");\n+    StubCodeMark mark(this, \"StubRoutines\", \"implEncode\");\n     address start = __ pc();\n-    __ emit_data64(0x0006000400020000, relocInfo::none);\n-    __ emit_data64(0x0006000400020000, relocInfo::none);\n-    __ emit_data64(0x0006000400020000, relocInfo::none);\n-    __ emit_data64(0x0006000400020000, relocInfo::none);\n-    __ emit_data64(0x0006000400020000, relocInfo::none);\n-    __ emit_data64(0x0006000400020000, relocInfo::none);\n-    __ emit_data64(0x0006000400020000, relocInfo::none);\n-    __ emit_data64(0x0006000400020000, relocInfo::none);\n+    __ enter();\n+\n+    // Save callee-saved registers before using them\n+    __ push(r12);\n+    __ push(r13);\n+    __ push(r14);\n+    __ push(r15);\n+\n+    // arguments\n+    const Register source = c_rarg0;       // Source Array\n+    const Register start_offset = c_rarg1; // start offset\n+    const Register end_offset = c_rarg2;   // end offset\n+    const Register dest = c_rarg3;   // destination array\n+\n+#ifndef _WIN64\n+    const Register dp = c_rarg4;    // Position for writing to dest array\n+    const Register isURL = c_rarg5; // Base64 or URL character set\n+#else\n+    const Address dp_mem(rbp, 6 * wordSize); // length is on stack on Win64\n+    const Address isURL_mem(rbp, 7 * wordSize);\n+    const Register isURL = r10; // pick the volatile windows register\n+    const Register dp = r12;\n+    __ movl(dp, dp_mem);\n+    __ movl(isURL, isURL_mem);\n+#endif\n+\n+    const Register length = r14;\n+    const Register encode_table = r13;\n+    Label L_process3, L_exit, L_processdata, L_vbmiLoop, L_not512, L_32byteLoop;\n+\n+    // calculate length from offsets\n+    __ movl(length, end_offset);\n+    __ subl(length, start_offset);\n+    __ cmpl(length, 0);\n+    __ jcc(Assembler::lessEqual, L_exit);\n \n+    // Code for 512-bit VBMI encoding.  Encodes 48 input bytes into 64\n+    // output bytes. We read 64 input bytes and ignore the last 16, so be\n+    // sure not to read past the end of the input buffer.\n+    if (VM_Version::supports_avx512_vbmi()) {\n+      __ cmpl(length, 64); // Do not overrun input buffer.\n+      __ jcc(Assembler::below, L_not512);\n+\n+      __ shll(isURL, 6); // index into decode table based on isURL\n+      __ lea(encode_table, ExternalAddress(StubRoutines::x86::base64_encoding_table_addr()));\n+      __ addptr(encode_table, isURL);\n+      __ shrl(isURL, 6); // restore isURL\n+\n+      __ mov64(rax, 0x3036242a1016040aull); // Shifts\n+      __ evmovdquq(xmm3, ExternalAddress(StubRoutines::x86::base64_shuffle_addr()), Assembler::AVX_512bit, r15);\n+      __ evmovdquq(xmm2, Address(encode_table, 0), Assembler::AVX_512bit);\n+      __ evpbroadcastq(xmm1, rax, Assembler::AVX_512bit);\n+\n+      __ align32();\n+      __ BIND(L_vbmiLoop);\n+\n+      __ vpermb(xmm0, xmm3, Address(source, start_offset), Assembler::AVX_512bit);\n+      __ subl(length, 48);\n+\n+      // Put the input bytes into the proper lanes for writing, then\n+      // encode them.\n+      __ evpmultishiftqb(xmm0, xmm1, xmm0, Assembler::AVX_512bit);\n+      __ vpermb(xmm0, xmm0, xmm2, Assembler::AVX_512bit);\n+\n+      // Write to destination\n+      __ evmovdquq(Address(dest, dp), xmm0, Assembler::AVX_512bit);\n+\n+      __ addptr(dest, 64);\n+      __ addptr(source, 48);\n+      __ cmpl(length, 64);\n+      __ jcc(Assembler::aboveEqual, L_vbmiLoop);\n+\n+      __ vzeroupper();\n+    }\n+\n+    __ BIND(L_not512);\n+    if (VM_Version::supports_avx2()\n+        && VM_Version::supports_avx512vlbw()) {\n+      /*\n+      ** This AVX2 encoder is based off the paper at:\n+      **      https://dl.acm.org/doi/10.1145/3132709\n+      **\n+      ** We use AVX2 SIMD instructions to encode 24 bytes into 32\n+      ** output bytes.\n+      **\n+      */\n+      // Lengths under 32 bytes are done with scalar routine\n+      __ cmpl(length, 31);\n+      __ jcc(Assembler::belowEqual, L_process3);\n+\n+      // Set up supporting constant table data\n+      __ vmovdqu(xmm9, ExternalAddress(StubRoutines::x86::base64_avx2_shuffle_addr()), rax);\n+      // 6-bit mask for 2nd and 4th (and multiples) 6-bit values\n+      __ movl(rax, 0x0fc0fc00);\n+      __ vmovdqu(xmm1, ExternalAddress(StubRoutines::x86::base64_avx2_input_mask_addr()), rax);\n+      __ evpbroadcastd(xmm8, rax, Assembler::AVX_256bit);\n+\n+      // Multiplication constant for \"shifting\" right by 6 and 10\n+      // bits\n+      __ movl(rax, 0x04000040);\n+\n+      __ subl(length, 24);\n+      __ evpbroadcastd(xmm7, rax, Assembler::AVX_256bit);\n+\n+      // For the first load, we mask off reading of the first 4\n+      // bytes into the register. This is so we can get 4 3-byte\n+      // chunks into each lane of the register, avoiding having to\n+      // handle end conditions.  We then shuffle these bytes into a\n+      // specific order so that manipulation is easier.\n+      //\n+      // The initial read loads the XMM register like this:\n+      //\n+      // Lower 128-bit lane:\n+      // +----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n+      // | XX | XX | XX | XX | A0 | A1 | A2 | B0 | B1 | B2 | C0 | C1\n+      // | C2 | D0 | D1 | D2 |\n+      // +----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n+      //\n+      // Upper 128-bit lane:\n+      // +----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n+      // | E0 | E1 | E2 | F0 | F1 | F2 | G0 | G1 | G2 | H0 | H1 | H2\n+      // | XX | XX | XX | XX |\n+      // +----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n+      //\n+      // Where A0 is the first input byte, B0 is the fourth, etc.\n+      // The alphabetical significance denotes the 3 bytes to be\n+      // consumed and encoded into 4 bytes.\n+      //\n+      // We then shuffle the register so each 32-bit word contains\n+      // the sequence:\n+      //    A1 A0 A2 A1, B1, B0, B2, B1, etc.\n+      // Each of these byte sequences are then manipulated into 4\n+      // 6-bit values ready for encoding.\n+      //\n+      // If we focus on one set of 3-byte chunks, changing the\n+      // nomenclature such that A0 => a, A1 => b, and A2 => c, we\n+      // shuffle such that each 24-bit chunk contains:\n+      //\n+      // b7 b6 b5 b4 b3 b2 b1 b0 | a7 a6 a5 a4 a3 a2 a1 a0 | c7 c6\n+      // c5 c4 c3 c2 c1 c0 | b7 b6 b5 b4 b3 b2 b1 b0\n+      // Explain this step.\n+      // b3 b2 b1 b0 c5 c4 c3 c2 | c1 c0 d5 d4 d3 d2 d1 d0 | a5 a4\n+      // a3 a2 a1 a0 b5 b4 | b3 b2 b1 b0 c5 c4 c3 c2\n+      //\n+      // W first and off all but bits 4-9 and 16-21 (c5..c0 and\n+      // a5..a0) and shift them using a vector multiplication\n+      // operation (vpmulhuw) which effectively shifts c right by 6\n+      // bits and a right by 10 bits.  We similarly mask bits 10-15\n+      // (d5..d0) and 22-27 (b5..b0) and shift them left by 8 and 4\n+      // bits respecively.  This is done using vpmullw.  We end up\n+      // with 4 6-bit values, thus splitting the 3 input bytes,\n+      // ready for encoding:\n+      //    0 0 d5..d0 0 0 c5..c0 0 0 b5..b0 0 0 a5..a0\n+      //\n+      // For translation, we recognize that there are 5 distinct\n+      // ranges of legal Base64 characters as below:\n+      //\n+      //   +-------------+-------------+------------+\n+      //   | 6-bit value | ASCII range |   offset   |\n+      //   +-------------+-------------+------------+\n+      //   |    0..25    |    A..Z     |     65     |\n+      //   |   26..51    |    a..z     |     71     |\n+      //   |   52..61    |    0..9     |     -4     |\n+      //   |     62      |   + or -    | -19 or -17 |\n+      //   |     63      |   / or _    | -16 or 32  |\n+      //   +-------------+-------------+------------+\n+      //\n+      // We note that vpshufb does a parallel lookup in a\n+      // destination register using the lower 4 bits of bytes from a\n+      // source register.  If we use a saturated subtraction and\n+      // subtract 51 from each 6-bit value, bytes from [0,51]\n+      // saturate to 0, and [52,63] map to a range of [1,12].  We\n+      // distinguish the [0,25] and [26,51] ranges by assigning a\n+      // value of 13 for all 6-bit values less than 26.  We end up\n+      // with:\n+      //\n+      //   +-------------+-------------+------------+\n+      //   | 6-bit value |   Reduced   |   offset   |\n+      //   +-------------+-------------+------------+\n+      //   |    0..25    |     13      |     65     |\n+      //   |   26..51    |      0      |     71     |\n+      //   |   52..61    |    0..9     |     -4     |\n+      //   |     62      |     11      | -19 or -17 |\n+      //   |     63      |     12      | -16 or 32  |\n+      //   +-------------+-------------+------------+\n+      //\n+      // We then use a final vpshufb to add the appropriate offset,\n+      // translating the bytes.\n+      //\n+      // Load input bytes - only 28 bytes.  Mask the first load to\n+      // not load into the full register.\n+      __ vpmaskmovd(xmm1, xmm1, Address(source, start_offset, Address::times_1, -4), Assembler::AVX_256bit);\n+\n+      // Move 3-byte chunks of input (12 bytes) into 16 bytes,\n+      // ordering by:\n+      //   1, 0, 2, 1; 4, 3, 5, 4; etc.  This groups 6-bit chunks\n+      //   for easy masking\n+      __ vpshufb(xmm1, xmm1, xmm9, Assembler::AVX_256bit);\n+\n+      __ addl(start_offset, 24);\n+\n+      // Load masking register for first and third (and multiples)\n+      // 6-bit values.\n+      __ movl(rax, 0x003f03f0);\n+      __ evpbroadcastd(xmm6, rax, Assembler::AVX_256bit);\n+      // Multiplication constant for \"shifting\" left by 4 and 8 bits\n+      __ movl(rax, 0x01000010);\n+      __ evpbroadcastd(xmm5, rax, Assembler::AVX_256bit);\n+\n+      // Isolate 6-bit chunks of interest\n+      __ vpand(xmm0, xmm8, xmm1, Assembler::AVX_256bit);\n+\n+      // Load constants for encoding\n+      __ movl(rax, 0x19191919);\n+      __ evpbroadcastd(xmm3, rax, Assembler::AVX_256bit);\n+      __ movl(rax, 0x33333333);\n+      __ evpbroadcastd(xmm4, rax, Assembler::AVX_256bit);\n+\n+      // Shift output bytes 0 and 2 into proper lanes\n+      __ vpmulhuw(xmm2, xmm0, xmm7, Assembler::AVX_256bit);\n+\n+      // Mask and shift output bytes 1 and 3 into proper lanes and\n+      // combine\n+      __ vpand(xmm0, xmm6, xmm1, Assembler::AVX_256bit);\n+      __ vpmullw(xmm0, xmm5, xmm0, Assembler::AVX_256bit);\n+      __ vpor(xmm0, xmm0, xmm2, Assembler::AVX_256bit);\n+\n+      // Find out which are 0..25.  This indicates which input\n+      // values fall in the range of 'A'-'Z', which require an\n+      // additional offset (see comments above)\n+      __ vpcmpgtb(xmm2, xmm0, xmm3, Assembler::AVX_256bit);\n+      __ vpsubusb(xmm1, xmm0, xmm4, Assembler::AVX_256bit);\n+      __ vpsubb(xmm1, xmm1, xmm2, Assembler::AVX_256bit);\n+\n+      // Load the proper lookup table\n+      __ lea(r11, ExternalAddress(StubRoutines::x86::base64_avx2_lut_addr()));\n+      __ movl(r15, isURL);\n+      __ shll(r15, 5);\n+      __ vmovdqu(xmm2, Address(r11, r15));\n+\n+      // Shuffle the offsets based on the range calculation done\n+      // above. This allows us to add the correct offset to the\n+      // 6-bit value corresponding to the range documented above.\n+      __ vpshufb(xmm1, xmm2, xmm1, Assembler::AVX_256bit);\n+      __ vpaddb(xmm0, xmm1, xmm0, Assembler::AVX_256bit);\n+\n+      // Store the encoded bytes\n+      __ vmovdqu(Address(dest, dp), xmm0);\n+      __ addl(dp, 32);\n+\n+      __ cmpl(length, 31);\n+      __ jcc(Assembler::belowEqual, L_process3);\n+\n+      __ align32();\n+      __ BIND(L_32byteLoop);\n+\n+      // Get next 32 bytes\n+      __ vmovdqu(xmm1, Address(source, start_offset, Address::times_1, -4));\n+\n+      __ subl(length, 24);\n+      __ addl(start_offset, 24);\n+\n+      // This logic is identical to the above, with only constant\n+      // register loads removed.  Shuffle the input, mask off 6-bit\n+      // chunks, shift them into place, then add the offset to\n+      // encode.\n+      __ vpshufb(xmm1, xmm1, xmm9, Assembler::AVX_256bit);\n+\n+      __ vpand(xmm0, xmm8, xmm1, Assembler::AVX_256bit);\n+      __ vpmulhuw(xmm10, xmm0, xmm7, Assembler::AVX_256bit);\n+      __ vpand(xmm0, xmm6, xmm1, Assembler::AVX_256bit);\n+      __ vpmullw(xmm0, xmm5, xmm0, Assembler::AVX_256bit);\n+      __ vpor(xmm0, xmm0, xmm10, Assembler::AVX_256bit);\n+      __ vpcmpgtb(xmm10, xmm0, xmm3, Assembler::AVX_256bit);\n+      __ vpsubusb(xmm1, xmm0, xmm4, Assembler::AVX_256bit);\n+      __ vpsubb(xmm1, xmm1, xmm10, Assembler::AVX_256bit);\n+      __ vpshufb(xmm1, xmm2, xmm1, Assembler::AVX_256bit);\n+      __ vpaddb(xmm0, xmm1, xmm0, Assembler::AVX_256bit);\n+\n+      // Store the encoded bytes\n+      __ vmovdqu(Address(dest, dp), xmm0);\n+      __ addl(dp, 32);\n+\n+      __ cmpl(length, 31);\n+      __ jcc(Assembler::above, L_32byteLoop);\n+\n+      __ BIND(L_process3);\n+      __ vzeroupper();\n+    } else {\n+      __ BIND(L_process3);\n+    }\n+\n+    __ cmpl(length, 3);\n+    __ jcc(Assembler::below, L_exit);\n+\n+    // Load the encoding table based on isURL\n+    __ lea(r11, ExternalAddress(StubRoutines::x86::base64_encoding_table_addr()));\n+    __ movl(r15, isURL);\n+    __ shll(r15, 6);\n+    __ addptr(r11, r15);\n+\n+    __ BIND(L_processdata);\n+\n+    // Load 3 bytes\n+    __ load_unsigned_byte(r15, Address(source, start_offset));\n+    __ load_unsigned_byte(r10, Address(source, start_offset, Address::times_1, 1));\n+    __ load_unsigned_byte(r13, Address(source, start_offset, Address::times_1, 2));\n+\n+    // Build a 32-bit word with bytes 1, 2, 0, 1\n+    __ movl(rax, r10);\n+    __ shll(r10, 24);\n+    __ orl(rax, r10);\n+\n+    __ subl(length, 3);\n+\n+    __ shll(r15, 8);\n+    __ shll(r13, 16);\n+    __ orl(rax, r15);\n+\n+    __ addl(start_offset, 3);\n+\n+    __ orl(rax, r13);\n+    // At this point, rax contains | byte1 | byte2 | byte0 | byte1\n+    // r13 has byte2 << 16 - need low-order 6 bits to translate.\n+    // This translated byte is the fourth output byte.\n+    __ shrl(r13, 16);\n+    __ andl(r13, 0x3f);\n+\n+    // The high-order 6 bits of r15 (byte0) is translated.\n+    // The translated byte is the first output byte.\n+    __ shrl(r15, 10);\n+\n+    __ load_unsigned_byte(r13, Address(r11, r13));\n+    __ load_unsigned_byte(r15, Address(r11, r15));\n+\n+    __ movb(Address(dest, dp, Address::times_1, 3), r13);\n+\n+    // Extract high-order 4 bits of byte1 and low-order 2 bits of byte0.\n+    // This translated byte is the second output byte.\n+    __ shrl(rax, 4);\n+    __ movl(r10, rax);\n+    __ andl(rax, 0x3f);\n+\n+    __ movb(Address(dest, dp, Address::times_1, 0), r15);\n+\n+    __ load_unsigned_byte(rax, Address(r11, rax));\n+\n+    // Extract low-order 2 bits of byte1 and high-order 4 bits of byte2.\n+    // This translated byte is the third output byte.\n+    __ shrl(r10, 18);\n+    __ andl(r10, 0x3f);\n+\n+    __ load_unsigned_byte(r10, Address(r11, r10));\n+\n+    __ movb(Address(dest, dp, Address::times_1, 1), rax);\n+    __ movb(Address(dest, dp, Address::times_1, 2), r10);\n+\n+    __ addl(dp, 4);\n+    __ cmpl(length, 3);\n+    __ jcc(Assembler::aboveEqual, L_processdata);\n+\n+    __ BIND(L_exit);\n+    __ pop(r15);\n+    __ pop(r14);\n+    __ pop(r13);\n+    __ pop(r12);\n+    __ leave();\n+    __ ret(0);\n     return start;\n   }\n \n-  address base64_left_shift_mask_addr() {\n-    __ align(CodeEntryAlignment);\n-    StubCodeMark mark(this, \"StubRoutines\", \"left_shift_mask\");\n+  // base64 AVX512vbmi tables\n+  address base64_vbmi_lookup_lo_addr() {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"lookup_lo_base64\");\n     address start = __ pc();\n-    __ emit_data64(0x0000000200040000, relocInfo::none);\n-    __ emit_data64(0x0000000200040000, relocInfo::none);\n-    __ emit_data64(0x0000000200040000, relocInfo::none);\n-    __ emit_data64(0x0000000200040000, relocInfo::none);\n-    __ emit_data64(0x0000000200040000, relocInfo::none);\n-    __ emit_data64(0x0000000200040000, relocInfo::none);\n-    __ emit_data64(0x0000000200040000, relocInfo::none);\n-    __ emit_data64(0x0000000200040000, relocInfo::none);\n+    assert(((unsigned long long)start & 0x3f) == 0,\n+           \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x3f8080803e808080, relocInfo::none);\n+    __ emit_data64(0x3b3a393837363534, relocInfo::none);\n+    __ emit_data64(0x8080808080803d3c, relocInfo::none);\n+    return start;\n+  }\n \n+  address base64_vbmi_lookup_hi_addr() {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"lookup_hi_base64\");\n+    address start = __ pc();\n+    assert(((unsigned long long)start & 0x3f) == 0,\n+           \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x0605040302010080, relocInfo::none);\n+    __ emit_data64(0x0e0d0c0b0a090807, relocInfo::none);\n+    __ emit_data64(0x161514131211100f, relocInfo::none);\n+    __ emit_data64(0x8080808080191817, relocInfo::none);\n+    __ emit_data64(0x201f1e1d1c1b1a80, relocInfo::none);\n+    __ emit_data64(0x2827262524232221, relocInfo::none);\n+    __ emit_data64(0x302f2e2d2c2b2a29, relocInfo::none);\n+    __ emit_data64(0x8080808080333231, relocInfo::none);\n+    return start;\n+  }\n+  address base64_vbmi_lookup_lo_url_addr() {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"lookup_lo_base64url\");\n+    address start = __ pc();\n+    assert(((unsigned long long)start & 0x3f) == 0,\n+           \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x8080808080808080, relocInfo::none);\n+    __ emit_data64(0x80803e8080808080, relocInfo::none);\n+    __ emit_data64(0x3b3a393837363534, relocInfo::none);\n+    __ emit_data64(0x8080808080803d3c, relocInfo::none);\n     return start;\n   }\n \n-  address base64_and_mask_addr() {\n-    __ align(CodeEntryAlignment);\n-    StubCodeMark mark(this, \"StubRoutines\", \"and_mask\");\n+  address base64_vbmi_lookup_hi_url_addr() {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"lookup_hi_base64url\");\n     address start = __ pc();\n-    __ emit_data64(0x3f003f003f000000, relocInfo::none);\n-    __ emit_data64(0x3f003f003f000000, relocInfo::none);\n-    __ emit_data64(0x3f003f003f000000, relocInfo::none);\n-    __ emit_data64(0x3f003f003f000000, relocInfo::none);\n-    __ emit_data64(0x3f003f003f000000, relocInfo::none);\n-    __ emit_data64(0x3f003f003f000000, relocInfo::none);\n-    __ emit_data64(0x3f003f003f000000, relocInfo::none);\n-    __ emit_data64(0x3f003f003f000000, relocInfo::none);\n+    assert(((unsigned long long)start & 0x3f) == 0,\n+           \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x0605040302010080, relocInfo::none);\n+    __ emit_data64(0x0e0d0c0b0a090807, relocInfo::none);\n+    __ emit_data64(0x161514131211100f, relocInfo::none);\n+    __ emit_data64(0x3f80808080191817, relocInfo::none);\n+    __ emit_data64(0x201f1e1d1c1b1a80, relocInfo::none);\n+    __ emit_data64(0x2827262524232221, relocInfo::none);\n+    __ emit_data64(0x302f2e2d2c2b2a29, relocInfo::none);\n+    __ emit_data64(0x8080808080333231, relocInfo::none);\n     return start;\n   }\n \n-  address base64_gather_mask_addr() {\n-    __ align(CodeEntryAlignment);\n-    StubCodeMark mark(this, \"StubRoutines\", \"gather_mask\");\n+  address base64_vbmi_pack_vec_addr() {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"pack_vec_base64\");\n+    address start = __ pc();\n+    assert(((unsigned long long)start & 0x3f) == 0,\n+           \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x090a040506000102, relocInfo::none);\n+    __ emit_data64(0x161011120c0d0e08, relocInfo::none);\n+    __ emit_data64(0x1c1d1e18191a1415, relocInfo::none);\n+    __ emit_data64(0x292a242526202122, relocInfo::none);\n+    __ emit_data64(0x363031322c2d2e28, relocInfo::none);\n+    __ emit_data64(0x3c3d3e38393a3435, relocInfo::none);\n+    __ emit_data64(0x0000000000000000, relocInfo::none);\n+    __ emit_data64(0x0000000000000000, relocInfo::none);\n+    return start;\n+  }\n+\n+  address base64_vbmi_join_0_1_addr() {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"join_0_1_base64\");\n+    address start = __ pc();\n+    assert(((unsigned long long)start & 0x3f) == 0,\n+           \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x090a040506000102, relocInfo::none);\n+    __ emit_data64(0x161011120c0d0e08, relocInfo::none);\n+    __ emit_data64(0x1c1d1e18191a1415, relocInfo::none);\n+    __ emit_data64(0x292a242526202122, relocInfo::none);\n+    __ emit_data64(0x363031322c2d2e28, relocInfo::none);\n+    __ emit_data64(0x3c3d3e38393a3435, relocInfo::none);\n+    __ emit_data64(0x494a444546404142, relocInfo::none);\n+    __ emit_data64(0x565051524c4d4e48, relocInfo::none);\n+    return start;\n+  }\n+\n+  address base64_vbmi_join_1_2_addr() {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"join_1_2_base64\");\n+    address start = __ pc();\n+    assert(((unsigned long long)start & 0x3f) == 0,\n+           \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x1c1d1e18191a1415, relocInfo::none);\n+    __ emit_data64(0x292a242526202122, relocInfo::none);\n+    __ emit_data64(0x363031322c2d2e28, relocInfo::none);\n+    __ emit_data64(0x3c3d3e38393a3435, relocInfo::none);\n+    __ emit_data64(0x494a444546404142, relocInfo::none);\n+    __ emit_data64(0x565051524c4d4e48, relocInfo::none);\n+    __ emit_data64(0x5c5d5e58595a5455, relocInfo::none);\n+    __ emit_data64(0x696a646566606162, relocInfo::none);\n+    return start;\n+  }\n+\n+  address base64_vbmi_join_2_3_addr() {\n+    __ align64();\n+    StubCodeMark mark(this, \"StubRoutines\", \"join_2_3_base64\");\n+    address start = __ pc();\n+    assert(((unsigned long long)start & 0x3f) == 0,\n+           \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+    __ emit_data64(0x363031322c2d2e28, relocInfo::none);\n+    __ emit_data64(0x3c3d3e38393a3435, relocInfo::none);\n+    __ emit_data64(0x494a444546404142, relocInfo::none);\n+    __ emit_data64(0x565051524c4d4e48, relocInfo::none);\n+    __ emit_data64(0x5c5d5e58595a5455, relocInfo::none);\n+    __ emit_data64(0x696a646566606162, relocInfo::none);\n+    __ emit_data64(0x767071726c6d6e68, relocInfo::none);\n+    __ emit_data64(0x7c7d7e78797a7475, relocInfo::none);\n+    return start;\n+  }\n+\n+  address base64_decoding_table_addr() {\n+    StubCodeMark mark(this, \"StubRoutines\", \"decoding_table_base64\");\n     address start = __ pc();\n     __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0x3fffffff3effffff, relocInfo::none);\n+    __ emit_data64(0x3b3a393837363534, relocInfo::none);\n+    __ emit_data64(0xffffffffffff3d3c, relocInfo::none);\n+    __ emit_data64(0x06050403020100ff, relocInfo::none);\n+    __ emit_data64(0x0e0d0c0b0a090807, relocInfo::none);\n+    __ emit_data64(0x161514131211100f, relocInfo::none);\n+    __ emit_data64(0xffffffffff191817, relocInfo::none);\n+    __ emit_data64(0x201f1e1d1c1b1aff, relocInfo::none);\n+    __ emit_data64(0x2827262524232221, relocInfo::none);\n+    __ emit_data64(0x302f2e2d2c2b2a29, relocInfo::none);\n+    __ emit_data64(0xffffffffff333231, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+\n+    // URL table\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffff3effffffffff, relocInfo::none);\n+    __ emit_data64(0x3b3a393837363534, relocInfo::none);\n+    __ emit_data64(0xffffffffffff3d3c, relocInfo::none);\n+    __ emit_data64(0x06050403020100ff, relocInfo::none);\n+    __ emit_data64(0x0e0d0c0b0a090807, relocInfo::none);\n+    __ emit_data64(0x161514131211100f, relocInfo::none);\n+    __ emit_data64(0x3fffffffff191817, relocInfo::none);\n+    __ emit_data64(0x201f1e1d1c1b1aff, relocInfo::none);\n+    __ emit_data64(0x2827262524232221, relocInfo::none);\n+    __ emit_data64(0x302f2e2d2c2b2a29, relocInfo::none);\n+    __ emit_data64(0xffffffffff333231, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+    __ emit_data64(0xffffffffffffffff, relocInfo::none);\n     return start;\n   }\n \n-// Code for generating Base64 encoding.\n+\n+// Code for generating Base64 decoding.\n+//\n+// Based on the article (and associated code) from https://arxiv.org/abs/1910.05109.\n+//\n // Intrinsic function prototype in Base64.java:\n-// private void encodeBlock(byte[] src, int sp, int sl, byte[] dst, int dp, boolean isURL) {\n-  address generate_base64_encodeBlock() {\n+// private void decodeBlock(byte[] src, int sp, int sl, byte[] dst, int dp, boolean isURL, isMIME) {\n+  address generate_base64_decodeBlock() {\n     __ align(CodeEntryAlignment);\n-    StubCodeMark mark(this, \"StubRoutines\", \"implEncode\");\n+    StubCodeMark mark(this, \"StubRoutines\", \"implDecode\");\n     address start = __ pc();\n     __ enter();\n \n@@ -5453,236 +5980,427 @@ address generate_avx_ghash_processBlocks() {\n     __ push(r13);\n     __ push(r14);\n     __ push(r15);\n+    __ push(rbx);\n \n     // arguments\n     const Register source = c_rarg0; // Source Array\n     const Register start_offset = c_rarg1; // start offset\n     const Register end_offset = c_rarg2; // end offset\n     const Register dest = c_rarg3; // destination array\n+    const Register isMIME = rbx;\n \n #ifndef _WIN64\n     const Register dp = c_rarg4;  // Position for writing to dest array\n     const Register isURL = c_rarg5;// Base64 or URL character set\n+    __ movl(isMIME, Address(rbp, 2 * wordSize));\n #else\n     const Address  dp_mem(rbp, 6 * wordSize);  // length is on stack on Win64\n     const Address isURL_mem(rbp, 7 * wordSize);\n     const Register isURL = r10;      // pick the volatile windows register\n     const Register dp = r12;\n     __ movl(dp, dp_mem);\n     __ movl(isURL, isURL_mem);\n+    __ movl(isMIME, Address(rbp, 8 * wordSize));\n #endif\n \n+    const XMMRegister lookup_lo = xmm5;\n+    const XMMRegister lookup_hi = xmm6;\n+    const XMMRegister errorvec = xmm7;\n+    const XMMRegister pack16_op = xmm9;\n+    const XMMRegister pack32_op = xmm8;\n+    const XMMRegister input0 = xmm3;\n+    const XMMRegister input1 = xmm20;\n+    const XMMRegister input2 = xmm21;\n+    const XMMRegister input3 = xmm19;\n+    const XMMRegister join01 = xmm12;\n+    const XMMRegister join12 = xmm11;\n+    const XMMRegister join23 = xmm10;\n+    const XMMRegister translated0 = xmm2;\n+    const XMMRegister translated1 = xmm1;\n+    const XMMRegister translated2 = xmm0;\n+    const XMMRegister translated3 = xmm4;\n+\n+    const XMMRegister merged0 = xmm2;\n+    const XMMRegister merged1 = xmm1;\n+    const XMMRegister merged2 = xmm0;\n+    const XMMRegister merged3 = xmm4;\n+    const XMMRegister merge_ab_bc0 = xmm2;\n+    const XMMRegister merge_ab_bc1 = xmm1;\n+    const XMMRegister merge_ab_bc2 = xmm0;\n+    const XMMRegister merge_ab_bc3 = xmm4;\n+\n+    const XMMRegister pack24bits = xmm4;\n+\n     const Register length = r14;\n-    Label L_process80, L_process32, L_process3, L_exit, L_processdata;\n+    const Register output_size = r13;\n+    const Register output_mask = r15;\n+    const KRegister input_mask = k1;\n+\n+    const XMMRegister input_initial_valid_b64 = xmm0;\n+    const XMMRegister tmp = xmm10;\n+    const XMMRegister mask = xmm0;\n+    const XMMRegister invalid_b64 = xmm1;\n+\n+    Label L_process256, L_process64, L_process64Loop, L_exit, L_processdata, L_loadURL;\n+    Label L_continue, L_finalBit, L_padding, L_donePadding, L_bruteForce;\n+    Label L_forceLoop, L_bottomLoop, L_checkMIME, L_exit_no_vzero;\n \n     // calculate length from offsets\n     __ movl(length, end_offset);\n     __ subl(length, start_offset);\n-    __ cmpl(length, 0);\n-    __ jcc(Assembler::lessEqual, L_exit);\n+    __ push(dest);          // Save for return value calc\n+\n+    // If AVX512 VBMI not supported, just compile non-AVX code\n+    if(VM_Version::supports_avx512_vbmi() &&\n+       VM_Version::supports_avx512bw()) {\n+      __ cmpl(length, 128);     // 128-bytes is break-even for AVX-512\n+      __ jcc(Assembler::lessEqual, L_bruteForce);\n+\n+      __ cmpl(isMIME, 0);\n+      __ jcc(Assembler::notEqual, L_bruteForce);\n+\n+      // Load lookup tables based on isURL\n+      __ cmpl(isURL, 0);\n+      __ jcc(Assembler::notZero, L_loadURL);\n+\n+      __ evmovdquq(lookup_lo, ExternalAddress(StubRoutines::x86::base64_vbmi_lookup_lo_addr()), Assembler::AVX_512bit, r13);\n+      __ evmovdquq(lookup_hi, ExternalAddress(StubRoutines::x86::base64_vbmi_lookup_hi_addr()), Assembler::AVX_512bit, r13);\n+\n+      __ BIND(L_continue);\n+\n+      __ movl(r15, 0x01400140);\n+      __ evpbroadcastd(pack16_op, r15, Assembler::AVX_512bit);\n+\n+      __ movl(r15, 0x00011000);\n+      __ evpbroadcastd(pack32_op, r15, Assembler::AVX_512bit);\n+\n+      __ cmpl(length, 0xff);\n+      __ jcc(Assembler::lessEqual, L_process64);\n+\n+      // load masks required for decoding data\n+      __ BIND(L_processdata);\n+      __ evmovdquq(join01, ExternalAddress(StubRoutines::x86::base64_vbmi_join_0_1_addr()), Assembler::AVX_512bit,r13);\n+      __ evmovdquq(join12, ExternalAddress(StubRoutines::x86::base64_vbmi_join_1_2_addr()), Assembler::AVX_512bit, r13);\n+      __ evmovdquq(join23, ExternalAddress(StubRoutines::x86::base64_vbmi_join_2_3_addr()), Assembler::AVX_512bit, r13);\n+\n+      __ align32();\n+      __ BIND(L_process256);\n+      // Grab input data\n+      __ evmovdquq(input0, Address(source, start_offset, Address::times_1, 0x00), Assembler::AVX_512bit);\n+      __ evmovdquq(input1, Address(source, start_offset, Address::times_1, 0x40), Assembler::AVX_512bit);\n+      __ evmovdquq(input2, Address(source, start_offset, Address::times_1, 0x80), Assembler::AVX_512bit);\n+      __ evmovdquq(input3, Address(source, start_offset, Address::times_1, 0xc0), Assembler::AVX_512bit);\n+\n+      // Copy the low part of the lookup table into the destination of the permutation\n+      __ evmovdquq(translated0, lookup_lo, Assembler::AVX_512bit);\n+      __ evmovdquq(translated1, lookup_lo, Assembler::AVX_512bit);\n+      __ evmovdquq(translated2, lookup_lo, Assembler::AVX_512bit);\n+      __ evmovdquq(translated3, lookup_lo, Assembler::AVX_512bit);\n+\n+      // Translate the base64 input into \"decoded\" bytes\n+      __ evpermt2b(translated0, input0, lookup_hi, Assembler::AVX_512bit);\n+      __ evpermt2b(translated1, input1, lookup_hi, Assembler::AVX_512bit);\n+      __ evpermt2b(translated2, input2, lookup_hi, Assembler::AVX_512bit);\n+      __ evpermt2b(translated3, input3, lookup_hi, Assembler::AVX_512bit);\n+\n+      // OR all of the translations together to check for errors (high-order bit of byte set)\n+      __ vpternlogd(input0, 0xfe, input1, input2, Assembler::AVX_512bit);\n+\n+      __ vpternlogd(input3, 0xfe, translated0, translated1, Assembler::AVX_512bit);\n+      __ vpternlogd(input0, 0xfe, translated2, translated3, Assembler::AVX_512bit);\n+      __ vpor(errorvec, input3, input0, Assembler::AVX_512bit);\n+\n+      // Check if there was an error - if so, try 64-byte chunks\n+      __ evpmovb2m(k3, errorvec, Assembler::AVX_512bit);\n+      __ kortestql(k3, k3);\n+      __ jcc(Assembler::notZero, L_process64);\n+\n+      // The merging and shuffling happens here\n+      // We multiply each byte pair [00dddddd | 00cccccc | 00bbbbbb | 00aaaaaa]\n+      // Multiply [00cccccc] by 2^6 added to [00dddddd] to get [0000cccc | ccdddddd]\n+      // The pack16_op is a vector of 0x01400140, so multiply D by 1 and C by 0x40\n+      __ vpmaddubsw(merge_ab_bc0, translated0, pack16_op, Assembler::AVX_512bit);\n+      __ vpmaddubsw(merge_ab_bc1, translated1, pack16_op, Assembler::AVX_512bit);\n+      __ vpmaddubsw(merge_ab_bc2, translated2, pack16_op, Assembler::AVX_512bit);\n+      __ vpmaddubsw(merge_ab_bc3, translated3, pack16_op, Assembler::AVX_512bit);\n+\n+      // Now do the same with packed 16-bit values.\n+      // We start with [0000cccc | ccdddddd | 0000aaaa | aabbbbbb]\n+      // pack32_op is 0x00011000 (2^12, 1), so this multiplies [0000aaaa | aabbbbbb] by 2^12\n+      // and adds [0000cccc | ccdddddd] to yield [00000000 | aaaaaabb | bbbbcccc | ccdddddd]\n+      __ vpmaddwd(merged0, merge_ab_bc0, pack32_op, Assembler::AVX_512bit);\n+      __ vpmaddwd(merged1, merge_ab_bc1, pack32_op, Assembler::AVX_512bit);\n+      __ vpmaddwd(merged2, merge_ab_bc2, pack32_op, Assembler::AVX_512bit);\n+      __ vpmaddwd(merged3, merge_ab_bc3, pack32_op, Assembler::AVX_512bit);\n+\n+      // The join vectors specify which byte from which vector goes into the outputs\n+      // One of every 4 bytes in the extended vector is zero, so we pack them into their\n+      // final positions in the register for storing (256 bytes in, 192 bytes out)\n+      __ evpermt2b(merged0, join01, merged1, Assembler::AVX_512bit);\n+      __ evpermt2b(merged1, join12, merged2, Assembler::AVX_512bit);\n+      __ evpermt2b(merged2, join23, merged3, Assembler::AVX_512bit);\n+\n+      // Store result\n+      __ evmovdquq(Address(dest, dp, Address::times_1, 0x00), merged0, Assembler::AVX_512bit);\n+      __ evmovdquq(Address(dest, dp, Address::times_1, 0x40), merged1, Assembler::AVX_512bit);\n+      __ evmovdquq(Address(dest, dp, Address::times_1, 0x80), merged2, Assembler::AVX_512bit);\n+\n+      __ addptr(source, 0x100);\n+      __ addptr(dest, 0xc0);\n+      __ subl(length, 0x100);\n+      __ cmpl(length, 64 * 4);\n+      __ jcc(Assembler::greaterEqual, L_process256);\n+\n+      // At this point, we've decoded 64 * 4 * n bytes.\n+      // The remaining length will be <= 64 * 4 - 1.\n+      // UNLESS there was an error decoding the first 256-byte chunk.  In this\n+      // case, the length will be arbitrarily long.\n+      //\n+      // Note that this will be the path for MIME-encoded strings.\n+\n+      __ BIND(L_process64);\n+\n+      __ evmovdquq(pack24bits, ExternalAddress(StubRoutines::x86::base64_vbmi_pack_vec_addr()), Assembler::AVX_512bit, r13);\n+\n+      __ cmpl(length, 63);\n+      __ jcc(Assembler::lessEqual, L_finalBit);\n+\n+      __ mov64(rax, 0x0000ffffffffffff);\n+      __ kmovql(k2, rax);\n+\n+      __ align32();\n+      __ BIND(L_process64Loop);\n+\n+      // Handle first 64-byte block\n+\n+      __ evmovdquq(input0, Address(source, start_offset), Assembler::AVX_512bit);\n+      __ evmovdquq(translated0, lookup_lo, Assembler::AVX_512bit);\n+      __ evpermt2b(translated0, input0, lookup_hi, Assembler::AVX_512bit);\n+\n+      __ vpor(errorvec, translated0, input0, Assembler::AVX_512bit);\n+\n+      // Check for error and bomb out before updating dest\n+      __ evpmovb2m(k3, errorvec, Assembler::AVX_512bit);\n+      __ kortestql(k3, k3);\n+      __ jcc(Assembler::notZero, L_exit);\n+\n+      // Pack output register, selecting correct byte ordering\n+      __ vpmaddubsw(merge_ab_bc0, translated0, pack16_op, Assembler::AVX_512bit);\n+      __ vpmaddwd(merged0, merge_ab_bc0, pack32_op, Assembler::AVX_512bit);\n+      __ vpermb(merged0, pack24bits, merged0, Assembler::AVX_512bit);\n+\n+      __ evmovdqub(Address(dest, dp), k2, merged0, true, Assembler::AVX_512bit);\n+\n+      __ subl(length, 64);\n+      __ addptr(source, 64);\n+      __ addptr(dest, 48);\n+\n+      __ cmpl(length, 64);\n+      __ jcc(Assembler::greaterEqual, L_process64Loop);\n+\n+      __ cmpl(length, 0);\n+      __ jcc(Assembler::lessEqual, L_exit);\n \n-    __ lea(r11, ExternalAddress(StubRoutines::x86::base64_charset_addr()));\n-    // check if base64 charset(isURL=0) or base64 url charset(isURL=1) needs to be loaded\n-    __ cmpl(isURL, 0);\n-    __ jcc(Assembler::equal, L_processdata);\n-    __ lea(r11, ExternalAddress(StubRoutines::x86::base64url_charset_addr()));\n+      __ BIND(L_finalBit);\n+      // Now have 1 to 63 bytes left to decode\n+\n+      // I was going to let Java take care of the final fragment\n+      // however it will repeatedly call this routine for every 4 bytes\n+      // of input data, so handle the rest here.\n+      __ movq(rax, -1);\n+      __ bzhiq(rax, rax, length);    // Input mask in rax\n+\n+      __ movl(output_size, length);\n+      __ shrl(output_size, 2);   // Find (len / 4) * 3 (output length)\n+      __ lea(output_size, Address(output_size, output_size, Address::times_2, 0));\n+      // output_size in r13\n+\n+      // Strip pad characters, if any, and adjust length and mask\n+      __ cmpb(Address(source, length, Address::times_1, -1), '=');\n+      __ jcc(Assembler::equal, L_padding);\n+\n+      __ BIND(L_donePadding);\n+\n+      // Output size is (64 - output_size), output mask is (all 1s >> output_size).\n+      __ kmovql(input_mask, rax);\n+      __ movq(output_mask, -1);\n+      __ bzhiq(output_mask, output_mask, output_size);\n+\n+      // Load initial input with all valid base64 characters.  Will be used\n+      // in merging source bytes to avoid masking when determining if an error occurred.\n+      __ movl(rax, 0x61616161);\n+      __ evpbroadcastd(input_initial_valid_b64, rax, Assembler::AVX_512bit);\n+\n+      // A register containing all invalid base64 decoded values\n+      __ movl(rax, 0x80808080);\n+      __ evpbroadcastd(invalid_b64, rax, Assembler::AVX_512bit);\n+\n+      // input_mask is in k1\n+      // output_size is in r13\n+      // output_mask is in r15\n+      // zmm0 - free\n+      // zmm1 - 0x00011000\n+      // zmm2 - 0x01400140\n+      // zmm3 - errorvec\n+      // zmm4 - pack vector\n+      // zmm5 - lookup_lo\n+      // zmm6 - lookup_hi\n+      // zmm7 - errorvec\n+      // zmm8 - 0x61616161\n+      // zmm9 - 0x80808080\n+\n+      // Load only the bytes from source, merging into our \"fully-valid\" register\n+      __ evmovdqub(input_initial_valid_b64, input_mask, Address(source, start_offset, Address::times_1, 0x0), true, Assembler::AVX_512bit);\n+\n+      // Decode all bytes within our merged input\n+      __ evmovdquq(tmp, lookup_lo, Assembler::AVX_512bit);\n+      __ evpermt2b(tmp, input_initial_valid_b64, lookup_hi, Assembler::AVX_512bit);\n+      __ vporq(mask, tmp, input_initial_valid_b64, Assembler::AVX_512bit);\n+\n+      // Check for error.  Compare (decoded | initial) to all invalid.\n+      // If any bytes have their high-order bit set, then we have an error.\n+      __ evptestmb(k2, mask, invalid_b64, Assembler::AVX_512bit);\n+      __ kortestql(k2, k2);\n+\n+      // If we have an error, use the brute force loop to decode what we can (4-byte chunks).\n+      __ jcc(Assembler::notZero, L_bruteForce);\n+\n+      // Shuffle output bytes\n+      __ vpmaddubsw(tmp, tmp, pack16_op, Assembler::AVX_512bit);\n+      __ vpmaddwd(tmp, tmp, pack32_op, Assembler::AVX_512bit);\n+\n+      __ vpermb(tmp, pack24bits, tmp, Assembler::AVX_512bit);\n+      __ kmovql(k1, output_mask);\n+      __ evmovdqub(Address(dest, dp), k1, tmp, true, Assembler::AVX_512bit);\n+\n+      __ addptr(dest, output_size);\n \n-    // load masks required for encoding data\n-    __ BIND(L_processdata);\n-    __ movdqu(xmm16, ExternalAddress(StubRoutines::x86::base64_gather_mask_addr()));\n-    // Set 64 bits of K register.\n-    __ evpcmpeqb(k3, xmm16, xmm16, Assembler::AVX_512bit);\n-    __ evmovdquq(xmm12, ExternalAddress(StubRoutines::x86::base64_bswap_mask_addr()), Assembler::AVX_256bit, r13);\n-    __ evmovdquq(xmm13, ExternalAddress(StubRoutines::x86::base64_right_shift_mask_addr()), Assembler::AVX_512bit, r13);\n-    __ evmovdquq(xmm14, ExternalAddress(StubRoutines::x86::base64_left_shift_mask_addr()), Assembler::AVX_512bit, r13);\n-    __ evmovdquq(xmm15, ExternalAddress(StubRoutines::x86::base64_and_mask_addr()), Assembler::AVX_512bit, r13);\n-\n-    // Vector Base64 implementation, producing 96 bytes of encoded data\n-    __ BIND(L_process80);\n-    __ cmpl(length, 80);\n-    __ jcc(Assembler::below, L_process32);\n-    __ evmovdquq(xmm0, Address(source, start_offset, Address::times_1, 0), Assembler::AVX_256bit);\n-    __ evmovdquq(xmm1, Address(source, start_offset, Address::times_1, 24), Assembler::AVX_256bit);\n-    __ evmovdquq(xmm2, Address(source, start_offset, Address::times_1, 48), Assembler::AVX_256bit);\n-\n-    //permute the input data in such a manner that we have continuity of the source\n-    __ vpermq(xmm3, xmm0, 148, Assembler::AVX_256bit);\n-    __ vpermq(xmm4, xmm1, 148, Assembler::AVX_256bit);\n-    __ vpermq(xmm5, xmm2, 148, Assembler::AVX_256bit);\n-\n-    //shuffle input and group 3 bytes of data and to it add 0 as the 4th byte.\n-    //we can deal with 12 bytes at a time in a 128 bit register\n-    __ vpshufb(xmm3, xmm3, xmm12, Assembler::AVX_256bit);\n-    __ vpshufb(xmm4, xmm4, xmm12, Assembler::AVX_256bit);\n-    __ vpshufb(xmm5, xmm5, xmm12, Assembler::AVX_256bit);\n-\n-    //convert byte to word. Each 128 bit register will have 6 bytes for processing\n-    __ vpmovzxbw(xmm3, xmm3, Assembler::AVX_512bit);\n-    __ vpmovzxbw(xmm4, xmm4, Assembler::AVX_512bit);\n-    __ vpmovzxbw(xmm5, xmm5, Assembler::AVX_512bit);\n-\n-    // Extract bits in the following pattern 6, 4+2, 2+4, 6 to convert 3, 8 bit numbers to 4, 6 bit numbers\n-    __ evpsrlvw(xmm0, xmm3, xmm13,  Assembler::AVX_512bit);\n-    __ evpsrlvw(xmm1, xmm4, xmm13, Assembler::AVX_512bit);\n-    __ evpsrlvw(xmm2, xmm5, xmm13, Assembler::AVX_512bit);\n-\n-    __ evpsllvw(xmm3, xmm3, xmm14, Assembler::AVX_512bit);\n-    __ evpsllvw(xmm4, xmm4, xmm14, Assembler::AVX_512bit);\n-    __ evpsllvw(xmm5, xmm5, xmm14, Assembler::AVX_512bit);\n-\n-    __ vpsrlq(xmm0, xmm0, 8, Assembler::AVX_512bit);\n-    __ vpsrlq(xmm1, xmm1, 8, Assembler::AVX_512bit);\n-    __ vpsrlq(xmm2, xmm2, 8, Assembler::AVX_512bit);\n-\n-    __ vpsllq(xmm3, xmm3, 8, Assembler::AVX_512bit);\n-    __ vpsllq(xmm4, xmm4, 8, Assembler::AVX_512bit);\n-    __ vpsllq(xmm5, xmm5, 8, Assembler::AVX_512bit);\n-\n-    __ vpandq(xmm3, xmm3, xmm15, Assembler::AVX_512bit);\n-    __ vpandq(xmm4, xmm4, xmm15, Assembler::AVX_512bit);\n-    __ vpandq(xmm5, xmm5, xmm15, Assembler::AVX_512bit);\n-\n-    // Get the final 4*6 bits base64 encoding\n-    __ vporq(xmm3, xmm3, xmm0, Assembler::AVX_512bit);\n-    __ vporq(xmm4, xmm4, xmm1, Assembler::AVX_512bit);\n-    __ vporq(xmm5, xmm5, xmm2, Assembler::AVX_512bit);\n-\n-    // Shift\n-    __ vpsrlq(xmm3, xmm3, 8, Assembler::AVX_512bit);\n-    __ vpsrlq(xmm4, xmm4, 8, Assembler::AVX_512bit);\n-    __ vpsrlq(xmm5, xmm5, 8, Assembler::AVX_512bit);\n-\n-    // look up 6 bits in the base64 character set to fetch the encoding\n-    // we are converting word to dword as gather instructions need dword indices for looking up encoding\n-    __ vextracti64x4(xmm6, xmm3, 0);\n-    __ vpmovzxwd(xmm0, xmm6, Assembler::AVX_512bit);\n-    __ vextracti64x4(xmm6, xmm3, 1);\n-    __ vpmovzxwd(xmm1, xmm6, Assembler::AVX_512bit);\n-\n-    __ vextracti64x4(xmm6, xmm4, 0);\n-    __ vpmovzxwd(xmm2, xmm6, Assembler::AVX_512bit);\n-    __ vextracti64x4(xmm6, xmm4, 1);\n-    __ vpmovzxwd(xmm3, xmm6, Assembler::AVX_512bit);\n-\n-    __ vextracti64x4(xmm4, xmm5, 0);\n-    __ vpmovzxwd(xmm6, xmm4, Assembler::AVX_512bit);\n-\n-    __ vextracti64x4(xmm4, xmm5, 1);\n-    __ vpmovzxwd(xmm7, xmm4, Assembler::AVX_512bit);\n-\n-    __ kmovql(k2, k3);\n-    __ evpgatherdd(xmm4, k2, Address(r11, xmm0, Address::times_4, 0), Assembler::AVX_512bit);\n-    __ kmovql(k2, k3);\n-    __ evpgatherdd(xmm5, k2, Address(r11, xmm1, Address::times_4, 0), Assembler::AVX_512bit);\n-    __ kmovql(k2, k3);\n-    __ evpgatherdd(xmm8, k2, Address(r11, xmm2, Address::times_4, 0), Assembler::AVX_512bit);\n-    __ kmovql(k2, k3);\n-    __ evpgatherdd(xmm9, k2, Address(r11, xmm3, Address::times_4, 0), Assembler::AVX_512bit);\n-    __ kmovql(k2, k3);\n-    __ evpgatherdd(xmm10, k2, Address(r11, xmm6, Address::times_4, 0), Assembler::AVX_512bit);\n-    __ kmovql(k2, k3);\n-    __ evpgatherdd(xmm11, k2, Address(r11, xmm7, Address::times_4, 0), Assembler::AVX_512bit);\n-\n-    //Down convert dword to byte. Final output is 16*6 = 96 bytes long\n-    __ evpmovdb(Address(dest, dp, Address::times_1, 0), xmm4, Assembler::AVX_512bit);\n-    __ evpmovdb(Address(dest, dp, Address::times_1, 16), xmm5, Assembler::AVX_512bit);\n-    __ evpmovdb(Address(dest, dp, Address::times_1, 32), xmm8, Assembler::AVX_512bit);\n-    __ evpmovdb(Address(dest, dp, Address::times_1, 48), xmm9, Assembler::AVX_512bit);\n-    __ evpmovdb(Address(dest, dp, Address::times_1, 64), xmm10, Assembler::AVX_512bit);\n-    __ evpmovdb(Address(dest, dp, Address::times_1, 80), xmm11, Assembler::AVX_512bit);\n-\n-    __ addq(dest, 96);\n-    __ addq(source, 72);\n-    __ subq(length, 72);\n-    __ jmp(L_process80);\n-\n-    // Vector Base64 implementation generating 32 bytes of encoded data\n-    __ BIND(L_process32);\n-    __ cmpl(length, 32);\n-    __ jcc(Assembler::below, L_process3);\n-    __ evmovdquq(xmm0, Address(source, start_offset), Assembler::AVX_256bit);\n-    __ vpermq(xmm0, xmm0, 148, Assembler::AVX_256bit);\n-    __ vpshufb(xmm6, xmm0, xmm12, Assembler::AVX_256bit);\n-    __ vpmovzxbw(xmm6, xmm6, Assembler::AVX_512bit);\n-    __ evpsrlvw(xmm2, xmm6, xmm13, Assembler::AVX_512bit);\n-    __ evpsllvw(xmm3, xmm6, xmm14, Assembler::AVX_512bit);\n-\n-    __ vpsrlq(xmm2, xmm2, 8, Assembler::AVX_512bit);\n-    __ vpsllq(xmm3, xmm3, 8, Assembler::AVX_512bit);\n-    __ vpandq(xmm3, xmm3, xmm15, Assembler::AVX_512bit);\n-    __ vporq(xmm1, xmm2, xmm3, Assembler::AVX_512bit);\n-    __ vpsrlq(xmm1, xmm1, 8, Assembler::AVX_512bit);\n-    __ vextracti64x4(xmm9, xmm1, 0);\n-    __ vpmovzxwd(xmm6, xmm9, Assembler::AVX_512bit);\n-    __ vextracti64x4(xmm9, xmm1, 1);\n-    __ vpmovzxwd(xmm5, xmm9,  Assembler::AVX_512bit);\n-    __ kmovql(k2, k3);\n-    __ evpgatherdd(xmm8, k2, Address(r11, xmm6, Address::times_4, 0), Assembler::AVX_512bit);\n-    __ kmovql(k2, k3);\n-    __ evpgatherdd(xmm10, k2, Address(r11, xmm5, Address::times_4, 0), Assembler::AVX_512bit);\n-    __ evpmovdb(Address(dest, dp, Address::times_1, 0), xmm8, Assembler::AVX_512bit);\n-    __ evpmovdb(Address(dest, dp, Address::times_1, 16), xmm10, Assembler::AVX_512bit);\n-    __ subq(length, 24);\n-    __ addq(dest, 32);\n-    __ addq(source, 24);\n-    __ jmp(L_process32);\n-\n-    // Scalar data processing takes 3 bytes at a time and produces 4 bytes of encoded data\n-    /* This code corresponds to the scalar version of the following snippet in Base64.java\n-    ** int bits = (src[sp0++] & 0xff) << 16 |(src[sp0++] & 0xff) << 8 |(src[sp0++] & 0xff);\n-    ** dst[dp0++] = (byte)base64[(bits >> > 18) & 0x3f];\n-    ** dst[dp0++] = (byte)base64[(bits >> > 12) & 0x3f];\n-    ** dst[dp0++] = (byte)base64[(bits >> > 6) & 0x3f];\n-    ** dst[dp0++] = (byte)base64[bits & 0x3f];*/\n-    __ BIND(L_process3);\n-    __ cmpl(length, 3);\n-    __ jcc(Assembler::below, L_exit);\n-    // Read 1 byte at a time\n-    __ movzbl(rax, Address(source, start_offset));\n-    __ shll(rax, 0x10);\n-    __ movl(r15, rax);\n-    __ movzbl(rax, Address(source, start_offset, Address::times_1, 1));\n-    __ shll(rax, 0x8);\n-    __ movzwl(rax, rax);\n-    __ orl(r15, rax);\n-    __ movzbl(rax, Address(source, start_offset, Address::times_1, 2));\n-    __ orl(rax, r15);\n-    // Save 3 bytes read in r15\n-    __ movl(r15, rax);\n-    __ shrl(rax, 0x12);\n-    __ andl(rax, 0x3f);\n-    // rax contains the index, r11 contains base64 lookup table\n-    __ movb(rax, Address(r11, rax, Address::times_4));\n-    // Write the encoded byte to destination\n-    __ movb(Address(dest, dp, Address::times_1, 0), rax);\n-    __ movl(rax, r15);\n-    __ shrl(rax, 0xc);\n-    __ andl(rax, 0x3f);\n-    __ movb(rax, Address(r11, rax, Address::times_4));\n-    __ movb(Address(dest, dp, Address::times_1, 1), rax);\n-    __ movl(rax, r15);\n-    __ shrl(rax, 0x6);\n-    __ andl(rax, 0x3f);\n-    __ movb(rax, Address(r11, rax, Address::times_4));\n-    __ movb(Address(dest, dp, Address::times_1, 2), rax);\n-    __ movl(rax, r15);\n-    __ andl(rax, 0x3f);\n-    __ movb(rax, Address(r11, rax, Address::times_4));\n-    __ movb(Address(dest, dp, Address::times_1, 3), rax);\n-    __ subl(length, 3);\n-    __ addq(dest, 4);\n-    __ addq(source, 3);\n-    __ jmp(L_process3);\n-    __ BIND(L_exit);\n+      __ BIND(L_exit);\n+      __ vzeroupper();\n+      __ pop(rax);             // Get original dest value\n+      __ subptr(dest, rax);      // Number of bytes converted\n+      __ movptr(rax, dest);\n+      __ pop(rbx);\n+      __ pop(r15);\n+      __ pop(r14);\n+      __ pop(r13);\n+      __ pop(r12);\n+      __ leave();\n+      __ ret(0);\n+\n+      __ BIND(L_loadURL);\n+      __ evmovdquq(lookup_lo, ExternalAddress(StubRoutines::x86::base64_vbmi_lookup_lo_url_addr()), Assembler::AVX_512bit, r13);\n+      __ evmovdquq(lookup_hi, ExternalAddress(StubRoutines::x86::base64_vbmi_lookup_hi_url_addr()), Assembler::AVX_512bit, r13);\n+      __ jmp(L_continue);\n+\n+      __ BIND(L_padding);\n+      __ decrementq(output_size, 1);\n+      __ shrq(rax, 1);\n+\n+      __ cmpb(Address(source, length, Address::times_1, -2), '=');\n+      __ jcc(Assembler::notEqual, L_donePadding);\n+\n+      __ decrementq(output_size, 1);\n+      __ shrq(rax, 1);\n+      __ jmp(L_donePadding);\n+\n+      __ align32();\n+      __ BIND(L_bruteForce);\n+    }   // End of if(avx512_vbmi)\n+\n+    // Use non-AVX code to decode 4-byte chunks into 3 bytes of output\n+\n+    // Register state (Linux):\n+    // r12-15 - saved on stack\n+    // rdi - src\n+    // rsi - sp\n+    // rdx - sl\n+    // rcx - dst\n+    // r8 - dp\n+    // r9 - isURL\n+\n+    // Register state (Windows):\n+    // r12-15 - saved on stack\n+    // rcx - src\n+    // rdx - sp\n+    // r8 - sl\n+    // r9 - dst\n+    // r12 - dp\n+    // r10 - isURL\n+\n+    // Registers (common):\n+    // length (r14) - bytes in src\n+\n+    const Register decode_table = r11;\n+    const Register out_byte_count = rbx;\n+    const Register byte1 = r13;\n+    const Register byte2 = r15;\n+    const Register byte3 = WINDOWS_ONLY(r8) NOT_WINDOWS(rdx);\n+    const Register byte4 = WINDOWS_ONLY(r10) NOT_WINDOWS(r9);\n+\n+    __ shrl(length, 2);    // Multiple of 4 bytes only - length is # 4-byte chunks\n+    __ cmpl(length, 0);\n+    __ jcc(Assembler::lessEqual, L_exit_no_vzero);\n+\n+    __ shll(isURL, 8);    // index into decode table based on isURL\n+    __ lea(decode_table, ExternalAddress(StubRoutines::x86::base64_decoding_table_addr()));\n+    __ addptr(decode_table, isURL);\n+\n+    __ jmp(L_bottomLoop);\n+\n+    __ align32();\n+    __ BIND(L_forceLoop);\n+    __ shll(byte1, 18);\n+    __ shll(byte2, 12);\n+    __ shll(byte3, 6);\n+    __ orl(byte1, byte2);\n+    __ orl(byte1, byte3);\n+    __ orl(byte1, byte4);\n+\n+    __ addptr(source, 4);\n+\n+    __ movb(Address(dest, dp, Address::times_1, 2), byte1);\n+    __ shrl(byte1, 8);\n+    __ movb(Address(dest, dp, Address::times_1, 1), byte1);\n+    __ shrl(byte1, 8);\n+    __ movb(Address(dest, dp, Address::times_1, 0), byte1);\n+\n+    __ addptr(dest, 3);\n+    __ decrementl(length, 1);\n+    __ jcc(Assembler::zero, L_exit_no_vzero);\n+\n+    __ BIND(L_bottomLoop);\n+    __ load_unsigned_byte(byte1, Address(source, start_offset, Address::times_1, 0x00));\n+    __ load_unsigned_byte(byte2, Address(source, start_offset, Address::times_1, 0x01));\n+    __ load_signed_byte(byte1, Address(decode_table, byte1));\n+    __ load_signed_byte(byte2, Address(decode_table, byte2));\n+    __ load_unsigned_byte(byte3, Address(source, start_offset, Address::times_1, 0x02));\n+    __ load_unsigned_byte(byte4, Address(source, start_offset, Address::times_1, 0x03));\n+    __ load_signed_byte(byte3, Address(decode_table, byte3));\n+    __ load_signed_byte(byte4, Address(decode_table, byte4));\n+\n+    __ mov(rax, byte1);\n+    __ orl(rax, byte2);\n+    __ orl(rax, byte3);\n+    __ orl(rax, byte4);\n+    __ jcc(Assembler::positive, L_forceLoop);\n+\n+    __ BIND(L_exit_no_vzero);\n+    __ pop(rax);             // Get original dest value\n+    __ subptr(dest, rax);      // Number of bytes converted\n+    __ movptr(rax, dest);\n+    __ pop(rbx);\n     __ pop(r15);\n     __ pop(r14);\n     __ pop(r13);\n     __ pop(r12);\n     __ leave();\n     __ ret(0);\n+\n     return start;\n   }\n \n+\n   /**\n    *  Arguments:\n    *\n@@ -5718,7 +6436,13 @@ address generate_avx_ghash_processBlocks() {\n     if (VM_Version::supports_sse4_1() && VM_Version::supports_avx512_vpclmulqdq() &&\n         VM_Version::supports_avx512bw() &&\n         VM_Version::supports_avx512vl()) {\n+        // The constants used in the CRC32 algorithm requires the 1's compliment of the initial crc value.\n+        // However, the constant table for CRC32-C assumes the original crc value.  Account for this\n+        // difference before calling and after returning.\n+      __ lea(table, ExternalAddress(StubRoutines::x86::crc_table_avx512_addr()));\n+      __ notl(crc);\n       __ kernel_crc32_avx512(crc, buf, len, table, tmp1, tmp2);\n+      __ notl(crc);\n     } else {\n       __ kernel_crc32(crc, buf, len, table, tmp1);\n     }\n@@ -5770,20 +6494,27 @@ address generate_avx_ghash_processBlocks() {\n \n       BLOCK_COMMENT(\"Entry:\");\n       __ enter(); // required for proper stackwalking of RuntimeStub frame\n+      if (VM_Version::supports_sse4_1() && VM_Version::supports_avx512_vpclmulqdq() &&\n+          VM_Version::supports_avx512bw() &&\n+          VM_Version::supports_avx512vl()) {\n+        __ lea(j, ExternalAddress(StubRoutines::x86::crc32c_table_avx512_addr()));\n+        __ kernel_crc32_avx512(crc, buf, len, j, l, k);\n+      } else {\n #ifdef _WIN64\n-      __ push(y);\n-      __ push(z);\n+        __ push(y);\n+        __ push(z);\n #endif\n-      __ crc32c_ipl_alg2_alt2(crc, buf, len,\n-                              a, j, k,\n-                              l, y, z,\n-                              c_farg0, c_farg1, c_farg2,\n-                              is_pclmulqdq_supported);\n-      __ movl(rax, crc);\n+        __ crc32c_ipl_alg2_alt2(crc, buf, len,\n+                                a, j, k,\n+                                l, y, z,\n+                                c_farg0, c_farg1, c_farg2,\n+                                is_pclmulqdq_supported);\n #ifdef _WIN64\n-      __ pop(z);\n-      __ pop(y);\n+        __ pop(z);\n+        __ pop(y);\n #endif\n+      }\n+      __ movl(rax, crc);\n       __ vzeroupper();\n       __ leave(); // required for proper stackwalking of RuntimeStub frame\n       __ ret(0);\n@@ -6960,15 +7691,30 @@ address generate_avx_ghash_processBlocks() {\n       }\n     }\n \n+\n     if (UseBASE64Intrinsics) {\n-      StubRoutines::x86::_and_mask = base64_and_mask_addr();\n-      StubRoutines::x86::_bswap_mask = base64_bswap_mask_addr();\n-      StubRoutines::x86::_base64_charset = base64_charset_addr();\n-      StubRoutines::x86::_url_charset = base64url_charset_addr();\n-      StubRoutines::x86::_gather_mask = base64_gather_mask_addr();\n-      StubRoutines::x86::_left_shift_mask = base64_left_shift_mask_addr();\n-      StubRoutines::x86::_right_shift_mask = base64_right_shift_mask_addr();\n+      if(VM_Version::supports_avx2() &&\n+         VM_Version::supports_avx512bw() &&\n+         VM_Version::supports_avx512vl()) {\n+        StubRoutines::x86::_avx2_shuffle_base64 = base64_avx2_shuffle_addr();\n+        StubRoutines::x86::_avx2_input_mask_base64 = base64_avx2_input_mask_addr();\n+        StubRoutines::x86::_avx2_lut_base64 = base64_avx2_lut_addr();\n+      }\n+      StubRoutines::x86::_encoding_table_base64 = base64_encoding_table_addr();\n+      if (VM_Version::supports_avx512_vbmi()) {\n+        StubRoutines::x86::_shuffle_base64 = base64_shuffle_addr();\n+        StubRoutines::x86::_lookup_lo_base64 = base64_vbmi_lookup_lo_addr();\n+        StubRoutines::x86::_lookup_hi_base64 = base64_vbmi_lookup_hi_addr();\n+        StubRoutines::x86::_lookup_lo_base64url = base64_vbmi_lookup_lo_url_addr();\n+        StubRoutines::x86::_lookup_hi_base64url = base64_vbmi_lookup_hi_url_addr();\n+        StubRoutines::x86::_pack_vec_base64 = base64_vbmi_pack_vec_addr();\n+        StubRoutines::x86::_join_0_1_base64 = base64_vbmi_join_0_1_addr();\n+        StubRoutines::x86::_join_1_2_base64 = base64_vbmi_join_1_2_addr();\n+        StubRoutines::x86::_join_2_3_base64 = base64_vbmi_join_2_3_addr();\n+      }\n+      StubRoutines::x86::_decoding_table_base64 = base64_decoding_table_addr();\n       StubRoutines::_base64_encodeBlock = generate_base64_encodeBlock();\n+      StubRoutines::_base64_decodeBlock = generate_base64_decodeBlock();\n     }\n \n     BarrierSetNMethod* bs_nm = BarrierSet::barrier_set()->barrier_set_nmethod();"
      },
      {
        "sha": "4471a5498bb46244140d9ad280999c5736963bde",
        "filename": "src/hotspot/cpu/x86/stubRoutines_x86.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 7,
        "changes": 38,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FstubRoutines_x86.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FstubRoutines_x86.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2FstubRoutines_x86.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -65,14 +65,21 @@ address StubRoutines::x86::_k256_W_adr = NULL;\n address StubRoutines::x86::_k512_W_addr = NULL;\n address StubRoutines::x86::_pshuffle_byte_flip_mask_addr_sha512 = NULL;\n // Base64 masks\n-address StubRoutines::x86::_bswap_mask = NULL;\n-address StubRoutines::x86::_base64_charset = NULL;\n-address StubRoutines::x86::_gather_mask = NULL;\n-address StubRoutines::x86::_right_shift_mask = NULL;\n-address StubRoutines::x86::_left_shift_mask = NULL;\n-address StubRoutines::x86::_and_mask = NULL;\n-address StubRoutines::x86::_url_charset = NULL;\n+address StubRoutines::x86::_encoding_table_base64 = NULL;\n+address StubRoutines::x86::_shuffle_base64 = NULL;\n+address StubRoutines::x86::_avx2_shuffle_base64 = NULL;\n+address StubRoutines::x86::_avx2_input_mask_base64 = NULL;\n+address StubRoutines::x86::_avx2_lut_base64 = NULL;\n address StubRoutines::x86::_counter_mask_addr = NULL;\n+address StubRoutines::x86::_lookup_lo_base64 = NULL;\n+address StubRoutines::x86::_lookup_hi_base64 = NULL;\n+address StubRoutines::x86::_lookup_lo_base64url = NULL;\n+address StubRoutines::x86::_lookup_hi_base64url = NULL;\n+address StubRoutines::x86::_pack_vec_base64 = NULL;\n+address StubRoutines::x86::_join_0_1_base64 = NULL;\n+address StubRoutines::x86::_join_1_2_base64 = NULL;\n+address StubRoutines::x86::_join_2_3_base64 = NULL;\n+address StubRoutines::x86::_decoding_table_base64 = NULL;\n #endif\n address StubRoutines::x86::_pshuffle_byte_flip_mask_addr = NULL;\n \n@@ -212,6 +219,23 @@ juint StubRoutines::x86::_crc_table_avx512[] =\n     0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL\n };\n \n+juint StubRoutines::x86::_crc32c_table_avx512[] =\n+{\n+    0xb9e02b86UL, 0x00000000UL, 0xdcb17aa4UL, 0x00000000UL,\n+    0x493c7d27UL, 0x00000000UL, 0xc1068c50UL, 0x0000000eUL,\n+    0x06e38d70UL, 0x00000002UL, 0x6992cea2UL, 0x00000000UL,\n+    0x493c7d27UL, 0x00000000UL, 0xdd45aab8UL, 0x00000000UL,\n+    0xdea713f0UL, 0x00000000UL, 0x05ec76f0UL, 0x00000001UL,\n+    0x47db8317UL, 0x00000000UL, 0x2ad91c30UL, 0x00000000UL,\n+    0x0715ce53UL, 0x00000000UL, 0xc49f4f67UL, 0x00000000UL,\n+    0x39d3b296UL, 0x00000000UL, 0x083a6eecUL, 0x00000000UL,\n+    0x9e4addf8UL, 0x00000000UL, 0x740eef02UL, 0x00000000UL,\n+    0xddc0152bUL, 0x00000000UL, 0x1c291d04UL, 0x00000000UL,\n+    0xba4fc28eUL, 0x00000000UL, 0x3da6d0cbUL, 0x00000000UL,\n+    0x493c7d27UL, 0x00000000UL, 0xc1068c50UL, 0x0000000eUL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL\n+};\n+\n juint StubRoutines::x86::_crc_by128_masks_avx512[] =\n {\n     0xffffffffUL, 0xffffffffUL, 0x00000000UL, 0x00000000UL,"
      },
      {
        "sha": "45f4870c372803b32d0b20b4d7d1e449ef064f7e",
        "filename": "src/hotspot/cpu/x86/stubRoutines_x86.hpp",
        "status": "modified",
        "additions": 30,
        "deletions": 14,
        "changes": 44,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FstubRoutines_x86.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FstubRoutines_x86.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2FstubRoutines_x86.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -137,6 +137,7 @@ class x86 {\n #ifdef _LP64\n   static juint    _crc_by128_masks_avx512[];\n   static juint    _crc_table_avx512[];\n+  static juint    _crc32c_table_avx512[];\n   static juint    _shuf_table_crc32_avx512[];\n   static juint    _adler32_shuf0_table[];\n   static juint    _adler32_shuf1_table[];\n@@ -184,13 +185,20 @@ class x86 {\n   static address _pshuffle_byte_flip_mask_addr_sha512;\n   static address _counter_mask_addr;\n   // Masks for base64\n-  static address _base64_charset;\n-  static address _bswap_mask;\n-  static address _gather_mask;\n-  static address _right_shift_mask;\n-  static address _left_shift_mask;\n-  static address _and_mask;\n-  static address _url_charset;\n+  static address _encoding_table_base64;\n+  static address _shuffle_base64;\n+  static address _avx2_shuffle_base64;\n+  static address _avx2_input_mask_base64;\n+  static address _avx2_lut_base64;\n+  static address _lookup_lo_base64;\n+  static address _lookup_hi_base64;\n+  static address _lookup_lo_base64url;\n+  static address _lookup_hi_base64url;\n+  static address _pack_vec_base64;\n+  static address _join_0_1_base64;\n+  static address _join_1_2_base64;\n+  static address _join_2_3_base64;\n+  static address _decoding_table_base64;\n #endif\n   // byte flip mask for sha256\n   static address _pshuffle_byte_flip_mask_addr;\n@@ -247,6 +255,7 @@ class x86 {\n   static address crc_by128_masks_avx512_addr()  { return (address)_crc_by128_masks_avx512; }\n   static address shuf_table_crc32_avx512_addr()  { return (address)_shuf_table_crc32_avx512; }\n   static address crc_table_avx512_addr()  { return (address)_crc_table_avx512; }\n+  static address crc32c_table_avx512_addr()  { return (address)_crc32c_table_avx512; }\n #endif // _LP64\n   static address ghash_long_swap_mask_addr() { return _ghash_long_swap_mask_addr; }\n   static address ghash_byte_swap_mask_addr() { return _ghash_byte_swap_mask_addr; }\n@@ -328,14 +337,21 @@ class x86 {\n   static address k256_W_addr()    { return _k256_W_adr; }\n   static address k512_W_addr()    { return _k512_W_addr; }\n   static address pshuffle_byte_flip_mask_addr_sha512() { return _pshuffle_byte_flip_mask_addr_sha512; }\n-  static address base64_charset_addr() { return _base64_charset; }\n-  static address base64url_charset_addr() { return _url_charset; }\n-  static address base64_bswap_mask_addr() { return _bswap_mask; }\n-  static address base64_gather_mask_addr() { return _gather_mask; }\n-  static address base64_right_shift_mask_addr() { return _right_shift_mask; }\n-  static address base64_left_shift_mask_addr() { return _left_shift_mask; }\n-  static address base64_and_mask_addr() { return _and_mask; }\n+  static address base64_encoding_table_addr() { return _encoding_table_base64; }\n+  static address base64_shuffle_addr() { return _shuffle_base64; }\n+  static address base64_avx2_shuffle_addr() { return _avx2_shuffle_base64; }\n+  static address base64_avx2_input_mask_addr() { return _avx2_input_mask_base64; }\n+  static address base64_avx2_lut_addr() { return _avx2_lut_base64; }\n   static address counter_mask_addr() { return _counter_mask_addr; }\n+  static address base64_vbmi_lookup_lo_addr() { return _lookup_lo_base64; }\n+  static address base64_vbmi_lookup_hi_addr() { return _lookup_hi_base64; }\n+  static address base64_vbmi_lookup_lo_url_addr() { return _lookup_lo_base64url; }\n+  static address base64_vbmi_lookup_hi_url_addr() { return _lookup_hi_base64url; }\n+  static address base64_vbmi_pack_vec_addr() { return _pack_vec_base64; }\n+  static address base64_vbmi_join_0_1_addr() { return _join_0_1_base64; }\n+  static address base64_vbmi_join_1_2_addr() { return _join_1_2_base64; }\n+  static address base64_vbmi_join_2_3_addr() { return _join_2_3_base64; }\n+  static address base64_decoding_table_addr() { return _decoding_table_base64; }\n #endif\n   static address pshuffle_byte_flip_mask_addr() { return _pshuffle_byte_flip_mask_addr; }\n   static void generate_CRC32C_table(bool is_pclmulqdq_supported);"
      },
      {
        "sha": "dcbb373339064276bed956a4e81b5ee20e53ed78",
        "filename": "src/hotspot/cpu/x86/templateInterpreterGenerator_x86.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FtemplateInterpreterGenerator_x86.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2FtemplateInterpreterGenerator_x86.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2FtemplateInterpreterGenerator_x86.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1702,21 +1702,21 @@ void TemplateInterpreterGenerator::set_vtos_entry_points(Template* t,\n #ifndef _LP64\n   fep = __ pc();     // ftos entry point\n       __ push(ftos);\n-      __ jmp(L);\n+      __ jmpb(L);\n   dep = __ pc();     // dtos entry point\n       __ push(dtos);\n-      __ jmp(L);\n+      __ jmpb(L);\n #else\n   fep = __ pc();     // ftos entry point\n       __ push_f(xmm0);\n-      __ jmp(L);\n+      __ jmpb(L);\n   dep = __ pc();     // dtos entry point\n       __ push_d(xmm0);\n-      __ jmp(L);\n+      __ jmpb(L);\n #endif // _LP64\n   lep = __ pc();     // ltos entry point\n       __ push_l();\n-      __ jmp(L);\n+      __ jmpb(L);\n   aep = bep = cep = sep = iep = __ pc();      // [abcsi]tos entry point\n       __ push_i_or_ptr();\n   vep = __ pc();    // vtos entry point"
      },
      {
        "sha": "92cd95e744328c19bbdc6cb192aa346fe5f3c681",
        "filename": "src/hotspot/cpu/x86/x86_32.ad",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fx86_32.ad",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fx86_32.ad",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2Fx86_32.ad?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -11727,7 +11727,7 @@ instruct rep_stos_im(immI cnt, kReg ktmp, eRegP base, regD tmp, rRegI zero, Univ\n \n instruct string_compareL(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI cnt2,\n                          eAXRegI result, regD tmp1, eFlagsReg cr) %{\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11742,7 +11742,7 @@ instruct string_compareL(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI cnt2,\n \n instruct string_compareL_evex(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI cnt2,\n                               eAXRegI result, regD tmp1, kReg ktmp, eFlagsReg cr) %{\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11757,7 +11757,7 @@ instruct string_compareL_evex(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI\n \n instruct string_compareU(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI cnt2,\n                          eAXRegI result, regD tmp1, eFlagsReg cr) %{\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11772,7 +11772,7 @@ instruct string_compareU(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI cnt2,\n \n instruct string_compareU_evex(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI cnt2,\n                               eAXRegI result, regD tmp1, kReg ktmp, eFlagsReg cr) %{\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11787,7 +11787,7 @@ instruct string_compareU_evex(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI\n \n instruct string_compareLU(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI cnt2,\n                           eAXRegI result, regD tmp1, eFlagsReg cr) %{\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11802,7 +11802,7 @@ instruct string_compareLU(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI cnt2\n \n instruct string_compareLU_evex(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI cnt2,\n                                eAXRegI result, regD tmp1, kReg ktmp, eFlagsReg cr) %{\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11817,7 +11817,7 @@ instruct string_compareLU_evex(eDIRegP str1, eCXRegI cnt1, eSIRegP str2, eDXRegI\n \n instruct string_compareUL(eSIRegP str1, eDXRegI cnt1, eDIRegP str2, eCXRegI cnt2,\n                           eAXRegI result, regD tmp1, eFlagsReg cr) %{\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11832,7 +11832,7 @@ instruct string_compareUL(eSIRegP str1, eDXRegI cnt1, eDIRegP str2, eCXRegI cnt2\n \n instruct string_compareUL_evex(eSIRegP str1, eDXRegI cnt1, eDIRegP str2, eCXRegI cnt2,\n                                eAXRegI result, regD tmp1, kReg ktmp, eFlagsReg cr) %{\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11848,7 +11848,7 @@ instruct string_compareUL_evex(eSIRegP str1, eDXRegI cnt1, eDIRegP str2, eCXRegI\n // fast string equals\n instruct string_equals(eDIRegP str1, eSIRegP str2, eCXRegI cnt, eAXRegI result,\n                        regD tmp1, regD tmp2, eBXRegI tmp3, eFlagsReg cr) %{\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw());\n   match(Set result (StrEquals (Binary str1 str2) cnt));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL str1, USE_KILL str2, USE_KILL cnt, KILL tmp3, KILL cr);\n \n@@ -11864,7 +11864,7 @@ instruct string_equals(eDIRegP str1, eSIRegP str2, eCXRegI cnt, eAXRegI result,\n \n instruct string_equals_evex(eDIRegP str1, eSIRegP str2, eCXRegI cnt, eAXRegI result,\n                             regD tmp1, regD tmp2, kReg ktmp, eBXRegI tmp3, eFlagsReg cr) %{\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw());\n   match(Set result (StrEquals (Binary str1 str2) cnt));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt, KILL tmp3, KILL cr);\n \n@@ -12042,7 +12042,7 @@ instruct stringL_indexof_char(eDIRegP str1, eDXRegI cnt1, eAXRegI ch,\n instruct array_equalsB(eDIRegP ary1, eSIRegP ary2, eAXRegI result,\n                        regD tmp1, regD tmp2, eCXRegI tmp3, eBXRegI tmp4, eFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n   match(Set result (AryEq ary1 ary2));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL ary1, USE_KILL ary2, KILL tmp3, KILL tmp4, KILL cr);\n   //ins_cost(300);\n@@ -12059,7 +12059,7 @@ instruct array_equalsB(eDIRegP ary1, eSIRegP ary2, eAXRegI result,\n instruct array_equalsB_evex(eDIRegP ary1, eSIRegP ary2, eAXRegI result,\n                        regD tmp1, regD tmp2, kReg ktmp, eCXRegI tmp3, eBXRegI tmp4, eFlagsReg cr)\n %{\n-  predicate(UseAVX > 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n   match(Set result (AryEq ary1 ary2));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp, USE_KILL ary1, USE_KILL ary2, KILL tmp3, KILL tmp4, KILL cr);\n   //ins_cost(300);\n@@ -12076,7 +12076,7 @@ instruct array_equalsB_evex(eDIRegP ary1, eSIRegP ary2, eAXRegI result,\n instruct array_equalsC(eDIRegP ary1, eSIRegP ary2, eAXRegI result,\n                        regD tmp1, regD tmp2, eCXRegI tmp3, eBXRegI tmp4, eFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n   match(Set result (AryEq ary1 ary2));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL ary1, USE_KILL ary2, KILL tmp3, KILL tmp4, KILL cr);\n   //ins_cost(300);\n@@ -12093,7 +12093,7 @@ instruct array_equalsC(eDIRegP ary1, eSIRegP ary2, eAXRegI result,\n instruct array_equalsC_evex(eDIRegP ary1, eSIRegP ary2, eAXRegI result,\n                             regD tmp1, regD tmp2, kReg ktmp, eCXRegI tmp3, eBXRegI tmp4, eFlagsReg cr)\n %{\n-  predicate(UseAVX > 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n   match(Set result (AryEq ary1 ary2));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp, USE_KILL ary1, USE_KILL ary2, KILL tmp3, KILL tmp4, KILL cr);\n   //ins_cost(300);\n@@ -12110,7 +12110,7 @@ instruct array_equalsC_evex(eDIRegP ary1, eSIRegP ary2, eAXRegI result,\n instruct has_negatives(eSIRegP ary1, eCXRegI len, eAXRegI result,\n                       regD tmp1, regD tmp2, eBXRegI tmp3, eFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n   match(Set result (HasNegatives ary1 len));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL ary1, USE_KILL len, KILL tmp3, KILL cr);\n \n@@ -12126,7 +12126,7 @@ instruct has_negatives(eSIRegP ary1, eCXRegI len, eAXRegI result,\n instruct has_negatives_evex(eSIRegP ary1, eCXRegI len, eAXRegI result,\n                            regD tmp1, regD tmp2, kReg ktmp1, kReg ktmp2, eBXRegI tmp3, eFlagsReg cr)\n %{\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n   match(Set result (HasNegatives ary1 len));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp1, TEMP ktmp2, USE_KILL ary1, USE_KILL len, KILL tmp3, KILL cr);\n \n@@ -12143,7 +12143,7 @@ instruct has_negatives_evex(eSIRegP ary1, eCXRegI len, eAXRegI result,\n // fast char[] to byte[] compression\n instruct string_compress(eSIRegP src, eDIRegP dst, eDXRegI len, regD tmp1, regD tmp2,\n                          regD tmp3, regD tmp4, eCXRegI tmp5, eAXRegI result, eFlagsReg cr) %{\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n   match(Set result (StrCompressedCopy src (Binary dst len)));\n   effect(TEMP tmp1, TEMP tmp2, TEMP tmp3, TEMP tmp4, USE_KILL src, USE_KILL dst, USE_KILL len, KILL tmp5, KILL cr);\n \n@@ -12159,7 +12159,7 @@ instruct string_compress(eSIRegP src, eDIRegP dst, eDXRegI len, regD tmp1, regD\n \n instruct string_compress_evex(eSIRegP src, eDIRegP dst, eDXRegI len, regD tmp1, regD tmp2,\n                               regD tmp3, regD tmp4, kReg ktmp1, kReg ktmp2, eCXRegI tmp5, eAXRegI result, eFlagsReg cr) %{\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n   match(Set result (StrCompressedCopy src (Binary dst len)));\n   effect(TEMP tmp1, TEMP tmp2, TEMP tmp3, TEMP tmp4, TEMP ktmp1, TEMP ktmp2, USE_KILL src, USE_KILL dst, USE_KILL len, KILL tmp5, KILL cr);\n \n@@ -12176,7 +12176,7 @@ instruct string_compress_evex(eSIRegP src, eDIRegP dst, eDXRegI len, regD tmp1,\n // fast byte[] to char[] inflation\n instruct string_inflate(Universe dummy, eSIRegP src, eDIRegP dst, eDXRegI len,\n                         regD tmp1, eCXRegI tmp2, eFlagsReg cr) %{\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n   match(Set dummy (StrInflatedCopy src (Binary dst len)));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL src, USE_KILL dst, USE_KILL len, KILL cr);\n \n@@ -12190,7 +12190,7 @@ instruct string_inflate(Universe dummy, eSIRegP src, eDIRegP dst, eDXRegI len,\n \n instruct string_inflate_evex(Universe dummy, eSIRegP src, eDIRegP dst, eDXRegI len,\n                              regD tmp1, kReg ktmp, eCXRegI tmp2, eFlagsReg cr) %{\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n   match(Set dummy (StrInflatedCopy src (Binary dst len)));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp, USE_KILL src, USE_KILL dst, USE_KILL len, KILL cr);\n "
      },
      {
        "sha": "3a95006819afca6423d957b461f46a3c58a9d02d",
        "filename": "src/hotspot/cpu/x86/x86_64.ad",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fx86_64.ad",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fx86%2Fx86_64.ad",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fx86%2Fx86_64.ad?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -11260,7 +11260,7 @@ instruct rep_stos_im(immL cnt, rRegP base, regD tmp, rRegI zero, kReg ktmp, Univ\n instruct string_compareL(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_RegI cnt2,\n                          rax_RegI result, legRegD tmp1, rFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11276,7 +11276,7 @@ instruct string_compareL(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_RegI c\n instruct string_compareL_evex(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_RegI cnt2,\n                               rax_RegI result, legRegD tmp1, kReg ktmp, rFlagsReg cr)\n %{\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11292,7 +11292,7 @@ instruct string_compareL_evex(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_R\n instruct string_compareU(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_RegI cnt2,\n                          rax_RegI result, legRegD tmp1, rFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11308,7 +11308,7 @@ instruct string_compareU(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_RegI c\n instruct string_compareU_evex(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_RegI cnt2,\n                               rax_RegI result, legRegD tmp1, kReg ktmp, rFlagsReg cr)\n %{\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11324,7 +11324,7 @@ instruct string_compareU_evex(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_R\n instruct string_compareLU(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_RegI cnt2,\n                           rax_RegI result, legRegD tmp1, rFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11340,7 +11340,7 @@ instruct string_compareLU(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_RegI\n instruct string_compareLU_evex(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_RegI cnt2,\n                                rax_RegI result, legRegD tmp1, kReg ktmp, rFlagsReg cr)\n %{\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11356,7 +11356,7 @@ instruct string_compareLU_evex(rdi_RegP str1, rcx_RegI cnt1, rsi_RegP str2, rdx_\n instruct string_compareUL(rsi_RegP str1, rdx_RegI cnt1, rdi_RegP str2, rcx_RegI cnt2,\n                           rax_RegI result, legRegD tmp1, rFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11372,7 +11372,7 @@ instruct string_compareUL(rsi_RegP str1, rdx_RegI cnt1, rdi_RegP str2, rcx_RegI\n instruct string_compareUL_evex(rsi_RegP str1, rdx_RegI cnt1, rdi_RegP str2, rcx_RegI cnt2,\n                                rax_RegI result, legRegD tmp1, kReg ktmp, rFlagsReg cr)\n %{\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n   match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n   effect(TEMP tmp1, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n \n@@ -11555,7 +11555,7 @@ instruct stringL_indexof_char(rdi_RegP str1, rdx_RegI cnt1, rax_RegI ch,\n instruct string_equals(rdi_RegP str1, rsi_RegP str2, rcx_RegI cnt, rax_RegI result,\n                        legRegD tmp1, legRegD tmp2, rbx_RegI tmp3, rFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw());\n   match(Set result (StrEquals (Binary str1 str2) cnt));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL str1, USE_KILL str2, USE_KILL cnt, KILL tmp3, KILL cr);\n \n@@ -11571,7 +11571,7 @@ instruct string_equals(rdi_RegP str1, rsi_RegP str2, rcx_RegI cnt, rax_RegI resu\n instruct string_equals_evex(rdi_RegP str1, rsi_RegP str2, rcx_RegI cnt, rax_RegI result,\n                            legRegD tmp1, legRegD tmp2, kReg ktmp, rbx_RegI tmp3, rFlagsReg cr)\n %{\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw());\n   match(Set result (StrEquals (Binary str1 str2) cnt));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp, USE_KILL str1, USE_KILL str2, USE_KILL cnt, KILL tmp3, KILL cr);\n \n@@ -11588,7 +11588,7 @@ instruct string_equals_evex(rdi_RegP str1, rsi_RegP str2, rcx_RegI cnt, rax_RegI\n instruct array_equalsB(rdi_RegP ary1, rsi_RegP ary2, rax_RegI result,\n                        legRegD tmp1, legRegD tmp2, rcx_RegI tmp3, rbx_RegI tmp4, rFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n   match(Set result (AryEq ary1 ary2));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL ary1, USE_KILL ary2, KILL tmp3, KILL tmp4, KILL cr);\n \n@@ -11604,7 +11604,7 @@ instruct array_equalsB(rdi_RegP ary1, rsi_RegP ary2, rax_RegI result,\n instruct array_equalsB_evex(rdi_RegP ary1, rsi_RegP ary2, rax_RegI result,\n                             legRegD tmp1, legRegD tmp2, kReg ktmp, rcx_RegI tmp3, rbx_RegI tmp4, rFlagsReg cr)\n %{\n-  predicate(UseAVX > 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n   match(Set result (AryEq ary1 ary2));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp, USE_KILL ary1, USE_KILL ary2, KILL tmp3, KILL tmp4, KILL cr);\n \n@@ -11620,7 +11620,7 @@ instruct array_equalsB_evex(rdi_RegP ary1, rsi_RegP ary2, rax_RegI result,\n instruct array_equalsC(rdi_RegP ary1, rsi_RegP ary2, rax_RegI result,\n                        legRegD tmp1, legRegD tmp2, rcx_RegI tmp3, rbx_RegI tmp4, rFlagsReg cr)\n %{\n-  predicate(UseAVX <= 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n   match(Set result (AryEq ary1 ary2));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL ary1, USE_KILL ary2, KILL tmp3, KILL tmp4, KILL cr);\n \n@@ -11636,7 +11636,7 @@ instruct array_equalsC(rdi_RegP ary1, rsi_RegP ary2, rax_RegI result,\n instruct array_equalsC_evex(rdi_RegP ary1, rsi_RegP ary2, rax_RegI result,\n                             legRegD tmp1, legRegD tmp2, kReg ktmp, rcx_RegI tmp3, rbx_RegI tmp4, rFlagsReg cr)\n %{\n-  predicate(UseAVX > 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n   match(Set result (AryEq ary1 ary2));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp, USE_KILL ary1, USE_KILL ary2, KILL tmp3, KILL tmp4, KILL cr);\n \n@@ -11652,7 +11652,7 @@ instruct array_equalsC_evex(rdi_RegP ary1, rsi_RegP ary2, rax_RegI result,\n instruct has_negatives(rsi_RegP ary1, rcx_RegI len, rax_RegI result,\n                        legRegD tmp1, legRegD tmp2, rbx_RegI tmp3, rFlagsReg cr,)\n %{\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n   match(Set result (HasNegatives ary1 len));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL ary1, USE_KILL len, KILL tmp3, KILL cr);\n \n@@ -11668,7 +11668,7 @@ instruct has_negatives(rsi_RegP ary1, rcx_RegI len, rax_RegI result,\n instruct has_negatives_evex(rsi_RegP ary1, rcx_RegI len, rax_RegI result,\n                             legRegD tmp1, legRegD tmp2, kReg ktmp1, kReg ktmp2, rbx_RegI tmp3, rFlagsReg cr,)\n %{\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n   match(Set result (HasNegatives ary1 len));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp1, TEMP ktmp2, USE_KILL ary1, USE_KILL len, KILL tmp3, KILL cr);\n \n@@ -11684,7 +11684,7 @@ instruct has_negatives_evex(rsi_RegP ary1, rcx_RegI len, rax_RegI result,\n // fast char[] to byte[] compression\n instruct string_compress(rsi_RegP src, rdi_RegP dst, rdx_RegI len, legRegD tmp1, legRegD tmp2, legRegD tmp3,\n                          legRegD tmp4, rcx_RegI tmp5, rax_RegI result, rFlagsReg cr) %{\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n   match(Set result (StrCompressedCopy src (Binary dst len)));\n   effect(TEMP tmp1, TEMP tmp2, TEMP tmp3, TEMP tmp4, USE_KILL src, USE_KILL dst,\n          USE_KILL len, KILL tmp5, KILL cr);\n@@ -11701,7 +11701,7 @@ instruct string_compress(rsi_RegP src, rdi_RegP dst, rdx_RegI len, legRegD tmp1,\n \n instruct string_compress_evex(rsi_RegP src, rdi_RegP dst, rdx_RegI len, legRegD tmp1, legRegD tmp2, legRegD tmp3,\n                               legRegD tmp4, kReg ktmp1, kReg ktmp2, rcx_RegI tmp5, rax_RegI result, rFlagsReg cr) %{\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n   match(Set result (StrCompressedCopy src (Binary dst len)));\n   effect(TEMP tmp1, TEMP tmp2, TEMP tmp3, TEMP tmp4, TEMP ktmp1, TEMP ktmp2, USE_KILL src, USE_KILL dst,\n          USE_KILL len, KILL tmp5, KILL cr);\n@@ -11718,7 +11718,7 @@ instruct string_compress_evex(rsi_RegP src, rdi_RegP dst, rdx_RegI len, legRegD\n // fast byte[] to char[] inflation\n instruct string_inflate(Universe dummy, rsi_RegP src, rdi_RegP dst, rdx_RegI len,\n                         legRegD tmp1, rcx_RegI tmp2, rFlagsReg cr) %{\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n   match(Set dummy (StrInflatedCopy src (Binary dst len)));\n   effect(TEMP tmp1, TEMP tmp2, USE_KILL src, USE_KILL dst, USE_KILL len, KILL cr);\n \n@@ -11732,7 +11732,7 @@ instruct string_inflate(Universe dummy, rsi_RegP src, rdi_RegP dst, rdx_RegI len\n \n instruct string_inflate_evex(Universe dummy, rsi_RegP src, rdi_RegP dst, rdx_RegI len,\n                              legRegD tmp1, kReg ktmp, rcx_RegI tmp2, rFlagsReg cr) %{\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n   match(Set dummy (StrInflatedCopy src (Binary dst len)));\n   effect(TEMP tmp1, TEMP tmp2, TEMP ktmp, USE_KILL src, USE_KILL dst, USE_KILL len, KILL cr);\n "
      },
      {
        "sha": "fcd02c55fa7f03674f22502475b60f2991e3ddf0",
        "filename": "src/hotspot/cpu/zero/frame_zero.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 5,
        "changes": 64,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fzero%2Fframe_zero.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fzero%2Fframe_zero.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fzero%2Fframe_zero.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,6 +1,6 @@\n /*\n  * Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.\n- * Copyright 2007, 2008, 2009, 2010, 2011 Red Hat, Inc.\n+ * Copyright (c) 2007, 2021, Red Hat, Inc. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -116,13 +116,67 @@ void frame::patch_pc(Thread* thread, address pc) {\n }\n \n bool frame::safe_for_sender(JavaThread *thread) {\n-  ShouldNotCallThis();\n-  return false;\n+  address sp = (address)_sp;\n+\n+  // consider stack guards when trying to determine \"safe\" stack pointers\n+  // sp must be within the usable part of the stack (not in guards)\n+  if (!thread->is_in_usable_stack(sp)) {\n+    return false;\n+  }\n+\n+  // an fp must be within the stack and above (but not equal) sp\n+  if (!thread->is_in_stack_range_excl((address)fp(), sp)) {\n+    return false;\n+  }\n+\n+  // All good.\n+  return true;\n }\n \n bool frame::is_interpreted_frame_valid(JavaThread *thread) const {\n-  ShouldNotCallThis();\n-  return false;\n+  assert(is_interpreted_frame(), \"Not an interpreted frame\");\n+  // These are reasonable sanity checks\n+  if (fp() == 0 || (intptr_t(fp()) & (wordSize-1)) != 0) {\n+    return false;\n+  }\n+  if (sp() == 0 || (intptr_t(sp()) & (wordSize-1)) != 0) {\n+    return false;\n+  }\n+  // These are hacks to keep us out of trouble.\n+  // The problem with these is that they mask other problems\n+  if (fp() <= sp()) {        // this attempts to deal with unsigned comparison above\n+    return false;\n+  }\n+\n+  // do some validation of frame elements\n+  // first the method\n+\n+  Method* m = *interpreter_frame_method_addr();\n+\n+  // validate the method we'd find in this potential sender\n+  if (!Method::is_valid_method(m)) {\n+    return false;\n+  }\n+\n+  // validate bci/bcp\n+  address bcp = interpreter_frame_bcp();\n+  if (m->validate_bci_from_bcp(bcp) < 0) {\n+    return false;\n+  }\n+\n+  // validate ConstantPoolCache*\n+  ConstantPoolCache* cp = *interpreter_frame_cache_addr();\n+  if (MetaspaceObj::is_valid(cp) == false) {\n+    return false;\n+  }\n+\n+  // validate locals\n+  address locals = (address) *interpreter_frame_locals_addr();\n+  if (!thread->is_in_stack_range_incl(locals, (address)fp())) {\n+    return false;\n+  }\n+\n+  return true;\n }\n \n BasicType frame::interpreter_frame_result(oop* oop_result,"
      },
      {
        "sha": "dcf33d18d374e72b3eac72b1a61eb5e3ecf143ba",
        "filename": "src/hotspot/cpu/zero/globalDefinitions_zero.hpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fzero%2FglobalDefinitions_zero.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fzero%2FglobalDefinitions_zero.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fzero%2FglobalDefinitions_zero.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -30,6 +30,10 @@\n #define SUPPORTS_NATIVE_CX8\n #endif\n \n+#ifndef FFI_GO_CLOSURES\n+#define FFI_GO_CLOSURES 0\n+#endif\n+\n #include <ffi.h>\n \n // Indicates whether the C calling conventions require that"
      },
      {
        "sha": "333857afa690f506c0125a44c6ba5228921d2009",
        "filename": "src/hotspot/cpu/zero/vm_version_zero.cpp",
        "status": "modified",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fzero%2Fvm_version_zero.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fcpu%2Fzero%2Fvm_version_zero.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fcpu%2Fzero%2Fvm_version_zero.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -50,6 +50,71 @@ void VM_Version::initialize() {\n     FLAG_SET_DEFAULT(UseHeavyMonitors, true);\n   }\n \n+  if (UseAESIntrinsics) {\n+    warning(\"AES intrinsics are not available on this CPU\");\n+    FLAG_SET_DEFAULT(UseAESIntrinsics, false);\n+  }\n+\n+  if (UseAES) {\n+    warning(\"AES instructions are not available on this CPU\");\n+    FLAG_SET_DEFAULT(UseAES, false);\n+  }\n+\n+  if (UseAESCTRIntrinsics) {\n+    warning(\"AES/CTR intrinsics are not available on this CPU\");\n+    FLAG_SET_DEFAULT(UseAESCTRIntrinsics, false);\n+  }\n+\n+  if (UseFMA) {\n+    warning(\"FMA instructions are not available on this CPU\");\n+    FLAG_SET_DEFAULT(UseFMA, false);\n+  }\n+\n+  if (UseMD5Intrinsics) {\n+    warning(\"MD5 intrinsics are not available on this CPU\");\n+    FLAG_SET_DEFAULT(UseMD5Intrinsics, false);\n+  }\n+\n+  if (UseSHA) {\n+    warning(\"SHA instructions are not available on this CPU\");\n+    FLAG_SET_DEFAULT(UseSHA, false);\n+  }\n+\n+  if (UseSHA1Intrinsics) {\n+    warning(\"Intrinsics for SHA-1 crypto hash functions not available on this CPU.\");\n+    FLAG_SET_DEFAULT(UseSHA1Intrinsics, false);\n+  }\n+\n+  if (UseSHA256Intrinsics) {\n+    warning(\"Intrinsics for SHA-224 and SHA-256 crypto hash functions not available on this CPU.\");\n+    FLAG_SET_DEFAULT(UseSHA256Intrinsics, false);\n+  }\n+\n+  if (UseSHA512Intrinsics) {\n+    warning(\"Intrinsics for SHA-384 and SHA-512 crypto hash functions not available on this CPU.\");\n+    FLAG_SET_DEFAULT(UseSHA512Intrinsics, false);\n+  }\n+\n+  if (UseSHA3Intrinsics) {\n+    warning(\"Intrinsics for SHA3-224, SHA3-256, SHA3-384 and SHA3-512 crypto hash functions not available on this CPU.\");\n+    FLAG_SET_DEFAULT(UseSHA3Intrinsics, false);\n+  }\n+\n+  if (UseCRC32Intrinsics) {\n+    warning(\"CRC32 intrinsics are not available on this CPU\");\n+    FLAG_SET_DEFAULT(UseCRC32Intrinsics, false);\n+  }\n+\n+  if (UseAdler32Intrinsics) {\n+    warning(\"Adler32 intrinsics are not available on this CPU\");\n+    FLAG_SET_DEFAULT(UseAdler32Intrinsics, false);\n+  }\n+\n+  if (UseVectorizedMismatchIntrinsic) {\n+    warning(\"vectorizedMismatch intrinsic is not available on this CPU.\");\n+    FLAG_SET_DEFAULT(UseVectorizedMismatchIntrinsic, false);\n+  }\n+\n   // Not implemented\n   UNSUPPORTED_OPTION(CriticalJNINatives);\n   UNSUPPORTED_OPTION(UseCompiler);"
      },
      {
        "sha": "81e5e332b859c6732287a1287e28185b499c6d7b",
        "filename": "src/hotspot/os/linux/cgroupSubsystem_linux.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 35,
        "changes": 92,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupSubsystem_linux.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupSubsystem_linux.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2FcgroupSubsystem_linux.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -122,6 +122,32 @@ CgroupSubsystem* CgroupSubsystemFactory::create() {\n   return new CgroupV1Subsystem(cpuset, cpu, cpuacct, pids, memory);\n }\n \n+void CgroupSubsystemFactory::set_controller_paths(CgroupInfo* cg_infos,\n+                                                  int controller,\n+                                                  const char* name,\n+                                                  char* mount_path,\n+                                                  char* root_path) {\n+  if (cg_infos[controller]._mount_path != NULL) {\n+    // On some systems duplicate controllers get mounted in addition to\n+    // the main cgroup controllers most likely under /sys/fs/cgroup. In that\n+    // case pick the one under /sys/fs/cgroup and discard others.\n+    if (strstr(cg_infos[controller]._mount_path, \"/sys/fs/cgroup\") != cg_infos[controller]._mount_path) {\n+      log_debug(os, container)(\"Duplicate %s controllers detected. Picking %s, skipping %s.\",\n+                               name, mount_path, cg_infos[controller]._mount_path);\n+      os::free(cg_infos[controller]._mount_path);\n+      os::free(cg_infos[controller]._root_mount_path);\n+      cg_infos[controller]._mount_path = os::strdup(mount_path);\n+      cg_infos[controller]._root_mount_path = os::strdup(root_path);\n+    } else {\n+      log_debug(os, container)(\"Duplicate %s controllers detected. Picking %s, skipping %s.\",\n+                               name, cg_infos[controller]._mount_path, mount_path);\n+    }\n+  } else {\n+    cg_infos[controller]._mount_path = os::strdup(mount_path);\n+    cg_infos[controller]._root_mount_path = os::strdup(root_path);\n+  }\n+}\n+\n bool CgroupSubsystemFactory::determine_type(CgroupInfo* cg_infos,\n                                             const char* proc_cgroups,\n                                             const char* proc_self_cgroup,\n@@ -287,7 +313,6 @@ bool CgroupSubsystemFactory::determine_type(CgroupInfo* cg_infos,\n   bool cgroupv2_mount_point_found = false;\n   bool any_cgroup_mounts_found = false;\n   while ((p = fgets(buf, MAXPATHLEN, mntinfo)) != NULL) {\n-    char tmp_mount_point[MAXPATHLEN+1];\n     char tmp_fs_type[MAXPATHLEN+1];\n     char tmproot[MAXPATHLEN+1];\n     char tmpmount[MAXPATHLEN+1];\n@@ -298,15 +323,13 @@ bool CgroupSubsystemFactory::determine_type(CgroupInfo* cg_infos,\n     // Cgroup v2 relevant info. We only look for the _mount_path iff is_cgroupsV2 so\n     // as to avoid memory stomping of the _mount_path pointer later on in the cgroup v1\n     // block in the hybrid case.\n-    //\n-    if (is_cgroupsV2 && sscanf(p, \"%*d %*d %*d:%*d %*s %s %*[^-]- %s %*s %*s\", tmp_mount_point, tmp_fs_type) == 2) {\n+    if (is_cgroupsV2 && sscanf(p, \"%*d %*d %*d:%*d %s %s %*[^-]- %s %*s %*s\", tmproot, tmpmount, tmp_fs_type) == 3) {\n       // we likely have an early match return (e.g. cgroup fs match), be sure we have cgroup2 as fstype\n-      if (!cgroupv2_mount_point_found && strcmp(\"cgroup2\", tmp_fs_type) == 0) {\n+      if (strcmp(\"cgroup2\", tmp_fs_type) == 0) {\n         cgroupv2_mount_point_found = true;\n         any_cgroup_mounts_found = true;\n         for (int i = 0; i < CG_INFO_LENGTH; i++) {\n-          assert(cg_infos[i]._mount_path == NULL, \"_mount_path memory stomping\");\n-          cg_infos[i]._mount_path = os::strdup(tmp_mount_point);\n+          set_controller_paths(cg_infos, i, \"(cg2, unified)\", tmpmount, tmproot);\n         }\n       }\n     }\n@@ -331,47 +354,23 @@ bool CgroupSubsystemFactory::determine_type(CgroupInfo* cg_infos,\n       while ((token = strsep(&cptr, \",\")) != NULL) {\n         if (strcmp(token, \"memory\") == 0) {\n           any_cgroup_mounts_found = true;\n-          assert(cg_infos[MEMORY_IDX]._mount_path == NULL, \"stomping of _mount_path\");\n-          cg_infos[MEMORY_IDX]._mount_path = os::strdup(tmpmount);\n-          cg_infos[MEMORY_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_paths(cg_infos, MEMORY_IDX, token, tmpmount, tmproot);\n           cg_infos[MEMORY_IDX]._data_complete = true;\n         } else if (strcmp(token, \"cpuset\") == 0) {\n           any_cgroup_mounts_found = true;\n-          if (cg_infos[CPUSET_IDX]._mount_path != NULL) {\n-            // On some systems duplicate cpuset controllers get mounted in addition to\n-            // the main cgroup controllers most likely under /sys/fs/cgroup. In that\n-            // case pick the one under /sys/fs/cgroup and discard others.\n-            if (strstr(cg_infos[CPUSET_IDX]._mount_path, \"/sys/fs/cgroup\") != cg_infos[CPUSET_IDX]._mount_path) {\n-              log_warning(os, container)(\"Duplicate cpuset controllers detected. Picking %s, skipping %s.\",\n-                                         tmpmount, cg_infos[CPUSET_IDX]._mount_path);\n-              os::free(cg_infos[CPUSET_IDX]._mount_path);\n-              cg_infos[CPUSET_IDX]._mount_path = os::strdup(tmpmount);\n-            } else {\n-              log_warning(os, container)(\"Duplicate cpuset controllers detected. Picking %s, skipping %s.\",\n-                                         cg_infos[CPUSET_IDX]._mount_path, tmpmount);\n-            }\n-          } else {\n-            cg_infos[CPUSET_IDX]._mount_path = os::strdup(tmpmount);\n-          }\n-          cg_infos[CPUSET_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_paths(cg_infos, CPUSET_IDX, token, tmpmount, tmproot);\n           cg_infos[CPUSET_IDX]._data_complete = true;\n         } else if (strcmp(token, \"cpu\") == 0) {\n           any_cgroup_mounts_found = true;\n-          assert(cg_infos[CPU_IDX]._mount_path == NULL, \"stomping of _mount_path\");\n-          cg_infos[CPU_IDX]._mount_path = os::strdup(tmpmount);\n-          cg_infos[CPU_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_paths(cg_infos, CPU_IDX, token, tmpmount, tmproot);\n           cg_infos[CPU_IDX]._data_complete = true;\n         } else if (strcmp(token, \"cpuacct\") == 0) {\n           any_cgroup_mounts_found = true;\n-          assert(cg_infos[CPUACCT_IDX]._mount_path == NULL, \"stomping of _mount_path\");\n-          cg_infos[CPUACCT_IDX]._mount_path = os::strdup(tmpmount);\n-          cg_infos[CPUACCT_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_paths(cg_infos, CPUACCT_IDX, token, tmpmount, tmproot);\n           cg_infos[CPUACCT_IDX]._data_complete = true;\n         } else if (strcmp(token, \"pids\") == 0) {\n           any_cgroup_mounts_found = true;\n-          assert(cg_infos[PIDS_IDX]._mount_path == NULL, \"stomping of _mount_path\");\n-          cg_infos[PIDS_IDX]._mount_path = os::strdup(tmpmount);\n-          cg_infos[PIDS_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_paths(cg_infos, PIDS_IDX, token, tmpmount, tmproot);\n           cg_infos[PIDS_IDX]._data_complete = true;\n         }\n       }\n@@ -555,7 +554,30 @@ jlong CgroupSubsystem::memory_limit_in_bytes() {\n   if (!memory_limit->should_check_metric()) {\n     return memory_limit->value();\n   }\n+  jlong phys_mem = os::Linux::physical_memory();\n+  log_trace(os, container)(\"total physical memory: \" JLONG_FORMAT, phys_mem);\n   jlong mem_limit = read_memory_limit_in_bytes();\n+\n+  if (mem_limit <= 0 || mem_limit >= phys_mem) {\n+    jlong read_mem_limit = mem_limit;\n+    const char *reason;\n+    if (mem_limit >= phys_mem) {\n+      // Exceeding physical memory is treated as unlimited. Cg v1's implementation\n+      // of read_memory_limit_in_bytes() caps this at phys_mem since Cg v1 has no\n+      // value to represent 'max'. Cg v2 may return a value >= phys_mem if e.g. the\n+      // container engine was started with a memory flag exceeding it.\n+      reason = \"ignored\";\n+      mem_limit = -1;\n+    } else if (OSCONTAINER_ERROR == mem_limit) {\n+      reason = \"failed\";\n+    } else {\n+      assert(mem_limit == -1, \"Expected unlimited\");\n+      reason = \"unlimited\";\n+    }\n+    log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", using host value \" JLONG_FORMAT,\n+                             reason, read_mem_limit, phys_mem);\n+  }\n+\n   // Update cached metric to avoid re-reading container settings too often\n   memory_limit->set_value(mem_limit, OSCONTAINER_CACHE_TIMEOUT);\n   return mem_limit;"
      },
      {
        "sha": "d4efc0f3d83cc557ba6f293b8ed9b5850dabfac9",
        "filename": "src/hotspot/os/linux/cgroupSubsystem_linux.hpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupSubsystem_linux.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupSubsystem_linux.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2FcgroupSubsystem_linux.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -252,12 +252,15 @@ class CgroupSubsystem: public CHeapObj<mtInternal> {\n     virtual jlong memory_and_swap_limit_in_bytes() = 0;\n     virtual jlong memory_soft_limit_in_bytes() = 0;\n     virtual jlong memory_max_usage_in_bytes() = 0;\n+\n     virtual char * cpu_cpuset_cpus() = 0;\n     virtual char * cpu_cpuset_memory_nodes() = 0;\n     virtual jlong read_memory_limit_in_bytes() = 0;\n     virtual const char * container_type() = 0;\n     virtual CachingCgroupController* memory_controller() = 0;\n     virtual CachingCgroupController* cpu_controller() = 0;\n+\n+    virtual void print_version_specific_info(outputStream* st) = 0;\n };\n \n // Utility class for storing info retrieved from /proc/cgroups,\n@@ -308,6 +311,11 @@ class CgroupSubsystemFactory: AllStatic {\n     }\n #endif\n \n+    static void set_controller_paths(CgroupInfo* cg_infos,\n+                                     int controller,\n+                                     const char* name,\n+                                     char* mount_path,\n+                                     char* root_path);\n     // Determine the cgroup type (version 1 or version 2), given\n     // relevant paths to files. Sets 'flags' accordingly.\n     static bool determine_type(CgroupInfo* cg_infos,"
      },
      {
        "sha": "79dd256ac61ef1e2c741fd06808ee8f7cc872b73",
        "filename": "src/hotspot/os/linux/cgroupV1Subsystem_linux.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 6,
        "changes": 47,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupV1Subsystem_linux.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupV1Subsystem_linux.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2FcgroupV1Subsystem_linux.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2019, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -31,6 +31,7 @@\n #include \"runtime/globals.hpp\"\n #include \"runtime/os.hpp\"\n #include \"utilities/globalDefinitions.hpp\"\n+#include \"os_linux.hpp\"\n \n /*\n  * Set directory to subsystem specific files based\n@@ -105,15 +106,15 @@ jlong CgroupV1Subsystem::read_memory_limit_in_bytes() {\n   GET_CONTAINER_INFO(julong, _memory->controller(), \"/memory.limit_in_bytes\",\n                      \"Memory Limit is: \" JULONG_FORMAT, JULONG_FORMAT, memlimit);\n \n-  if (memlimit >= _unlimited_memory) {\n+  if (memlimit >= os::Linux::physical_memory()) {\n     log_trace(os, container)(\"Non-Hierarchical Memory Limit is: Unlimited\");\n     CgroupV1MemoryController* mem_controller = reinterpret_cast<CgroupV1MemoryController*>(_memory->controller());\n     if (mem_controller->is_hierarchical()) {\n       const char* matchline = \"hierarchical_memory_limit\";\n       const char* format = \"%s \" JULONG_FORMAT;\n       GET_CONTAINER_INFO_LINE(julong, _memory->controller(), \"/memory.stat\", matchline,\n                              \"Hierarchical Memory Limit is: \" JULONG_FORMAT, format, hier_memlimit)\n-      if (hier_memlimit >= _unlimited_memory) {\n+      if (hier_memlimit >= os::Linux::physical_memory()) {\n         log_trace(os, container)(\"Hierarchical Memory Limit is: Unlimited\");\n       } else {\n         return (jlong)hier_memlimit;\n@@ -127,17 +128,19 @@ jlong CgroupV1Subsystem::read_memory_limit_in_bytes() {\n }\n \n jlong CgroupV1Subsystem::memory_and_swap_limit_in_bytes() {\n+  julong host_total_memsw;\n   GET_CONTAINER_INFO(julong, _memory->controller(), \"/memory.memsw.limit_in_bytes\",\n                      \"Memory and Swap Limit is: \" JULONG_FORMAT, JULONG_FORMAT, memswlimit);\n-  if (memswlimit >= _unlimited_memory) {\n+  host_total_memsw = os::Linux::host_swap() + os::Linux::physical_memory();\n+  if (memswlimit >= host_total_memsw) {\n     log_trace(os, container)(\"Non-Hierarchical Memory and Swap Limit is: Unlimited\");\n     CgroupV1MemoryController* mem_controller = reinterpret_cast<CgroupV1MemoryController*>(_memory->controller());\n     if (mem_controller->is_hierarchical()) {\n       const char* matchline = \"hierarchical_memsw_limit\";\n       const char* format = \"%s \" JULONG_FORMAT;\n       GET_CONTAINER_INFO_LINE(julong, _memory->controller(), \"/memory.stat\", matchline,\n                              \"Hierarchical Memory and Swap Limit is : \" JULONG_FORMAT, format, hier_memswlimit)\n-      if (hier_memswlimit >= _unlimited_memory) {\n+      if (hier_memswlimit >= host_total_memsw) {\n         log_trace(os, container)(\"Hierarchical Memory and Swap Limit is: Unlimited\");\n       } else {\n         jlong swappiness = read_mem_swappiness();\n@@ -172,7 +175,7 @@ jlong CgroupV1Subsystem::read_mem_swappiness() {\n jlong CgroupV1Subsystem::memory_soft_limit_in_bytes() {\n   GET_CONTAINER_INFO(julong, _memory->controller(), \"/memory.soft_limit_in_bytes\",\n                      \"Memory Soft Limit is: \" JULONG_FORMAT, JULONG_FORMAT, memsoftlimit);\n-  if (memsoftlimit >= _unlimited_memory) {\n+  if (memsoftlimit >= os::Linux::physical_memory()) {\n     log_trace(os, container)(\"Memory Soft Limit is: Unlimited\");\n     return (jlong)-1;\n   } else {\n@@ -209,6 +212,38 @@ jlong CgroupV1Subsystem::memory_max_usage_in_bytes() {\n   return memmaxusage;\n }\n \n+\n+jlong CgroupV1Subsystem::kernel_memory_usage_in_bytes() {\n+  GET_CONTAINER_INFO(jlong, _memory->controller(), \"/memory.kmem.usage_in_bytes\",\n+                     \"Kernel Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, kmem_usage);\n+  return kmem_usage;\n+}\n+\n+jlong CgroupV1Subsystem::kernel_memory_limit_in_bytes() {\n+  GET_CONTAINER_INFO(julong, _memory->controller(), \"/memory.kmem.limit_in_bytes\",\n+                     \"Kernel Memory Limit is: \" JULONG_FORMAT, JULONG_FORMAT, kmem_limit);\n+  if (kmem_limit >= os::Linux::physical_memory()) {\n+    return (jlong)-1;\n+  }\n+  return (jlong)kmem_limit;\n+}\n+\n+jlong CgroupV1Subsystem::kernel_memory_max_usage_in_bytes() {\n+  GET_CONTAINER_INFO(jlong, _memory->controller(), \"/memory.kmem.max_usage_in_bytes\",\n+                     \"Maximum Kernel Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, kmem_max_usage);\n+  return kmem_max_usage;\n+}\n+\n+void CgroupV1Subsystem::print_version_specific_info(outputStream* st) {\n+  jlong kmem_usage = kernel_memory_usage_in_bytes();\n+  jlong kmem_limit = kernel_memory_limit_in_bytes();\n+  jlong kmem_max_usage = kernel_memory_max_usage_in_bytes();\n+\n+  OSContainer::print_container_helper(st, kmem_usage, \"kernel_memory_usage_in_bytes\");\n+  OSContainer::print_container_helper(st, kmem_limit, \"kernel_memory_max_usage_in_bytes\");\n+  OSContainer::print_container_helper(st, kmem_max_usage, \"kernel_memory_limit_in_bytes\");\n+}\n+\n char * CgroupV1Subsystem::cpu_cpuset_cpus() {\n   GET_CONTAINER_INFO_CPTR(cptr, _cpuset, \"/cpuset.cpus\",\n                      \"cpuset.cpus is: %s\", \"%1023s\", cpus, 1024);"
      },
      {
        "sha": "07fac4a9461cd8c1ee0e796bdcf0abc0fbdf292f",
        "filename": "src/hotspot/os/linux/cgroupV1Subsystem_linux.hpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupV1Subsystem_linux.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupV1Subsystem_linux.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2FcgroupV1Subsystem_linux.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -79,6 +79,11 @@ class CgroupV1Subsystem: public CgroupSubsystem {\n     jlong memory_soft_limit_in_bytes();\n     jlong memory_usage_in_bytes();\n     jlong memory_max_usage_in_bytes();\n+\n+    jlong kernel_memory_usage_in_bytes();\n+    jlong kernel_memory_limit_in_bytes();\n+    jlong kernel_memory_max_usage_in_bytes();\n+\n     char * cpu_cpuset_cpus();\n     char * cpu_cpuset_memory_nodes();\n \n@@ -90,15 +95,15 @@ class CgroupV1Subsystem: public CgroupSubsystem {\n     jlong pids_max();\n     jlong pids_current();\n \n+    void print_version_specific_info(outputStream* st);\n+\n     const char * container_type() {\n       return \"cgroupv1\";\n     }\n     CachingCgroupController * memory_controller() { return _memory; }\n     CachingCgroupController * cpu_controller() { return _cpu; }\n \n   private:\n-    julong _unlimited_memory;\n-\n     /* controllers */\n     CachingCgroupController* _memory = NULL;\n     CgroupV1Controller* _cpuset = NULL;\n@@ -121,7 +126,6 @@ class CgroupV1Subsystem: public CgroupSubsystem {\n       _cpuacct = cpuacct;\n       _pids = pids;\n       _memory = new CachingCgroupController(memory);\n-      _unlimited_memory = (LONG_MAX / os::vm_page_size()) * os::vm_page_size();\n     }\n };\n "
      },
      {
        "sha": "b1035f89bf056bb098f943e7f755f5a8533f49f7",
        "filename": "src/hotspot/os/linux/cgroupV2Subsystem_linux.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupV2Subsystem_linux.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupV2Subsystem_linux.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2FcgroupV2Subsystem_linux.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -182,6 +182,16 @@ char* CgroupV2Subsystem::mem_swp_limit_val() {\n   return os::strdup(mem_swp_limit_str);\n }\n \n+// memory.swap.current : total amount of swap currently used by the cgroup and its descendants\n+char* CgroupV2Subsystem::mem_swp_current_val() {\n+  GET_CONTAINER_INFO_CPTR(cptr, _unified, \"/memory.swap.current\",\n+                         \"Swap currently used is: %s\", \"%s\", mem_swp_current_str, 1024);\n+  if (mem_swp_current_str == NULL) {\n+    return NULL;\n+  }\n+  return os::strdup(mem_swp_current_str);\n+}\n+\n /* memory_limit_in_bytes\n  *\n  * Return the limit of available memory for this process.\n@@ -212,6 +222,17 @@ char* CgroupV2Subsystem::mem_limit_val() {\n   return os::strdup(mem_limit_str);\n }\n \n+void CgroupV2Subsystem::print_version_specific_info(outputStream* st) {\n+  char* mem_swp_current_str = mem_swp_current_val();\n+  jlong swap_current = limit_from_str(mem_swp_current_str);\n+\n+  char* mem_swp_limit_str = mem_swp_limit_val();\n+  jlong swap_limit = limit_from_str(mem_swp_limit_str);\n+\n+  OSContainer::print_container_helper(st, swap_current, \"memory_swap_current_in_bytes\");\n+  OSContainer::print_container_helper(st, swap_limit, \"memory_swap_max_limit_in_bytes\");\n+}\n+\n char* CgroupV2Controller::construct_path(char* mount_path, char *cgroup_path) {\n   char buf[MAXPATHLEN+1];\n   int buflen;"
      },
      {
        "sha": "bda5872bbbcaad79253d9fd136840e7ce790a07b",
        "filename": "src/hotspot/os/linux/cgroupV2Subsystem_linux.hpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupV2Subsystem_linux.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FcgroupV2Subsystem_linux.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2FcgroupV2Subsystem_linux.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2020, Red Hat Inc.\n+ * Copyright (c) 2020, 2022, Red Hat Inc.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -58,6 +58,7 @@ class CgroupV2Subsystem: public CgroupSubsystem {\n \n     char *mem_limit_val();\n     char *mem_swp_limit_val();\n+    char *mem_swp_current_val();\n     char *mem_soft_limit_val();\n     char *cpu_quota_val();\n     char *pids_max_val();\n@@ -77,11 +78,14 @@ class CgroupV2Subsystem: public CgroupSubsystem {\n     jlong memory_soft_limit_in_bytes();\n     jlong memory_usage_in_bytes();\n     jlong memory_max_usage_in_bytes();\n+\n     char * cpu_cpuset_cpus();\n     char * cpu_cpuset_memory_nodes();\n     jlong pids_max();\n     jlong pids_current();\n \n+    void print_version_specific_info(outputStream* st);\n+\n     const char * container_type() {\n       return \"cgroupv2\";\n     }"
      },
      {
        "sha": "52e6ab86c716cdd7903586c7ea407a220ec47e19",
        "filename": "src/hotspot/os/linux/osContainer_linux.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FosContainer_linux.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FosContainer_linux.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2FosContainer_linux.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2017, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -42,8 +42,6 @@ CgroupSubsystem* cgroup_subsystem;\n  * we are running under cgroup control.\n  */\n void OSContainer::init() {\n-  jlong mem_limit;\n-\n   assert(!_is_initialized, \"Initializing OSContainer more than once\");\n \n   _is_initialized = true;\n@@ -59,15 +57,8 @@ void OSContainer::init() {\n   if (cgroup_subsystem == NULL) {\n     return; // Required subsystem files not found or other error\n   }\n-  // We need to update the amount of physical memory now that\n-  // cgroup subsystem files have been processed.\n-  if ((mem_limit = cgroup_subsystem->memory_limit_in_bytes()) > 0) {\n-    os::Linux::set_physical_memory(mem_limit);\n-    log_info(os, container)(\"Memory Limit is: \" JLONG_FORMAT, mem_limit);\n-  }\n \n   _is_containerized = true;\n-\n }\n \n const char * OSContainer::container_type() {\n@@ -100,6 +91,11 @@ jlong OSContainer::memory_max_usage_in_bytes() {\n   return cgroup_subsystem->memory_max_usage_in_bytes();\n }\n \n+void OSContainer::print_version_specific_info(outputStream* st) {\n+  assert(cgroup_subsystem != NULL, \"cgroup subsystem not available\");\n+  cgroup_subsystem->print_version_specific_info(st);\n+}\n+\n char * OSContainer::cpu_cpuset_cpus() {\n   assert(cgroup_subsystem != NULL, \"cgroup subsystem not available\");\n   return cgroup_subsystem->cpu_cpuset_cpus();\n@@ -139,3 +135,16 @@ jlong OSContainer::pids_current() {\n   assert(cgroup_subsystem != NULL, \"cgroup subsystem not available\");\n   return cgroup_subsystem->pids_current();\n }\n+\n+void OSContainer::print_container_helper(outputStream* st, jlong j, const char* metrics) {\n+  st->print(\"%s: \", metrics);\n+  if (j > 0) {\n+    if (j >= 1024) {\n+      st->print_cr(UINT64_FORMAT \" k\", uint64_t(j) / 1024);\n+    } else {\n+      st->print_cr(UINT64_FORMAT, uint64_t(j));\n+    }\n+  } else {\n+    st->print_cr(\"%s\", j == OSCONTAINER_ERROR ? \"not supported\" : \"unlimited\");\n+  }\n+}"
      },
      {
        "sha": "ecf9dc5459a0f00194d3e5f873f4589f10b3ebd4",
        "filename": "src/hotspot/os/linux/osContainer_linux.hpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FosContainer_linux.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2FosContainer_linux.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2FosContainer_linux.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -27,6 +27,7 @@\n \n #include \"utilities/globalDefinitions.hpp\"\n #include \"utilities/macros.hpp\"\n+#include \"utilities/ostream.hpp\"\n #include \"memory/allocation.hpp\"\n \n #define OSCONTAINER_ERROR (-2)\n@@ -43,6 +44,9 @@ class OSContainer: AllStatic {\n \n  public:\n   static void init();\n+  static void print_version_specific_info(outputStream* st);\n+  static void print_container_helper(outputStream* st, jlong j, const char* metrics);\n+\n   static inline bool is_containerized();\n   static const char * container_type();\n "
      },
      {
        "sha": "65b3ed466984a9d68242b2927738be1192d540e3",
        "filename": "src/hotspot/os/linux/os_linux.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 26,
        "changes": 44,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2Fos_linux.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2Fos_linux.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2Fos_linux.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -195,15 +195,12 @@ julong os::Linux::available_memory() {\n   julong avail_mem;\n \n   if (OSContainer::is_containerized()) {\n-    jlong mem_limit, mem_usage;\n-    if ((mem_limit = OSContainer::memory_limit_in_bytes()) < 1) {\n-      log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", using host value\",\n-                             mem_limit == OSCONTAINER_ERROR ? \"failed\" : \"unlimited\", mem_limit);\n-    }\n+    jlong mem_limit = OSContainer::memory_limit_in_bytes();\n+    jlong mem_usage;\n     if (mem_limit > 0 && (mem_usage = OSContainer::memory_usage_in_bytes()) < 1) {\n       log_debug(os, container)(\"container memory usage failed: \" JLONG_FORMAT \", using host value\", mem_usage);\n     }\n-    if (mem_limit > 0 && mem_usage > 0 ) {\n+    if (mem_limit > 0 && mem_usage > 0) {\n       avail_mem = mem_limit > mem_usage ? (julong)mem_limit - (julong)mem_usage : 0;\n       log_trace(os)(\"available container memory: \" JULONG_FORMAT, avail_mem);\n       return avail_mem;\n@@ -224,8 +221,6 @@ julong os::physical_memory() {\n       log_trace(os)(\"total container memory: \" JLONG_FORMAT, mem_limit);\n       return mem_limit;\n     }\n-    log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", using host value\",\n-                            mem_limit == OSCONTAINER_ERROR ? \"failed\" : \"unlimited\", mem_limit);\n   }\n \n   phys_mem = Linux::physical_memory();\n@@ -354,6 +349,14 @@ pid_t os::Linux::gettid() {\n   return (pid_t)rslt;\n }\n \n+// Returns the amount of swap currently configured, in bytes.\n+// This can change at any time.\n+julong os::Linux::host_swap() {\n+  struct sysinfo si;\n+  sysinfo(&si);\n+  return (julong)si.totalswap;\n+}\n+\n // Most versions of linux have a bug where the number of processors are\n // determined by looking at the /proc file system.  In a chroot environment,\n // the system call returns 1.\n@@ -2275,19 +2278,6 @@ void os::Linux::print_uptime_info(outputStream* st) {\n   }\n }\n \n-static void print_container_helper(outputStream* st, jlong j, const char* metrics) {\n-  st->print(\"%s: \", metrics);\n-  if (j > 0) {\n-    if (j >= 1024) {\n-      st->print_cr(UINT64_FORMAT \" k\", uint64_t(j) / 1024);\n-    } else {\n-      st->print_cr(UINT64_FORMAT, uint64_t(j));\n-    }\n-  } else {\n-    st->print_cr(\"%s\", j == OSCONTAINER_ERROR ? \"not supported\" : \"unlimited\");\n-  }\n-}\n-\n bool os::Linux::print_container_info(outputStream* st) {\n   if (!OSContainer::is_containerized()) {\n     st->print_cr(\"container information not found.\");\n@@ -2343,11 +2333,13 @@ bool os::Linux::print_container_info(outputStream* st) {\n     st->print_cr(\"%s\", i == OSCONTAINER_ERROR ? \"not supported\" : \"no shares\");\n   }\n \n-  print_container_helper(st, OSContainer::memory_limit_in_bytes(), \"memory_limit_in_bytes\");\n-  print_container_helper(st, OSContainer::memory_and_swap_limit_in_bytes(), \"memory_and_swap_limit_in_bytes\");\n-  print_container_helper(st, OSContainer::memory_soft_limit_in_bytes(), \"memory_soft_limit_in_bytes\");\n-  print_container_helper(st, OSContainer::memory_usage_in_bytes(), \"memory_usage_in_bytes\");\n-  print_container_helper(st, OSContainer::memory_max_usage_in_bytes(), \"memory_max_usage_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_limit_in_bytes(), \"memory_limit_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_and_swap_limit_in_bytes(), \"memory_and_swap_limit_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_soft_limit_in_bytes(), \"memory_soft_limit_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_usage_in_bytes(), \"memory_usage_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_max_usage_in_bytes(), \"memory_max_usage_in_bytes\");\n+\n+  OSContainer::print_version_specific_info(st);\n \n   jlong j = OSContainer::pids_max();\n   st->print(\"maximum number of tasks: \");"
      },
      {
        "sha": "f71a4b805250f5e2c6b1ed12843c04fcfafe9044",
        "filename": "src/hotspot/os/linux/os_linux.hpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2Fos_linux.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Flinux%2Fos_linux.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Flinux%2Fos_linux.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -59,8 +59,6 @@ class Linux {\n   static int _page_size;\n \n   static julong available_memory();\n-  static julong physical_memory() { return _physical_memory; }\n-  static void set_physical_memory(julong phys_mem) { _physical_memory = phys_mem; }\n   static int active_processor_count();\n \n   static void initialize_system_info();\n@@ -136,6 +134,9 @@ class Linux {\n   static int page_size(void)                                        { return _page_size; }\n   static void set_page_size(int val)                                { _page_size = val; }\n \n+  static julong physical_memory() { return _physical_memory; }\n+  static julong host_swap();\n+\n   static intptr_t* ucontext_get_sp(const ucontext_t* uc);\n   static intptr_t* ucontext_get_fp(const ucontext_t* uc);\n "
      },
      {
        "sha": "120871e7958312653101ec6eb90dc691efa05702",
        "filename": "src/hotspot/os/posix/signals_posix.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 16,
        "changes": 41,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Fposix%2Fsignals_posix.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Fposix%2Fsignals_posix.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Fposix%2Fsignals_posix.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -341,7 +341,7 @@ static const struct {\n };\n \n ////////////////////////////////////////////////////////////////////////////////\n-// sun.misc.Signal support\n+// sun.misc.Signal and BREAK_SIGNAL support\n \n void jdk_misc_signal_init() {\n   // Initialize signal structures\n@@ -562,11 +562,6 @@ int JVM_HANDLE_XXX_SIGNAL(int sig, siginfo_t* info,\n {\n   assert(info != NULL && ucVoid != NULL, \"sanity\");\n \n-  if (sig == BREAK_SIGNAL) {\n-    assert(!ReduceSignalUsage, \"Should not happen with -Xrs/-XX:+ReduceSignalUsage\");\n-    return true; // ignore it\n-  }\n-\n   // Note: it's not uncommon that JNI code uses signal/sigset to install,\n   // then restore certain signal handler (e.g. to temporarily block SIGPIPE,\n   // or have a SIGILL handler when detecting CPU type). When that happens,\n@@ -1202,7 +1197,7 @@ int os::get_signal_number(const char* signal_name) {\n   return -1;\n }\n \n-void set_signal_handler(int sig, bool do_check = true) {\n+void set_signal_handler(int sig) {\n   // Check for overwrite.\n   struct sigaction oldAct;\n   sigaction(sig, (struct sigaction*)NULL, &oldAct);\n@@ -1244,9 +1239,10 @@ void set_signal_handler(int sig, bool do_check = true) {\n   }\n #endif\n \n-  // Save handler setup for later checking\n+  // Save handler setup for possible later checking\n   vm_handlers.set(sig, &sigAct);\n-  do_check_signal_periodically[sig] = do_check;\n+\n+  do_check_signal_periodically[sig] = true;\n \n   int ret = sigaction(sig, &sigAct, &oldAct);\n   assert(ret == 0, \"check\");\n@@ -1285,11 +1281,24 @@ void install_signal_handlers() {\n   PPC64_ONLY(set_signal_handler(SIGTRAP);)\n   set_signal_handler(SIGXFSZ);\n   if (!ReduceSignalUsage) {\n-    // This is just for early initialization phase. Intercepting the signal here reduces the risk\n-    // that an attach client accidentally forces HotSpot to quit prematurely. We skip the periodic\n-    // check because late initialization will overwrite it to UserHandler.\n-    set_signal_handler(BREAK_SIGNAL, false);\n+    // Install BREAK_SIGNAL's handler in early initialization phase, in\n+    // order to reduce the risk that an attach client accidentally forces\n+    // HotSpot to quit prematurely.\n+    // The actual work for handling BREAK_SIGNAL is performed by the Signal\n+    // Dispatcher thread, which is created and started at a much later point,\n+    // see os::initialize_jdk_signal_support(). Any BREAK_SIGNAL received\n+    // before the Signal Dispatcher thread is started is queued up via the\n+    // pending_signals[BREAK_SIGNAL] counter, and will be processed by the\n+    // Signal Dispatcher thread in a delayed fashion.\n+    //\n+    // Also note that HotSpot does NOT support signal chaining for BREAK_SIGNAL.\n+    // Applications that require a custom BREAK_SIGNAL handler should run with\n+    // -XX:+ReduceSignalUsage. Otherwise if libjsig is used together with\n+    // -XX:+ReduceSignalUsage, libjsig will prevent changing BREAK_SIGNAL's\n+    // handler to a custom handler.\n+    os::signal(BREAK_SIGNAL, os::user_handler());\n   }\n+\n #if defined(__APPLE__)\n   // lldb (gdb) installs both standard BSD signal handlers, and mach exception\n   // handlers. By replacing the existing task exception handler, we disable lldb's mach\n@@ -1784,12 +1793,12 @@ int PosixSignals::init() {\n \n   signal_sets_init();\n \n-  install_signal_handlers();\n-\n-  // Initialize data for jdk.internal.misc.Signal\n+  // Initialize data for jdk.internal.misc.Signal and BREAK_SIGNAL's handler.\n   if (!ReduceSignalUsage) {\n     jdk_misc_signal_init();\n   }\n \n+  install_signal_handlers();\n+\n   return JNI_OK;\n }"
      },
      {
        "sha": "56300c0c8802c5058b65a8d021117bc19d0266f7",
        "filename": "src/hotspot/os/windows/os_windows.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Fwindows%2Fos_windows.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos%2Fwindows%2Fos_windows.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos%2Fwindows%2Fos_windows.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -2266,6 +2266,15 @@ static void jdk_misc_signal_init() {\n \n   // Add a CTRL-C handler\n   SetConsoleCtrlHandler(consoleHandler, TRUE);\n+\n+  // Initialize sigbreakHandler.\n+  // The actual work for handling CTRL-BREAK is performed by the Signal\n+  // Dispatcher thread, which is created and started at a much later point,\n+  // see os::initialize_jdk_signal_support(). Any CTRL-BREAK received\n+  // before the Signal Dispatcher thread is started is queued up via the\n+  // pending_signals[SIGBREAK] counter, and will be processed by the\n+  // Signal Dispatcher thread in a delayed fashion.\n+  os::signal(SIGBREAK, os::user_handler());\n }\n \n void os::signal_notify(int sig) {\n@@ -4386,7 +4395,8 @@ jint os::init_2(void) {\n \n   SymbolEngine::recalc_search_path();\n \n-  // Initialize data for jdk.internal.misc.Signal\n+  // Initialize data for jdk.internal.misc.Signal, and install CTRL-C and\n+  // CTRL-BREAK handlers.\n   if (!ReduceSignalUsage) {\n     jdk_misc_signal_init();\n   }"
      },
      {
        "sha": "3bfee91458817708e7889e69344d9eb0c7ac6bfe",
        "filename": "src/hotspot/os_cpu/aix_ppc/thread_aix_ppc.cpp",
        "status": "modified",
        "additions": 78,
        "deletions": 11,
        "changes": 89,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Faix_ppc%2Fthread_aix_ppc.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Faix_ppc%2Fthread_aix_ppc.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos_cpu%2Faix_ppc%2Fthread_aix_ppc.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,6 +1,7 @@\n /*\n- * Copyright (c) 1997, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * Copyright (c) 2012, 2014 SAP SE. All rights reserved.\n+ * Copyright (c) 2022, IBM Corp.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -24,33 +25,99 @@\n  */\n \n #include \"precompiled.hpp\"\n+#include \"memory/metaspace.hpp\"\n #include \"runtime/frame.inline.hpp\"\n #include \"runtime/thread.hpp\"\n \n frame JavaThread::pd_last_frame() {\n   assert(has_last_Java_frame(), \"must have last_Java_sp() when suspended\");\n \n-  intptr_t* sp = Atomic::load_acquire(&_anchor._last_Java_sp);\n+  // Only called by current thread or when the thread is suspended.\n+  // No memory barrier needed, here. Only writer must write sp last (for use by profiler).\n+  intptr_t* sp = last_Java_sp();\n   address pc = _anchor.last_Java_pc();\n \n   // Last_Java_pc ist not set, if we come here from compiled code.\n-  if (pc == NULL)\n-    pc =  (address) *(sp + 2);\n+  // Assume spill slot for link register contains a suitable pc.\n+  // Should have been filled by method entry code.\n+  if (pc == NULL) {\n+    pc = (address) *(sp + 2);\n+  }\n \n   return frame(sp, pc);\n }\n \n bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr, void* ucontext, bool isInJava) {\n-  ucontext_t* uc = (ucontext_t*) ucontext;\n-  *fr_addr = frame((intptr_t*)uc->uc_mcontext.jmp_context.gpr[1/*REG_SP*/],\n-                   (address)uc->uc_mcontext.jmp_context.iar);\n-  return true;\n+\n+  // If we have a last_Java_frame, then we should use it even if\n+  // isInJava == true.  It should be more reliable than ucontext info.\n+  if (has_last_Java_frame() && frame_anchor()->walkable()) {\n+    intptr_t* sp = last_Java_sp();\n+    address pc = _anchor.last_Java_pc();\n+    // pc can be seen as null because not all writers use store pc + release store sp.\n+    // Simply discard the sample in this very rare case.\n+    if (pc == nullptr) return false;\n+    *fr_addr = frame(sp, pc);\n+    return true;\n+  }\n+\n+  // At this point, we don't have a last_Java_frame, so\n+  // we try to glean some information out of the ucontext\n+  // if we were running Java code when SIGPROF came in.\n+  if (isInJava) {\n+    ucontext_t* uc = (ucontext_t*) ucontext;\n+    address pc = (address)uc->uc_mcontext.jmp_context.iar;\n+\n+    if (pc == NULL) {\n+      // ucontext wasn't useful\n+      return false;\n+    }\n+\n+    frame ret_frame((intptr_t*)uc->uc_mcontext.jmp_context.gpr[1/*REG_SP*/], pc);\n+\n+    if (ret_frame.fp() == NULL) {\n+      // The found frame does not have a valid frame pointer.\n+      // Bail out because this will create big trouble later on, either\n+      //  - when using istate, calculated as (NULL - ijava_state_size) or\n+      //  - when using fp() directly in safe_for_sender()\n+      //\n+      // There is no conclusive description (yet) how this could happen, but it does.\n+      // For more details on what was observed, see thread_linux_s390.cpp\n+      return false;\n+    }\n+\n+    if (ret_frame.is_interpreted_frame()) {\n+      frame::ijava_state *istate = ret_frame.get_ijava_state();\n+      const Method *m = (const Method*)(istate->method);\n+      if (!Method::is_valid_method(m)) return false;\n+      if (!Metaspace::contains(m->constMethod())) return false;\n+\n+      uint64_t reg_bcp = uc->uc_mcontext.jmp_context.gpr[14/*R14_bcp*/];\n+      uint64_t istate_bcp = istate->bcp;\n+      uint64_t code_start = (uint64_t)(m->code_base());\n+      uint64_t code_end = (uint64_t)(m->code_base() + m->code_size());\n+      if (istate_bcp >= code_start && istate_bcp < code_end) {\n+        // we have a valid bcp, don't touch it, do nothing\n+      } else if (reg_bcp >= code_start && reg_bcp < code_end) {\n+        istate->bcp = reg_bcp;\n+      } else {\n+        return false;\n+      }\n+    }\n+    if (!ret_frame.safe_for_sender(this)) {\n+      // nothing else to try if the frame isn't good\n+      return false;\n+    }\n+    *fr_addr = ret_frame;\n+    return true;\n+  }\n+  // nothing else to try\n+  return false;\n }\n \n-// Forte Analyzer AsyncGetCallTrace profiling support is not implemented on Aix/PPC.\n+// Forte Analyzer AsyncGetCallTrace profiling support.\n bool JavaThread::pd_get_top_frame_for_signal_handler(frame* fr_addr, void* ucontext, bool isInJava) {\n-  Unimplemented();\n-  return false;\n+  return pd_get_top_frame_for_profiling(fr_addr, ucontext, isInJava);\n }\n \n void JavaThread::cache_global_variables() { }"
      },
      {
        "sha": "d85822bdec231eeb7d686e2a8d16f893212a5584",
        "filename": "src/hotspot/os_cpu/bsd_zero/os_bsd_zero.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Fbsd_zero%2Fos_bsd_zero.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Fbsd_zero%2Fos_bsd_zero.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos_cpu%2Fbsd_zero%2Fos_bsd_zero.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -350,3 +350,9 @@ int os::extra_bang_size_in_bytes() {\n   // Zero does not require an additional stack bang.\n   return 0;\n }\n+\n+#if defined(AARCH64) && defined(__APPLE__)\n+void os::current_thread_enable_wx(WXMode mode) {\n+  pthread_jit_write_protect_np(mode == WXExec);\n+}\n+#endif"
      },
      {
        "sha": "7df65bed1eef2078caead22b0c21f1536d7f4292",
        "filename": "src/hotspot/os_cpu/linux_arm/os_linux_arm.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_arm%2Fos_linux_arm.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_arm%2Fos_linux_arm.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos_cpu%2Flinux_arm%2Fos_linux_arm.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -468,9 +468,8 @@ void os::print_register_info(outputStream *st, const void *context) {\n   st->print_cr(\"Register to memory mapping:\");\n   st->cr();\n   for (int r = 0; r < ARM_REGS_IN_CONTEXT; r++) {\n-    st->print_cr(\"  %-3s = \" INTPTR_FORMAT, as_Register(r)->name(), reg_area[r]);\n+    st->print(\"  %-3s = \", as_Register(r)->name());\n     print_location(st, reg_area[r]);\n-    st->cr();\n   }\n   st->cr();\n }"
      },
      {
        "sha": "bf15786ae1f73e8f8143f8657b48604acc573703",
        "filename": "src/hotspot/os_cpu/linux_ppc/thread_linux_ppc.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_ppc%2Fthread_linux_ppc.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_ppc%2Fthread_linux_ppc.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos_cpu%2Flinux_ppc%2Fthread_linux_ppc.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -31,7 +31,9 @@\n frame JavaThread::pd_last_frame() {\n   assert(has_last_Java_frame(), \"must have last_Java_sp() when suspended\");\n \n-  intptr_t* sp = Atomic::load_acquire(&_anchor._last_Java_sp);\n+  // Only called by current thread or when the thread is suspended.\n+  // No memory barrier needed, here. Only writer must write sp last (for use by profiler).\n+  intptr_t* sp = last_Java_sp();\n   address pc = _anchor.last_Java_pc();\n \n   // Last_Java_pc ist not set, if we come here from compiled code.\n@@ -49,7 +51,12 @@ bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr, void* ucontext,\n   // If we have a last_Java_frame, then we should use it even if\n   // isInJava == true.  It should be more reliable than ucontext info.\n   if (has_last_Java_frame() && frame_anchor()->walkable()) {\n-    *fr_addr = pd_last_frame();\n+    intptr_t* sp = last_Java_sp();\n+    address pc = _anchor.last_Java_pc();\n+    // pc can be seen as null because not all writers use store pc + release store sp.\n+    // Simply discard the sample in this very rare case.\n+    if (pc == nullptr) return false;\n+    *fr_addr = frame(sp, pc);\n     return true;\n   }\n "
      },
      {
        "sha": "9754cb707cec33ca6b2b03ffe4311ce31a58959d",
        "filename": "src/hotspot/os_cpu/linux_x86/os_linux_x86.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 3,
        "changes": 22,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_x86%2Fos_linux_x86.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_x86%2Fos_linux_x86.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos_cpu%2Flinux_x86%2Fos_linux_x86.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -459,11 +459,26 @@ bool os::supports_sse() {\n }\n \n juint os::cpu_microcode_revision() {\n+  // Note: this code runs on startup, and therefore should not be slow,\n+  // see JDK-8283200.\n+\n   juint result = 0;\n-  char data[2048] = {0}; // lines should fit in 2K buf\n-  size_t len = sizeof(data);\n-  FILE *fp = fopen(\"/proc/cpuinfo\", \"r\");\n+\n+  // Attempt 1 (faster): Read the microcode version off the sysfs.\n+  FILE *fp = fopen(\"/sys/devices/system/cpu/cpu0/microcode/version\", \"r\");\n+  if (fp) {\n+    int read = fscanf(fp, \"%x\", &result);\n+    fclose(fp);\n+    if (read > 0) {\n+      return result;\n+    }\n+  }\n+\n+  // Attempt 2 (slower): Read the microcode version off the procfs.\n+  fp = fopen(\"/proc/cpuinfo\", \"r\");\n   if (fp) {\n+    char data[2048] = {0}; // lines should fit in 2K buf\n+    size_t len = sizeof(data);\n     while (!feof(fp)) {\n       if (fgets(data, len, fp)) {\n         if (strstr(data, \"microcode\") != NULL) {\n@@ -475,6 +490,7 @@ juint os::cpu_microcode_revision() {\n     }\n     fclose(fp);\n   }\n+\n   return result;\n }\n "
      },
      {
        "sha": "e4313782613ddab3ed94a56b66553f5089051fa0",
        "filename": "src/hotspot/os_cpu/linux_zero/thread_linux_zero.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 2,
        "changes": 41,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_zero%2Fthread_linux_zero.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_zero%2Fthread_linux_zero.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos_cpu%2Flinux_zero%2Fthread_linux_zero.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,6 +1,6 @@\n /*\n- * Copyright (c) 1997, 2018, Oracle and/or its affiliates. All rights reserved.\n- * Copyright 2009, 2010 Red Hat, Inc.\n+ * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Red Hat, Inc. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -35,3 +35,40 @@ frame JavaThread::pd_last_frame() {\n void JavaThread::cache_global_variables() {\n   // nothing to do\n }\n+\n+bool JavaThread::pd_get_top_frame_for_signal_handler(frame* fr_addr,\n+                                         void* ucontext,\n+                                         bool isInJava) {\n+  if (has_last_Java_frame()) {\n+    *fr_addr = pd_last_frame();\n+    return true;\n+  }\n+\n+  if (isInJava) {\n+    // We know we are in Java, but there is no frame?\n+    // Try to find the top-most Java frame on Zero stack then.\n+    intptr_t* sp = zero_stack()->sp();\n+    ZeroFrame* zf = top_zero_frame();\n+    while (zf != NULL) {\n+      if (zf->is_interpreter_frame()) {\n+        interpreterState istate = zf->as_interpreter_frame()->interpreter_state();\n+        if (istate->self_link() == istate) {\n+          // Valid interpreter state found, this is our frame.\n+          *fr_addr = frame(zf, sp);\n+          return true;\n+        }\n+      }\n+      sp = ((intptr_t *) zf) + 1;\n+      zf = zf->next();\n+    }\n+  }\n+\n+  // No dice.\n+  return false;\n+}\n+\n+bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr,\n+                                    void* ucontext,\n+                                    bool isInJava) {\n+  return pd_get_top_frame_for_signal_handler(fr_addr, ucontext, isInJava);\n+}"
      },
      {
        "sha": "b915c40c04987a5c303a9ef5eeceeab8dd6542d6",
        "filename": "src/hotspot/os_cpu/linux_zero/thread_linux_zero.hpp",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_zero%2Fthread_linux_zero.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fos_cpu%2Flinux_zero%2Fthread_linux_zero.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fos_cpu%2Flinux_zero%2Fthread_linux_zero.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,6 +1,6 @@\n /*\n- * Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n- * Copyright 2007, 2008, 2009, 2010 Red Hat, Inc.\n+ * Copyright (c) 2000, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Red Hat, Inc. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -96,16 +96,10 @@\n  public:\n   bool pd_get_top_frame_for_signal_handler(frame* fr_addr,\n                                            void* ucontext,\n-                                           bool isInJava) {\n-    ShouldNotCallThis();\n-    return false; // silence compile warning\n-  }\n+                                           bool isInJava);\n \n   bool pd_get_top_frame_for_profiling(frame* fr_addr,\n                                       void* ucontext,\n-                                      bool isInJava) {\n-    ShouldNotCallThis();\n-    return false; // silence compile warning\n-  }\n+                                      bool isInJava);\n \n #endif // OS_CPU_LINUX_ZERO_THREAD_LINUX_ZERO_HPP"
      },
      {
        "sha": "6f233aa62a2af766b7d6c8523b166bb4c68faa04",
        "filename": "src/hotspot/share/c1/c1_Canonicalizer.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fc1%2Fc1_Canonicalizer.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fc1%2Fc1_Canonicalizer.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fc1%2Fc1_Canonicalizer.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -790,7 +790,7 @@ void Canonicalizer::do_If(If* x) {\n         else if (lss_sux == gtr_sux) { cond = If::neq; tsux = lss_sux; fsux = eql_sux; }\n         else if (eql_sux == gtr_sux) { cond = If::geq; tsux = eql_sux; fsux = lss_sux; }\n         else                         { ShouldNotReachHere();                           }\n-        If* canon = new If(cmp->x(), cond, nan_sux == tsux, cmp->y(), tsux, fsux, cmp->state_before(), x->is_safepoint());\n+        If* canon = new If(cmp->x(), cond, nan_sux == tsux, cmp->y(), tsux, fsux, x->state_before(), x->is_safepoint());\n         if (cmp->x() == cmp->y()) {\n           do_If(canon);\n         } else {"
      },
      {
        "sha": "3c2545ec6615e7544d7b09113a3c5dc75c28f7fb",
        "filename": "src/hotspot/share/c1/c1_GraphBuilder.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fc1%2Fc1_GraphBuilder.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fc1%2Fc1_GraphBuilder.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fc1%2Fc1_GraphBuilder.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -2154,8 +2154,7 @@ void GraphBuilder::invoke(Bytecodes::Code code) {\n \n void GraphBuilder::new_instance(int klass_index) {\n   ValueStack* state_before = copy_state_exhandling();\n-  bool will_link;\n-  ciKlass* klass = stream()->get_klass(will_link);\n+  ciKlass* klass = stream()->get_klass();\n   assert(klass->is_instance_klass(), \"must be an instance klass\");\n   NewInstance* new_instance = new NewInstance(klass->as_instance_klass(), state_before, stream()->is_unresolved_klass());\n   _memory->new_instance(new_instance);\n@@ -2170,8 +2169,7 @@ void GraphBuilder::new_type_array() {\n \n \n void GraphBuilder::new_object_array() {\n-  bool will_link;\n-  ciKlass* klass = stream()->get_klass(will_link);\n+  ciKlass* klass = stream()->get_klass();\n   ValueStack* state_before = !klass->is_loaded() || PatchALot ? copy_state_before() : copy_state_exhandling();\n   NewArray* n = new NewObjectArray(klass, ipop(), state_before);\n   apush(append_split(n));\n@@ -2196,8 +2194,7 @@ bool GraphBuilder::direct_compare(ciKlass* k) {\n \n \n void GraphBuilder::check_cast(int klass_index) {\n-  bool will_link;\n-  ciKlass* klass = stream()->get_klass(will_link);\n+  ciKlass* klass = stream()->get_klass();\n   ValueStack* state_before = !klass->is_loaded() || PatchALot ? copy_state_before() : copy_state_for_exception();\n   CheckCast* c = new CheckCast(klass, apop(), state_before);\n   apush(append_split(c));\n@@ -2217,8 +2214,7 @@ void GraphBuilder::check_cast(int klass_index) {\n \n \n void GraphBuilder::instance_of(int klass_index) {\n-  bool will_link;\n-  ciKlass* klass = stream()->get_klass(will_link);\n+  ciKlass* klass = stream()->get_klass();\n   ValueStack* state_before = !klass->is_loaded() || PatchALot ? copy_state_before() : copy_state_exhandling();\n   InstanceOf* i = new InstanceOf(klass, apop(), state_before);\n   ipush(append_split(i));\n@@ -2252,8 +2248,7 @@ void GraphBuilder::monitorexit(Value x, int bci) {\n \n \n void GraphBuilder::new_multi_array(int dimensions) {\n-  bool will_link;\n-  ciKlass* klass = stream()->get_klass(will_link);\n+  ciKlass* klass = stream()->get_klass();\n   ValueStack* state_before = !klass->is_loaded() || PatchALot ? copy_state_before() : copy_state_exhandling();\n \n   Values* dims = new Values(dimensions, dimensions, NULL);"
      },
      {
        "sha": "fb178432d8bbb2bdef82841e2b0abc26c4dc4c74",
        "filename": "src/hotspot/share/c1/c1_Runtime1.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 4,
        "changes": 41,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fc1%2Fc1_Runtime1.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fc1%2Fc1_Runtime1.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fc1%2Fc1_Runtime1.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1254,6 +1254,37 @@ JRT_END\n \n #else // DEOPTIMIZE_WHEN_PATCHING\n \n+static bool is_patching_needed(JavaThread* current, Runtime1::StubID stub_id) {\n+  if (stub_id == Runtime1::load_klass_patching_id ||\n+      stub_id == Runtime1::load_mirror_patching_id) {\n+    // last java frame on stack\n+    vframeStream vfst(current, true);\n+    assert(!vfst.at_end(), \"Java frame must exist\");\n+\n+    methodHandle caller_method(current, vfst.method());\n+    int bci = vfst.bci();\n+    Bytecodes::Code code = caller_method()->java_code_at(bci);\n+\n+    switch (code) {\n+      case Bytecodes::_new:\n+      case Bytecodes::_anewarray:\n+      case Bytecodes::_multianewarray:\n+      case Bytecodes::_instanceof:\n+      case Bytecodes::_checkcast: {\n+        Bytecode bc(caller_method(), caller_method->bcp_from(bci));\n+        constantTag tag = caller_method->constants()->tag_at(bc.get_index_u2(code));\n+        if (tag.is_unresolved_klass_in_error()) {\n+          return false; // throws resolution error\n+        }\n+        break;\n+      }\n+\n+      default: break;\n+    }\n+  }\n+  return true;\n+}\n+\n void Runtime1::patch_code(JavaThread* current, Runtime1::StubID stub_id) {\n   NOT_PRODUCT(_patch_code_slowcase_cnt++);\n \n@@ -1271,10 +1302,12 @@ void Runtime1::patch_code(JavaThread* current, Runtime1::StubID stub_id) {\n   frame caller_frame = runtime_frame.sender(&reg_map);\n   assert(caller_frame.is_compiled_frame(), \"Wrong frame type\");\n \n-  // Make sure the nmethod is invalidated, i.e. made not entrant.\n-  nmethod* nm = CodeCache::find_nmethod(caller_frame.pc());\n-  if (nm != NULL) {\n-    nm->make_not_entrant();\n+  if (is_patching_needed(current, stub_id)) {\n+    // Make sure the nmethod is invalidated, i.e. made not entrant.\n+    nmethod* nm = CodeCache::find_nmethod(caller_frame.pc());\n+    if (nm != NULL) {\n+      nm->make_not_entrant();\n+    }\n   }\n \n   Deoptimization::deoptimize_frame(current, caller_frame.id());"
      },
      {
        "sha": "1c39b4b488a4bf5177af4cf9bdc642fecae61de0",
        "filename": "src/hotspot/share/ci/ciInstanceKlass.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fci%2FciInstanceKlass.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fci%2FciInstanceKlass.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fci%2FciInstanceKlass.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -355,7 +355,7 @@ void ciInstanceKlass::print_impl(outputStream* st) {\n   ciKlass::print_impl(st);\n   GUARDED_VM_ENTRY(st->print(\" loader=\" INTPTR_FORMAT, p2i(loader()));)\n   if (is_loaded()) {\n-    st->print(\" loaded=true initialized=%s finalized=%s subklass=%s size=%d flags=\",\n+    st->print(\" initialized=%s finalized=%s subklass=%s size=%d flags=\",\n               bool_to_str(is_initialized()),\n               bool_to_str(has_finalizer()),\n               bool_to_str(has_subklass()),\n@@ -370,8 +370,6 @@ void ciInstanceKlass::print_impl(outputStream* st) {\n     if (_java_mirror) {\n       st->print(\" mirror=PRESENT\");\n     }\n-  } else {\n-    st->print(\" loaded=false\");\n   }\n }\n "
      },
      {
        "sha": "be9f903ff49d647c5ab752f7070a3f228b6fa9f4",
        "filename": "src/hotspot/share/ci/ciKlass.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fci%2FciKlass.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fci%2FciKlass.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fci%2FciKlass.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -233,6 +233,7 @@ jint ciKlass::access_flags() {\n void ciKlass::print_impl(outputStream* st) {\n   st->print(\" name=\");\n   print_name_on(st);\n+  st->print(\" loaded=%s\", (is_loaded() ? \"true\" : \"false\"));\n }\n \n // ------------------------------------------------------------------"
      },
      {
        "sha": "0b42a1b4b64c6eba4c5b23007c9ca6b917707636",
        "filename": "src/hotspot/share/ci/ciStreams.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fci%2FciStreams.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fci%2FciStreams.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fci%2FciStreams.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -23,9 +23,10 @@\n  */\n \n #include \"precompiled.hpp\"\n-#include \"ci/ciCallSite.hpp\"\n #include \"ci/ciConstant.hpp\"\n #include \"ci/ciField.hpp\"\n+#include \"ci/ciKlass.hpp\"\n+#include \"ci/ciObjArrayKlass.hpp\"\n #include \"ci/ciStreams.hpp\"\n #include \"ci/ciSymbols.hpp\"\n #include \"ci/ciUtilities.inline.hpp\"\n@@ -191,6 +192,21 @@ ciKlass* ciBytecodeStream::get_klass(bool& will_link) {\n   return CURRENT_ENV->get_klass_by_index(cpool, get_klass_index(), will_link, _holder);\n }\n \n+// ciBytecodeStream::get_klass\n+//\n+// If this bytecode is a new, newarray, multianewarray, instanceof,\n+// or checkcast, get the referenced klass. Retuns an unloaded ciKlass\n+// if the referenced klass is not accessible.\n+ciKlass* ciBytecodeStream::get_klass() {\n+  bool will_link;\n+  ciKlass* klass = get_klass(will_link);\n+  if (!will_link && klass->is_loaded()) { // klass not accessible\n+    VM_ENTRY_MARK;\n+    klass = CURRENT_ENV->get_unloaded_klass(_holder, klass->name());\n+  }\n+  return klass;\n+}\n+\n // ------------------------------------------------------------------\n // ciBytecodeStream::get_constant_raw_index\n //"
      },
      {
        "sha": "29723953c2b53328d3f8add7535bb858a989386a",
        "filename": "src/hotspot/share/ci/ciStreams.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fci%2FciStreams.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fci%2FciStreams.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fci%2FciStreams.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -217,6 +217,7 @@ class ciBytecodeStream : StackObj {\n \n   // If this bytecode is a new, newarray, multianewarray, instanceof,\n   // or checkcast, get the referenced klass.\n+  ciKlass* get_klass();\n   ciKlass* get_klass(bool& will_link);\n   int get_klass_index() const;\n "
      },
      {
        "sha": "1097000849d03a2611fe033617db01e579eaed3b",
        "filename": "src/hotspot/share/classfile/javaClasses.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fclassfile%2FjavaClasses.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fclassfile%2FjavaClasses.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fclassfile%2FjavaClasses.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -4480,6 +4480,7 @@ bool java_lang_System::allow_security_manager() {\n     oop base = vmClasses::System_klass()->static_field_base_raw();\n     int never = base->int_field(_static_never_offset);\n     allowed = (base->int_field(_static_allow_security_offset) != never);\n+    initialized = true;\n   }\n   return allowed;\n }"
      },
      {
        "sha": "3422d2112849452309aed790a48ee6bfd21c05a8",
        "filename": "src/hotspot/share/classfile/vmIntrinsics.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fclassfile%2FvmIntrinsics.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fclassfile%2FvmIntrinsics.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fclassfile%2FvmIntrinsics.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -460,7 +460,7 @@ class methodHandle;\n   do_class(java_util_Base64_Decoder, \"java/util/Base64$Decoder\")                                                        \\\n   do_intrinsic(_base64_decodeBlock, java_util_Base64_Decoder, decodeBlock_name, decodeBlock_signature, F_R)             \\\n    do_name(decodeBlock_name, \"decodeBlock\")                                                                             \\\n-   do_signature(decodeBlock_signature, \"([BII[BIZ)I\")                                                                   \\\n+   do_signature(decodeBlock_signature, \"([BII[BIZZ)I\")                                                                   \\\n                                                                                                                         \\\n   /* support for com.sun.crypto.provider.GHASH */                                                                       \\\n   do_class(com_sun_crypto_provider_ghash, \"com/sun/crypto/provider/GHASH\")                                              \\"
      },
      {
        "sha": "28158adbc5f42bd2efca3cb81fd3142fdf736791",
        "filename": "src/hotspot/share/code/codeCache.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 5,
        "changes": 29,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fcode%2FcodeCache.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fcode%2FcodeCache.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fcode%2FcodeCache.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -296,19 +296,20 @@ void CodeCache::initialize_heaps() {\n   const size_t alignment = MAX2(page_size(false, 8), (size_t) os::vm_allocation_granularity());\n   non_nmethod_size = align_up(non_nmethod_size, alignment);\n   profiled_size    = align_down(profiled_size, alignment);\n+  non_profiled_size = align_down(non_profiled_size, alignment);\n \n   // Reserve one continuous chunk of memory for CodeHeaps and split it into\n   // parts for the individual heaps. The memory layout looks like this:\n   // ---------- high -----------\n   //    Non-profiled nmethods\n-  //      Profiled nmethods\n   //         Non-nmethods\n+  //      Profiled nmethods\n   // ---------- low ------------\n   ReservedCodeSpace rs = reserve_heap_memory(cache_size);\n-  ReservedSpace non_method_space    = rs.first_part(non_nmethod_size);\n-  ReservedSpace rest                = rs.last_part(non_nmethod_size);\n-  ReservedSpace profiled_space      = rest.first_part(profiled_size);\n-  ReservedSpace non_profiled_space  = rest.last_part(profiled_size);\n+  ReservedSpace profiled_space      = rs.first_part(profiled_size);\n+  ReservedSpace rest                = rs.last_part(profiled_size);\n+  ReservedSpace non_method_space    = rest.first_part(non_nmethod_size);\n+  ReservedSpace non_profiled_space  = rest.last_part(non_nmethod_size);\n \n   // Non-nmethods (stubs, adapters, ...)\n   add_heap(non_method_space, \"CodeHeap 'non-nmethods'\", CodeBlobType::NonNMethod);\n@@ -898,6 +899,23 @@ size_t CodeCache::max_capacity() {\n   return max_cap;\n }\n \n+bool CodeCache::is_non_nmethod(address addr) {\n+  CodeHeap* blob = get_code_heap(CodeBlobType::NonNMethod);\n+  return blob->contains(addr);\n+}\n+\n+size_t CodeCache::max_distance_to_non_nmethod() {\n+  if (!SegmentedCodeCache) {\n+    return ReservedCodeCacheSize;\n+  } else {\n+    CodeHeap* blob = get_code_heap(CodeBlobType::NonNMethod);\n+    // the max distance is minimized by placing the NonNMethod segment\n+    // in between MethodProfiled and MethodNonProfiled segments\n+    size_t dist1 = (size_t)blob->high() - (size_t)_low_bound;\n+    size_t dist2 = (size_t)_high_bound - (size_t)blob->low();\n+    return dist1 > dist2 ? dist1 : dist2;\n+  }\n+}\n \n // Returns the reverse free ratio. E.g., if 25% (1/4) of the code cache\n // is free, reverse_free_ratio() returns 4.\n@@ -1295,6 +1313,7 @@ void CodeCache::report_codemem_full(int code_blob_type, bool print) {\n     event.set_adaptorCount(heap->adapter_count());\n     event.set_unallocatedCapacity(heap->unallocated_capacity());\n     event.set_fullCount(heap->full_count());\n+    event.set_codeCacheMaxCapacity(CodeCache::max_capacity());\n     event.commit();\n   }\n }"
      },
      {
        "sha": "ca3bae1df7e78d91e83cbb8719902d68d21ff715",
        "filename": "src/hotspot/share/code/codeCache.hpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fcode%2FcodeCache.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fcode%2FcodeCache.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fcode%2FcodeCache.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -213,6 +213,9 @@ class CodeCache : AllStatic {\n \n   static double reverse_free_ratio();\n \n+  static size_t max_distance_to_non_nmethod();\n+  static bool is_non_nmethod(address addr);\n+\n   static void clear_inline_caches();                  // clear all inline caches\n   static void cleanup_inline_caches();                // clean unloaded/zombie nmethods from inline caches\n "
      },
      {
        "sha": "51f2bfb5409fcf0bd286669bd71b23accb9b373d",
        "filename": "src/hotspot/share/gc/shared/barrierSet.hpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshared%2FbarrierSet.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshared%2FbarrierSet.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshared%2FbarrierSet.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -310,10 +310,6 @@ class BarrierSet: public CHeapObj<mtGC> {\n     static void clone_in_heap(oop src, oop dst, size_t size) {\n       Raw::clone(src, dst, size);\n     }\n-\n-    static oop resolve(oop obj) {\n-      return Raw::resolve(obj);\n-    }\n   };\n };\n "
      },
      {
        "sha": "e4d444b8c95fc38e43d8c217a2cb0d582dcbd922",
        "filename": "src/hotspot/share/gc/shared/collectedHeap.hpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshared%2FcollectedHeap.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshared%2FcollectedHeap.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshared%2FcollectedHeap.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2001, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -77,7 +77,7 @@ class ParallelObjectIterator : public CHeapObj<mtGC> {\n //   ShenandoahHeap\n //   ZCollectedHeap\n //\n-class CollectedHeap : public CHeapObj<mtInternal> {\n+class CollectedHeap : public CHeapObj<mtGC> {\n   friend class VMStructs;\n   friend class JVMCIVMStructs;\n   friend class IsGCActiveMark; // Block structured external access to _is_gc_active"
      },
      {
        "sha": "12da8cec12ba9678a3e556392b35fb05f85235e0",
        "filename": "src/hotspot/share/gc/shenandoah/c2/shenandoahBarrierSetC2.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fc2%2FshenandoahBarrierSetC2.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fc2%2FshenandoahBarrierSetC2.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fc2%2FshenandoahBarrierSetC2.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1080,7 +1080,8 @@ Node* ShenandoahBarrierSetC2::ideal_node(PhaseGVN* phase, Node* n, bool can_resh\n   } else if (can_reshape &&\n              n->Opcode() == Op_If &&\n              ShenandoahBarrierC2Support::is_heap_stable_test(n) &&\n-             n->in(0) != NULL) {\n+             n->in(0) != NULL &&\n+             n->outcnt() == 2) {\n     Node* dom = n->in(0);\n     Node* prev_dom = n;\n     int op = n->Opcode();"
      },
      {
        "sha": "0c42824616997c578d80662fe82067aca95aa1e7",
        "filename": "src/hotspot/share/gc/shenandoah/mode/shenandoahIUMode.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fmode%2FshenandoahIUMode.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fmode%2FshenandoahIUMode.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fmode%2FshenandoahIUMode.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -65,19 +65,18 @@ void ShenandoahIUMode::initialize_flags() const {\n }\n \n ShenandoahHeuristics* ShenandoahIUMode::initialize_heuristics() const {\n-  if (ShenandoahGCHeuristics != NULL) {\n-    if (strcmp(ShenandoahGCHeuristics, \"aggressive\") == 0) {\n-      return new ShenandoahAggressiveHeuristics();\n-    } else if (strcmp(ShenandoahGCHeuristics, \"static\") == 0) {\n-      return new ShenandoahStaticHeuristics();\n-    } else if (strcmp(ShenandoahGCHeuristics, \"adaptive\") == 0) {\n-      return new ShenandoahAdaptiveHeuristics();\n-    } else if (strcmp(ShenandoahGCHeuristics, \"compact\") == 0) {\n-      return new ShenandoahCompactHeuristics();\n-    } else {\n-      vm_exit_during_initialization(\"Unknown -XX:ShenandoahGCHeuristics option\");\n-    }\n+  if (ShenandoahGCHeuristics == NULL) {\n+    vm_exit_during_initialization(\"Unknown -XX:ShenandoahGCHeuristics option (null)\");\n   }\n-  ShouldNotReachHere();\n+  if (strcmp(ShenandoahGCHeuristics, \"aggressive\") == 0) {\n+    return new ShenandoahAggressiveHeuristics();\n+  } else if (strcmp(ShenandoahGCHeuristics, \"static\") == 0) {\n+    return new ShenandoahStaticHeuristics();\n+  } else if (strcmp(ShenandoahGCHeuristics, \"adaptive\") == 0) {\n+    return new ShenandoahAdaptiveHeuristics();\n+  } else if (strcmp(ShenandoahGCHeuristics, \"compact\") == 0) {\n+    return new ShenandoahCompactHeuristics();\n+  }\n+  vm_exit_during_initialization(\"Unknown -XX:ShenandoahGCHeuristics option\");\n   return NULL;\n }"
      },
      {
        "sha": "caa22bbe068f54a000b725a7960dc607fc4df9d5",
        "filename": "src/hotspot/share/gc/shenandoah/mode/shenandoahPassiveMode.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fmode%2FshenandoahPassiveMode.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fmode%2FshenandoahPassiveMode.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fmode%2FshenandoahPassiveMode.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -28,6 +28,7 @@\n #include \"logging/log.hpp\"\n #include \"logging/logTag.hpp\"\n #include \"runtime/globals_extension.hpp\"\n+#include \"runtime/java.hpp\"\n \n void ShenandoahPassiveMode::initialize_flags() const {\n   // Do not allow concurrent cycles.\n@@ -55,9 +56,8 @@ void ShenandoahPassiveMode::initialize_flags() const {\n   // No barriers are required to run.\n }\n ShenandoahHeuristics* ShenandoahPassiveMode::initialize_heuristics() const {\n-  if (ShenandoahGCHeuristics != NULL) {\n-    return new ShenandoahPassiveHeuristics();\n+  if (ShenandoahGCHeuristics == NULL) {\n+    vm_exit_during_initialization(\"Unknown -XX:ShenandoahGCHeuristics option (null)\");\n   }\n-  ShouldNotReachHere();\n-  return NULL;\n+  return new ShenandoahPassiveHeuristics();\n }"
      },
      {
        "sha": "06ed25e59c62b0ee7d9cc218d04252de5a7dc825",
        "filename": "src/hotspot/share/gc/shenandoah/mode/shenandoahSATBMode.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fmode%2FshenandoahSATBMode.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fmode%2FshenandoahSATBMode.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2Fmode%2FshenandoahSATBMode.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -53,19 +53,18 @@ void ShenandoahSATBMode::initialize_flags() const {\n }\n \n ShenandoahHeuristics* ShenandoahSATBMode::initialize_heuristics() const {\n-  if (ShenandoahGCHeuristics != NULL) {\n-    if (strcmp(ShenandoahGCHeuristics, \"aggressive\") == 0) {\n-      return new ShenandoahAggressiveHeuristics();\n-    } else if (strcmp(ShenandoahGCHeuristics, \"static\") == 0) {\n-      return new ShenandoahStaticHeuristics();\n-    } else if (strcmp(ShenandoahGCHeuristics, \"adaptive\") == 0) {\n-      return new ShenandoahAdaptiveHeuristics();\n-    } else if (strcmp(ShenandoahGCHeuristics, \"compact\") == 0) {\n-      return new ShenandoahCompactHeuristics();\n-    } else {\n-      vm_exit_during_initialization(\"Unknown -XX:ShenandoahGCHeuristics option\");\n-    }\n+  if (ShenandoahGCHeuristics == NULL) {\n+    vm_exit_during_initialization(\"Unknown -XX:ShenandoahGCHeuristics option (null)\");\n   }\n-  ShouldNotReachHere();\n+  if (strcmp(ShenandoahGCHeuristics, \"aggressive\") == 0) {\n+    return new ShenandoahAggressiveHeuristics();\n+  } else if (strcmp(ShenandoahGCHeuristics, \"static\") == 0) {\n+    return new ShenandoahStaticHeuristics();\n+  } else if (strcmp(ShenandoahGCHeuristics, \"adaptive\") == 0) {\n+    return new ShenandoahAdaptiveHeuristics();\n+  } else if (strcmp(ShenandoahGCHeuristics, \"compact\") == 0) {\n+    return new ShenandoahCompactHeuristics();\n+  }\n+  vm_exit_during_initialization(\"Unknown -XX:ShenandoahGCHeuristics option\");\n   return NULL;\n }"
      },
      {
        "sha": "3cb596a887d9a9d380570a3735cba97743d362b2",
        "filename": "src/hotspot/share/gc/shenandoah/shenandoahBarrierSet.inline.hpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahBarrierSet.inline.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahBarrierSet.inline.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahBarrierSet.inline.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2015, 2021, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2015, 2022, Red Hat, Inc. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -84,13 +84,8 @@ inline oop ShenandoahBarrierSet::load_reference_barrier(oop obj) {\n       _heap->in_collection_set(obj)) { // Subsumes NULL-check\n     assert(obj != NULL, \"cset check must have subsumed NULL-check\");\n     oop fwd = resolve_forwarded_not_null(obj);\n-    // TODO: It should not be necessary to check evac-in-progress here.\n-    // We do it for mark-compact, which may have forwarded objects,\n-    // and objects in cset and gets here via runtime barriers.\n-    // We can probably fix this as soon as mark-compact has its own\n-    // marking phase.\n     if (obj == fwd && _heap->is_evacuation_in_progress()) {\n-       Thread* t = Thread::current();\n+      Thread* t = Thread::current();\n       ShenandoahEvacOOMScope oom_evac_scope(t);\n       return _heap->evacuate_object(obj, t);\n     }"
      },
      {
        "sha": "26c31356f44330b1bae1fd2d602d2199f67553df",
        "filename": "src/hotspot/share/gc/shenandoah/shenandoahFullGC.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahFullGC.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahFullGC.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahFullGC.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -66,6 +66,10 @@ ShenandoahFullGC::ShenandoahFullGC() :\n   _gc_timer(ShenandoahHeap::heap()->gc_timer()),\n   _preserved_marks(new PreservedMarksSet(true)) {}\n \n+ShenandoahFullGC::~ShenandoahFullGC() {\n+  delete _preserved_marks;\n+}\n+\n bool ShenandoahFullGC::collect(GCCause::Cause cause) {\n   vmop_entry_full(cause);\n   // Always success"
      },
      {
        "sha": "1c1653e59ec563677f63a2d4822817bad56c0dc6",
        "filename": "src/hotspot/share/gc/shenandoah/shenandoahFullGC.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahFullGC.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahFullGC.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahFullGC.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -66,6 +66,7 @@ class ShenandoahFullGC : public ShenandoahGC {\n \n public:\n   ShenandoahFullGC();\n+  ~ShenandoahFullGC();\n   bool collect(GCCause::Cause cause);\n \n private:"
      },
      {
        "sha": "0b3128580595d587c3aecb683a0a48c4c4073b53",
        "filename": "src/hotspot/share/gc/shenandoah/shenandoahHeap.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahHeap.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahHeap.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fshenandoah%2FshenandoahHeap.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -416,7 +416,7 @@ void ShenandoahHeap::initialize_mode() {\n       vm_exit_during_initialization(\"Unknown -XX:ShenandoahGCMode option\");\n     }\n   } else {\n-    ShouldNotReachHere();\n+    vm_exit_during_initialization(\"Unknown -XX:ShenandoahGCMode option (null)\");\n   }\n   _gc_mode->initialize_flags();\n   if (_gc_mode->is_diagnostic() && !UnlockDiagnosticVMOptions) {"
      },
      {
        "sha": "30fdeb6804feb2a112c8682a60b936bddf351a85",
        "filename": "src/hotspot/share/gc/z/zDriver.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fz%2FzDriver.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fgc%2Fz%2FzDriver.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fgc%2Fz%2FzDriver.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -493,6 +493,11 @@ void ZDriver::run_service() {\n     // Run GC\n     gc(request);\n \n+    if (should_terminate()) {\n+      // Abort\n+      break;\n+    }\n+\n     // Notify GC completed\n     _gc_cycle_port.ack();\n "
      },
      {
        "sha": "012b2e0bea94f74c93de7eb4fc61c46cdd702f97",
        "filename": "src/hotspot/share/interpreter/bytecode.hpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Finterpreter%2Fbytecode.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Finterpreter%2Fbytecode.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Finterpreter%2Fbytecode.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -77,9 +77,11 @@ class Bytecode: public StackObj {\n   int get_index_u2(Bytecodes::Code bc, bool is_wide = false) const {\n     assert_same_format_as(bc, is_wide); assert_index_size(2, bc, is_wide);\n     address p = addr_at(is_wide ? 2 : 1);\n-    if (can_use_native_byte_order(bc, is_wide))\n+    if (can_use_native_byte_order(bc, is_wide)) {\n       return Bytes::get_native_u2(p);\n-    else  return Bytes::get_Java_u2(p);\n+    } else {\n+      return Bytes::get_Java_u2(p);\n+    }\n   }\n   int get_index_u1_cpcache(Bytecodes::Code bc) const {\n     assert_same_format_as(bc); assert_index_size(1, bc);"
      },
      {
        "sha": "2e1333b08b57083a7cb395050c7f44211eaaf95d",
        "filename": "src/hotspot/share/interpreter/interpreter.hpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Finterpreter%2Finterpreter.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Finterpreter%2Finterpreter.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Finterpreter%2Finterpreter.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -46,10 +46,10 @@ class InterpreterCodelet: public Stub {\n   friend class VMStructs;\n   friend class CodeCacheDumper; // possible extension [do not remove]\n  private:\n-  int         _size;                             // the size in bytes\n-  const char* _description;                      // a description of the codelet, for debugging & printing\n-  Bytecodes::Code _bytecode;                     // associated bytecode if any\n   NOT_PRODUCT(CodeStrings _strings;)              // Comments for annotating assembler output.\n+  const char*     _description;           // A description of the codelet, for debugging & printing\n+  int             _size;                  // The codelet size in bytes\n+  Bytecodes::Code _bytecode;              // Associated bytecode, if any\n \n  public:\n   // Initialization/finalization"
      },
      {
        "sha": "322a21b6aa7832e27c0ea2f78704b96a89ede8f3",
        "filename": "src/hotspot/share/interpreter/templateInterpreter.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Finterpreter%2FtemplateInterpreter.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Finterpreter%2FtemplateInterpreter.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Finterpreter%2FtemplateInterpreter.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -47,7 +47,11 @@ void TemplateInterpreter::initialize_stub() {\n   // allocate interpreter\n   int code_size = InterpreterCodeSize;\n   NOT_PRODUCT(code_size *= 4;)  // debug uses extra interpreter code space\n-  _code = new StubQueue(new InterpreterCodeletInterface, code_size, NULL,\n+  // 270+ interpreter codelets are generated and each of them is required to be aligned to\n+  // CodeEntryAlignment twice. So we need additional size due to alignment.\n+  int max_aligned_codelets = 280;\n+  int max_aligned_bytes = max_aligned_codelets * CodeEntryAlignment * 2;\n+  _code = new StubQueue(new InterpreterCodeletInterface, code_size + max_aligned_bytes, NULL,\n                         \"Interpreter\");\n }\n "
      },
      {
        "sha": "84ed369c983b01faf8f12226dd1d9454ce7d2979",
        "filename": "src/hotspot/share/jfr/metadata/metadata.xml",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fjfr%2Fmetadata%2Fmetadata.xml",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fjfr%2Fmetadata%2Fmetadata.xml",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fjfr%2Fmetadata%2Fmetadata.xml?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -494,6 +494,11 @@\n     <Field type=\"ulong\" contentType=\"bytes\" name=\"used\" label=\"Used\" />\n   </Event>\n \n+  <Event name=\"JITRestart\" category=\"Java Virtual Machine, Compiler\" label=\"JIT Restart\" stackTrace=\"false\" startTime=\"false\" thread=\"true\">\n+    <Field type=\"int\" contentType=\"bytes\" name=\"freedMemory\" label=\"Freed Memory\" />\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"codeCacheMaxCapacity\" label=\"Code Cache Maximum Capacity\" />\n+  </Event>\n+\n   <Event name=\"Compilation\" category=\"Java Virtual Machine, Compiler\" label=\"Compilation\" thread=\"true\" commitState=\"_thread_in_native\">\n     <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" />\n     <Field type=\"CompilerType\" name=\"compiler\" label=\"Compiler\" />\n@@ -548,6 +553,7 @@\n     <Field type=\"int\" name=\"adaptorCount\" label=\"Adaptors\" />\n     <Field type=\"ulong\" contentType=\"bytes\" name=\"unallocatedCapacity\" label=\"Unallocated\" />\n     <Field type=\"int\" name=\"fullCount\" label=\"Full Count\" />\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"codeCacheMaxCapacity\" label=\"Code Cache Maximum Capacity\" />\n   </Event>\n \n   <Event name=\"Deoptimization\" category=\"Java Virtual Machine, Compiler\" label=\"Deoptimization\" thread=\"true\" stackTrace=\"true\" startTime=\"false\">"
      },
      {
        "sha": "5703830c0afd8688abd035fcdc3fbce9abe17c01",
        "filename": "src/hotspot/share/jfr/recorder/repository/jfrChunk.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fjfr%2Frecorder%2Frepository%2FjfrChunk.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fjfr%2Frecorder%2Frepository%2FjfrChunk.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fjfr%2Frecorder%2Frepository%2FjfrChunk.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -47,6 +47,8 @@ static jlong nanos_now() {\n   const jlong now = seconds * 1000000000 + nanos;\n   if (now > last) {\n     last = now;\n+  } else {\n+    ++last;\n   }\n   return last;\n }"
      },
      {
        "sha": "decedf67b5aa6f3f98bf80213225f506df1e8318",
        "filename": "src/hotspot/share/jvmci/jvmciCompilerToVM.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fjvmci%2FjvmciCompilerToVM.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fjvmci%2FjvmciCompilerToVM.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fjvmci%2FjvmciCompilerToVM.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -647,6 +647,16 @@ C2V_VMENTRY_NULL(jobject, resolvePossiblyCachedConstantInPool, (JNIEnv* env, job\n   return JVMCIENV->get_jobject(JVMCIENV->get_object_constant(obj));\n C2V_END\n \n+C2V_VMENTRY_NULL(jobject, getUncachedStringInPool, (JNIEnv* env, jobject, jobject jvmci_constant_pool, jint index))\n+  constantPoolHandle cp(THREAD, JVMCIENV->asConstantPool(jvmci_constant_pool));\n+  constantTag tag = cp->tag_at(index);\n+  if (!tag.is_string()) {\n+    JVMCI_THROW_MSG_NULL(IllegalArgumentException, err_msg(\"Unexpected constant pool tag at index %d: %d\", index, tag.value()));\n+  }\n+  oop obj = cp->uncached_string_at(index, CHECK_NULL);\n+  return JVMCIENV->get_jobject(JVMCIENV->get_object_constant(obj));\n+C2V_END\n+\n C2V_VMENTRY_0(jint, lookupNameAndTypeRefIndexInPool, (JNIEnv* env, jobject, jobject jvmci_constant_pool, jint index))\n   constantPoolHandle cp(THREAD, JVMCIENV->asConstantPool(jvmci_constant_pool));\n   return cp->name_and_type_ref_index_at(index);\n@@ -1783,9 +1793,6 @@ C2V_VMENTRY_NULL(jobjectArray, getDeclaredConstructors, (JNIEnv* env, jobject, j\n   }\n \n   InstanceKlass* iklass = InstanceKlass::cast(klass);\n-  // Ensure class is linked\n-  iklass->link_class(CHECK_NULL);\n-\n   GrowableArray<Method*> constructors_array;\n   for (int i = 0; i < iklass->methods()->length(); i++) {\n     Method* m = iklass->methods()->at(i);\n@@ -1813,9 +1820,6 @@ C2V_VMENTRY_NULL(jobjectArray, getDeclaredMethods, (JNIEnv* env, jobject, jobjec\n   }\n \n   InstanceKlass* iklass = InstanceKlass::cast(klass);\n-  // Ensure class is linked\n-  iklass->link_class(CHECK_NULL);\n-\n   GrowableArray<Method*> methods_array;\n   for (int i = 0; i < iklass->methods()->length(); i++) {\n     Method* m = iklass->methods()->at(i);\n@@ -2690,6 +2694,7 @@ JNINativeMethod CompilerToVM::methods[] = {\n   {CC \"lookupMethodInPool\",                           CC \"(\" HS_CONSTANT_POOL \"IB)\" HS_RESOLVED_METHOD,                                     FN_PTR(lookupMethodInPool)},\n   {CC \"constantPoolRemapInstructionOperandFromCache\", CC \"(\" HS_CONSTANT_POOL \"I)I\",                                                        FN_PTR(constantPoolRemapInstructionOperandFromCache)},\n   {CC \"resolvePossiblyCachedConstantInPool\",          CC \"(\" HS_CONSTANT_POOL \"I)\" JAVACONSTANT,                                            FN_PTR(resolvePossiblyCachedConstantInPool)},\n+  {CC \"getUncachedStringInPool\",                      CC \"(\" HS_CONSTANT_POOL \"I)\" JAVACONSTANT,                                            FN_PTR(getUncachedStringInPool)},\n   {CC \"resolveTypeInPool\",                            CC \"(\" HS_CONSTANT_POOL \"I)\" HS_RESOLVED_KLASS,                                       FN_PTR(resolveTypeInPool)},\n   {CC \"resolveFieldInPool\",                           CC \"(\" HS_CONSTANT_POOL \"I\" HS_RESOLVED_METHOD \"B[I)\" HS_RESOLVED_KLASS,              FN_PTR(resolveFieldInPool)},\n   {CC \"resolveInvokeDynamicInPool\",                   CC \"(\" HS_CONSTANT_POOL \"I)V\",                                                        FN_PTR(resolveInvokeDynamicInPool)},"
      },
      {
        "sha": "a1270e09ce2e0264bff643ccabb637f898ea1549",
        "filename": "src/hotspot/share/oops/access.hpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Foops%2Faccess.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Foops%2Faccess.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Foops%2Faccess.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -57,7 +57,6 @@\n // * atomic_xchg_at: Atomically swap a new value at an internal pointer address if previous value matched the compared value.\n // * arraycopy: Copy data from one heap array to another heap array. The ArrayAccess class has convenience functions for this.\n // * clone: Clone the contents of an object to a newly allocated object.\n-// * resolve: Resolve a stable to-space invariant oop that is guaranteed not to relocate its payload until a subsequent thread transition.\n //\n // == IMPLEMENTATION ==\n // Each access goes through the following steps in a template pipeline."
      },
      {
        "sha": "7b14503da67f92469f9a4c78f62c3c1c4e2d0311",
        "filename": "src/hotspot/share/oops/access.inline.hpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Foops%2Faccess.inline.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Foops%2Faccess.inline.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Foops%2Faccess.inline.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -200,13 +200,6 @@ namespace AccessInternal {\n     }\n   };\n \n-  template <class GCBarrierType, DecoratorSet decorators>\n-  struct PostRuntimeDispatch<GCBarrierType, BARRIER_RESOLVE, decorators>: public AllStatic {\n-    static oop access_barrier(oop obj) {\n-      return GCBarrierType::resolve(obj);\n-    }\n-  };\n-\n   // Resolving accessors with barriers from the barrier set happens in two steps.\n   // 1. Expand paths with runtime-decorators, e.g. is UseCompressedOops on or off.\n   // 2. Expand paths for each BarrierSet available in the system.\n@@ -354,13 +347,6 @@ namespace AccessInternal {\n     _clone_func = function;\n     function(src, dst, size);\n   }\n-\n-  template <DecoratorSet decorators, typename T>\n-  oop RuntimeDispatch<decorators, T, BARRIER_RESOLVE>::resolve_init(oop obj) {\n-    func_t function = BarrierResolver<decorators, func_t, BARRIER_RESOLVE>::resolve_barrier();\n-    _resolve_func = function;\n-    return function(obj);\n-  }\n }\n \n #endif // SHARE_OOPS_ACCESS_INLINE_HPP"
      },
      {
        "sha": "4fa92c53c162b6ce65a548a163351e9dd8d33905",
        "filename": "src/hotspot/share/oops/accessBackend.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 22,
        "changes": 23,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Foops%2FaccessBackend.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Foops%2FaccessBackend.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Foops%2FaccessBackend.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -63,8 +63,7 @@ namespace AccessInternal {\n     BARRIER_ATOMIC_XCHG,\n     BARRIER_ATOMIC_XCHG_AT,\n     BARRIER_ARRAYCOPY,\n-    BARRIER_CLONE,\n-    BARRIER_RESOLVE\n+    BARRIER_CLONE\n   };\n \n   template <DecoratorSet decorators, typename T>\n@@ -114,7 +113,6 @@ namespace AccessInternal {\n                                      arrayOop dst_obj, size_t dst_offset_in_bytes, T* dst_raw,\n                                      size_t length);\n     typedef void (*clone_func_t)(oop src, oop dst, size_t size);\n-    typedef oop (*resolve_func_t)(oop obj);\n   };\n \n   template <DecoratorSet decorators>\n@@ -141,7 +139,6 @@ namespace AccessInternal {\n   ACCESS_GENERATE_ACCESS_FUNCTION(BARRIER_ATOMIC_XCHG_AT, atomic_xchg_at_func_t);\n   ACCESS_GENERATE_ACCESS_FUNCTION(BARRIER_ARRAYCOPY, arraycopy_func_t);\n   ACCESS_GENERATE_ACCESS_FUNCTION(BARRIER_CLONE, clone_func_t);\n-  ACCESS_GENERATE_ACCESS_FUNCTION(BARRIER_RESOLVE, resolve_func_t);\n #undef ACCESS_GENERATE_ACCESS_FUNCTION\n \n   template <DecoratorSet decorators, typename T, BarrierType barrier_type>\n@@ -391,8 +388,6 @@ class RawAccessBarrier: public AllStatic {\n                             size_t length);\n \n   static void clone(oop src, oop dst, size_t size);\n-\n-  static oop resolve(oop obj) { return obj; }\n };\n \n // Below is the implementation of the first 4 steps of the template pipeline:\n@@ -574,18 +569,6 @@ namespace AccessInternal {\n     }\n   };\n \n-  template <DecoratorSet decorators, typename T>\n-  struct RuntimeDispatch<decorators, T, BARRIER_RESOLVE>: AllStatic {\n-    typedef typename AccessFunction<decorators, T, BARRIER_RESOLVE>::type func_t;\n-    static func_t _resolve_func;\n-\n-    static oop resolve_init(oop obj);\n-\n-    static inline oop resolve(oop obj) {\n-      return _resolve_func(obj);\n-    }\n-  };\n-\n   // Initialize the function pointers to point to the resolving function.\n   template <DecoratorSet decorators, typename T>\n   typename AccessFunction<decorators, T, BARRIER_STORE>::type\n@@ -627,10 +610,6 @@ namespace AccessInternal {\n   typename AccessFunction<decorators, T, BARRIER_CLONE>::type\n   RuntimeDispatch<decorators, T, BARRIER_CLONE>::_clone_func = &clone_init;\n \n-  template <DecoratorSet decorators, typename T>\n-  typename AccessFunction<decorators, T, BARRIER_RESOLVE>::type\n-  RuntimeDispatch<decorators, T, BARRIER_RESOLVE>::_resolve_func = &resolve_init;\n-\n   // Step 3: Pre-runtime dispatching.\n   // The PreRuntimeDispatch class is responsible for filtering the barrier strength\n   // decorators. That is, for AS_RAW, it hardwires the accesses without a runtime"
      },
      {
        "sha": "631afa0d32155b23b7cb6ac230b30f75986c89d6",
        "filename": "src/hotspot/share/oops/generateOopMap.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Foops%2FgenerateOopMap.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Foops%2FgenerateOopMap.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Foops%2FgenerateOopMap.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -547,7 +547,13 @@ bool GenerateOopMap::jump_targets_do(BytecodeStream *bcs, jmpFct_t jmpFct, int *\n     case Bytecodes::_ifnull:\n     case Bytecodes::_ifnonnull:\n       (*jmpFct)(this, bcs->dest(), data);\n-      (*jmpFct)(this, bci + 3, data);\n+      // Class files verified by the old verifier can have a conditional branch\n+      // as their last bytecode, provided the conditional branch is unreachable\n+      // during execution.  Check if this instruction is the method's last bytecode\n+      // and, if so, don't call the jmpFct.\n+      if (bci + 3 < method()->code_size()) {\n+        (*jmpFct)(this, bci + 3, data);\n+      }\n       break;\n \n     case Bytecodes::_goto:"
      },
      {
        "sha": "b5970545c4eda9d373b9aa7bd0ce152d49906825",
        "filename": "src/hotspot/share/opto/library_call.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Flibrary_call.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Flibrary_call.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2Flibrary_call.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1551,12 +1551,19 @@ bool LibraryCallKit::inline_string_char_access(bool is_store) {\n     return false;\n   }\n \n+  // Save state and restore on bailout\n+  uint old_sp = sp();\n+  SafePointNode* old_map = clone_map();\n+\n   value = must_be_not_null(value, true);\n \n   Node* adr = array_element_address(value, index, T_CHAR);\n   if (adr->is_top()) {\n+    set_map(old_map);\n+    set_sp(old_sp);\n     return false;\n   }\n+  old_map->destruct(&_gvn);\n   if (is_store) {\n     access_store_at(value, adr, TypeAryPtr::BYTES, ch, TypeInt::CHAR, T_CHAR, IN_HEAP | MO_UNORDERED | C2_MISMATCHED);\n   } else {\n@@ -6416,7 +6423,7 @@ bool LibraryCallKit::inline_base64_decodeBlock() {\n   address stubAddr;\n   const char *stubName;\n   assert(UseBASE64Intrinsics, \"need Base64 intrinsics support\");\n-  assert(callee()->signature()->size() == 6, \"base64_decodeBlock has 6 parameters\");\n+  assert(callee()->signature()->size() == 7, \"base64_decodeBlock has 7 parameters\");\n   stubAddr = StubRoutines::base64_decodeBlock();\n   stubName = \"decodeBlock\";\n \n@@ -6428,6 +6435,7 @@ bool LibraryCallKit::inline_base64_decodeBlock() {\n   Node* dest = argument(4);\n   Node* dest_offset = argument(5);\n   Node* isURL = argument(6);\n+  Node* isMIME = argument(7);\n \n   src = must_be_not_null(src, true);\n   dest = must_be_not_null(dest, true);\n@@ -6440,7 +6448,7 @@ bool LibraryCallKit::inline_base64_decodeBlock() {\n   Node* call = make_runtime_call(RC_LEAF,\n                                  OptoRuntime::base64_decodeBlock_Type(),\n                                  stubAddr, stubName, TypePtr::BOTTOM,\n-                                 src_start, src_offset, len, dest_start, dest_offset, isURL);\n+                                 src_start, src_offset, len, dest_start, dest_offset, isURL, isMIME);\n   Node* result = _gvn.transform(new ProjNode(call, TypeFunc::Parms));\n   set_result(result);\n   return true;"
      },
      {
        "sha": "12da51dd75d93f722972c084e5f64e1e87b0da7e",
        "filename": "src/hotspot/share/opto/loopTransform.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 25,
        "changes": 72,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2FloopTransform.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2FloopTransform.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2FloopTransform.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1304,7 +1304,8 @@ void PhaseIdealLoop::copy_skeleton_predicates_to_main_loop_helper(Node* predicat\n   }\n }\n \n-static bool skeleton_follow_inputs(Node* n, int op) {\n+static bool skeleton_follow_inputs(Node* n) {\n+  int op = n->Opcode();\n   return (n->is_Bool() ||\n           n->is_Cmp() ||\n           op == Op_AndL ||\n@@ -1322,31 +1323,27 @@ static bool skeleton_follow_inputs(Node* n, int op) {\n           op == Op_CastII);\n }\n \n+bool PhaseIdealLoop::subgraph_has_opaque(Node* n) {\n+  if (n->Opcode() == Op_OpaqueLoopInit || n->Opcode() == Op_OpaqueLoopStride) {\n+    return true;\n+  }\n+  if (!skeleton_follow_inputs(n)) {\n+    return false;\n+  }\n+  uint init;\n+  uint stride;\n+  count_opaque_loop_nodes(n, init, stride);\n+  return init != 0 || stride != 0;\n+}\n+\n+\n bool PhaseIdealLoop::skeleton_predicate_has_opaque(IfNode* iff) {\n+  uint init;\n+  uint stride;\n+  count_opaque_loop_nodes(iff->in(1)->in(1), init, stride);\n+#ifdef ASSERT\n   ResourceMark rm;\n   Unique_Node_List wq;\n-  wq.push(iff->in(1)->in(1));\n-  uint init = 0;\n-  uint stride = 0;\n-  for (uint i = 0; i < wq.size(); i++) {\n-    Node* n = wq.at(i);\n-    int op = n->Opcode();\n-    if (skeleton_follow_inputs(n, op)) {\n-      for (uint j = 1; j < n->req(); j++) {\n-        Node* m = n->in(j);\n-        if (m != NULL) {\n-          wq.push(m);\n-        }\n-      }\n-      continue;\n-    }\n-    if (n->Opcode() == Op_OpaqueLoopInit) {\n-      init++;\n-    } else if (n->Opcode() == Op_OpaqueLoopStride) {\n-      stride++;\n-    }\n-  }\n-#ifdef ASSERT\n   wq.clear();\n   wq.push(iff->in(1)->in(1));\n   uint verif_init = 0;\n@@ -1375,6 +1372,31 @@ bool PhaseIdealLoop::skeleton_predicate_has_opaque(IfNode* iff) {\n   return init != 0;\n }\n \n+void PhaseIdealLoop::count_opaque_loop_nodes(Node* n, uint& init, uint& stride) {\n+  init = 0;\n+  stride = 0;\n+  ResourceMark rm;\n+  Unique_Node_List wq;\n+  wq.push(n);\n+  for (uint i = 0; i < wq.size(); i++) {\n+    Node* n = wq.at(i);\n+    if (skeleton_follow_inputs(n)) {\n+      for (uint j = 1; j < n->req(); j++) {\n+        Node* m = n->in(j);\n+        if (m != NULL) {\n+          wq.push(m);\n+        }\n+      }\n+      continue;\n+    }\n+    if (n->Opcode() == Op_OpaqueLoopInit) {\n+      init++;\n+    } else if (n->Opcode() == Op_OpaqueLoopStride) {\n+      stride++;\n+    }\n+  }\n+}\n+\n // Clone the skeleton predicate bool for a main or unswitched loop:\n // Main loop: Set new_init and new_stride nodes as new inputs.\n // Unswitched loop: new_init and new_stride are both NULL. Clone OpaqueLoopInit and OpaqueLoopStride instead.\n@@ -1394,8 +1416,7 @@ Node* PhaseIdealLoop::clone_skeleton_predicate_bool(Node* iff, Node* new_init, N\n     Node* n = to_clone.node();\n     uint i = to_clone.index();\n     Node* m = n->in(i);\n-    int op = m->Opcode();\n-    if (skeleton_follow_inputs(m, op)) {\n+    if (skeleton_follow_inputs(m)) {\n       to_clone.push(m, 1);\n       continue;\n     }\n@@ -1404,6 +1425,7 @@ Node* PhaseIdealLoop::clone_skeleton_predicate_bool(Node* iff, Node* new_init, N\n         n = n->clone();\n         register_new_node(n, control);\n       }\n+      int op = m->Opcode();\n       if (op == Op_OpaqueLoopInit) {\n         if (is_unswitched_loop && m->_idx < current && new_init == NULL) {\n           new_init = m->clone();"
      },
      {
        "sha": "8119e9d765d6901f4fc6d3a5f9425d5974861bbd",
        "filename": "src/hotspot/share/opto/loopnode.hpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Floopnode.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Floopnode.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2Floopnode.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -924,6 +924,8 @@ class PhaseIdealLoop : public PhaseTransform {\n                                                        IdealLoopTree* outer_loop, Node* input_proj);\n   Node* clone_skeleton_predicate_bool(Node* iff, Node* new_init, Node* new_stride, Node* control);\n   static bool skeleton_predicate_has_opaque(IfNode* iff);\n+  static void count_opaque_loop_nodes(Node* n, uint& init, uint& stride);\n+  static bool subgraph_has_opaque(Node* n);\n   static void get_skeleton_predicates(Node* predicate, Unique_Node_List& list, bool get_opaque = false);\n   void update_main_loop_skeleton_predicates(Node* ctrl, CountedLoopNode* loop_head, Node* init, int stride_con);\n   void copy_skeleton_predicates_to_post_loop(LoopNode* main_loop_head, CountedLoopNode* post_loop_head, Node* init, Node* stride);"
      },
      {
        "sha": "d5354347e0d62002e56b30dd7bfec7781aa7b4cd",
        "filename": "src/hotspot/share/opto/loopopts.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Floopopts.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Floopopts.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2Floopopts.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -2055,11 +2055,18 @@ static void clone_outer_loop_helper(Node* n, const IdealLoopTree *loop, const Id\n       Node* c = phase->get_ctrl(u);\n       IdealLoopTree* u_loop = phase->get_loop(c);\n       assert(!loop->is_member(u_loop), \"can be in outer loop or out of both loops only\");\n-      if (outer_loop->is_member(u_loop) ||\n-          // nodes pinned with control in the outer loop but not referenced from the safepoint must be moved out of\n-          // the outer loop too\n-          (u->in(0) != NULL && outer_loop->is_member(phase->get_loop(u->in(0))))) {\n+      if (outer_loop->is_member(u_loop)) {\n         wq.push(u);\n+      } else {\n+        // nodes pinned with control in the outer loop but not referenced from the safepoint must be moved out of\n+        // the outer loop too\n+        Node* u_c = u->in(0);\n+        if (u_c != NULL) {\n+          IdealLoopTree* u_c_loop = phase->get_loop(u_c);\n+          if (outer_loop->is_member(u_c_loop) && !loop->is_member(u_c_loop)) {\n+            wq.push(u);\n+          }\n+        }\n       }\n     }\n   }"
      },
      {
        "sha": "580de650928431d209be3f43f9294dabb7719bcf",
        "filename": "src/hotspot/share/opto/parse.hpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fparse.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fparse.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2Fparse.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -535,8 +535,7 @@ class Parse : public GraphKit {\n   void    do_ifnull(BoolTest::mask btest, Node* c);\n   void    do_if(BoolTest::mask btest, Node* c);\n   int     repush_if_args();\n-  void    adjust_map_after_if(BoolTest::mask btest, Node* c, float prob,\n-                              Block* path, Block* other_path);\n+  void    adjust_map_after_if(BoolTest::mask btest, Node* c, float prob, Block* path);\n   void    sharpen_type_after_if(BoolTest::mask btest,\n                                 Node* con, const Type* tcon,\n                                 Node* val, const Type* tval);"
      },
      {
        "sha": "783f2a1c24301b3009d26f6214479a959f62d689",
        "filename": "src/hotspot/share/opto/parse2.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fparse2.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fparse2.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2Fparse2.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1420,7 +1420,7 @@ void Parse::do_ifnull(BoolTest::mask btest, Node *c) {\n         branch_block->next_path_num();\n       }\n     } else {                    // Path is live.\n-      adjust_map_after_if(btest, c, prob, branch_block, next_block);\n+      adjust_map_after_if(btest, c, prob, branch_block);\n       if (!stopped()) {\n         merge(target_bci);\n       }\n@@ -1438,8 +1438,7 @@ void Parse::do_ifnull(BoolTest::mask btest, Node *c) {\n       next_block->next_path_num();\n     }\n   } else  {                     // Path is live.\n-    adjust_map_after_if(BoolTest(btest).negate(), c, 1.0-prob,\n-                        next_block, branch_block);\n+    adjust_map_after_if(BoolTest(btest).negate(), c, 1.0-prob, next_block);\n   }\n }\n \n@@ -1533,7 +1532,7 @@ void Parse::do_if(BoolTest::mask btest, Node* c) {\n         branch_block->next_path_num();\n       }\n     } else {\n-      adjust_map_after_if(taken_btest, c, prob, branch_block, next_block);\n+      adjust_map_after_if(taken_btest, c, prob, branch_block);\n       if (!stopped()) {\n         merge(target_bci);\n       }\n@@ -1550,8 +1549,7 @@ void Parse::do_if(BoolTest::mask btest, Node* c) {\n       next_block->next_path_num();\n     }\n   } else {\n-    adjust_map_after_if(untaken_btest, c, untaken_prob,\n-                        next_block, branch_block);\n+    adjust_map_after_if(untaken_btest, c, untaken_prob, next_block);\n   }\n }\n \n@@ -1581,8 +1579,7 @@ void Parse::maybe_add_predicate_after_if(Block* path) {\n // branch, seeing how it constrains a tested value, and then\n // deciding if it's worth our while to encode this constraint\n // as graph nodes in the current abstract interpretation map.\n-void Parse::adjust_map_after_if(BoolTest::mask btest, Node* c, float prob,\n-                                Block* path, Block* other_path) {\n+void Parse::adjust_map_after_if(BoolTest::mask btest, Node* c, float prob, Block* path) {\n   if (!c->is_Cmp()) {\n     maybe_add_predicate_after_if(path);\n     return;"
      },
      {
        "sha": "17e8e6276f6e54ea4a24f698895e6f3d23b74bde",
        "filename": "src/hotspot/share/opto/phaseX.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2FphaseX.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2FphaseX.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2FphaseX.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1775,6 +1775,10 @@ void PhaseCCP::analyze() {\n     } else {\n       n = worklist.pop();\n     }\n+    if (n->is_SafePoint()) {\n+      // Keep track of SafePoint nodes for PhaseCCP::transform()\n+      _safepoints.push(n);\n+    }\n     const Type *t = n->Value(this);\n     if (t != type(n)) {\n       assert(ccp_type_widens(t, type(n)), \"ccp type must widen\");\n@@ -1891,6 +1895,23 @@ Node *PhaseCCP::transform( Node *n ) {\n   GrowableArray <Node *> trstack(C->live_nodes() >> 1);\n \n   trstack.push(new_node);           // Process children of cloned node\n+\n+  // This CCP pass may prove that no exit test for a loop ever succeeds (i.e. the loop is infinite). In that case,\n+  // the logic below doesn't follow any path from Root to the loop body: there's at least one such path but it's proven\n+  // never taken (its type is TOP). As a consequence the node on the exit path that's input to Root (let's call it n) is\n+  // replaced by the top node and the inputs of that node n are not enqueued for further processing. If CCP only works\n+  // through the graph from Root, this causes the loop body to never be processed here even when it's not dead (that\n+  // is reachable from Root following its uses). To prevent that issue, transform() starts walking the graph from Root\n+  // and all safepoints.\n+  for (uint i = 0; i < _safepoints.size(); ++i) {\n+    Node* nn = _safepoints.at(i);\n+    Node* new_node = _nodes[nn->_idx];\n+    assert(new_node == NULL, \"\");\n+    new_node = transform_once(nn);\n+    _nodes.map(nn->_idx, new_node);\n+    trstack.push(new_node);\n+  }\n+\n   while ( trstack.is_nonempty() ) {\n     Node *clone = trstack.pop();\n     uint cnt = clone->req();"
      },
      {
        "sha": "622143c3c251923a8bbcc88c8ea8b6f0ec22ba35",
        "filename": "src/hotspot/share/opto/phaseX.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2FphaseX.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2FphaseX.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2FphaseX.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -565,6 +565,7 @@ class PhaseIterGVN : public PhaseGVN {\n // Phase for performing global Conditional Constant Propagation.\n // Should be replaced with combined CCP & GVN someday.\n class PhaseCCP : public PhaseIterGVN {\n+  Unique_Node_List _safepoints;\n   // Non-recursive.  Use analysis to transform single Node.\n   virtual Node *transform_once( Node *n );\n "
      },
      {
        "sha": "b5cda23020ae5e894079ff8044b0c1ef685bc14c",
        "filename": "src/hotspot/share/opto/runtime.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fruntime.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fruntime.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2Fruntime.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1193,7 +1193,7 @@ const TypeFunc* OptoRuntime::base64_encodeBlock_Type() {\n }\n // Base64 decode function\n const TypeFunc* OptoRuntime::base64_decodeBlock_Type() {\n-  int argcnt = 6;\n+  int argcnt = 7;\n \n   const Type** fields = TypeTuple::fields(argcnt);\n   int argp = TypeFunc::Parms;\n@@ -1203,6 +1203,7 @@ const TypeFunc* OptoRuntime::base64_decodeBlock_Type() {\n   fields[argp++] = TypePtr::NOTNULL;    // dest array\n   fields[argp++] = TypeInt::INT;        // dest offset\n   fields[argp++] = TypeInt::BOOL;       // isURL\n+  fields[argp++] = TypeInt::BOOL;       // isMIME\n   assert(argp == TypeFunc::Parms + argcnt, \"correct decoding\");\n   const TypeTuple* domain = TypeTuple::make(TypeFunc::Parms+argcnt, fields);\n "
      },
      {
        "sha": "012c1a69905e8693867577c3c245dd4124116b6f",
        "filename": "src/hotspot/share/opto/split_if.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fsplit_if.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fsplit_if.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2Fsplit_if.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -200,7 +200,7 @@ bool PhaseIdealLoop::split_up( Node *n, Node *blk1, Node *blk2 ) {\n       return true;\n     }\n   }\n-  if (n->Opcode() == Op_OpaqueLoopStride || n->Opcode() == Op_OpaqueLoopInit) {\n+  if (subgraph_has_opaque(n)) {\n     Unique_Node_List wq;\n     wq.push(n);\n     for (uint i = 0; i < wq.size(); i++) {"
      },
      {
        "sha": "e75b2cb2da3d005e6e30b9b3969a7d7f70a014c6",
        "filename": "src/hotspot/share/opto/stringopts.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 3,
        "changes": 23,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fstringopts.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fstringopts.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2Fstringopts.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -294,10 +294,12 @@ void StringConcat::eliminate_unneeded_control() {\n       Node* cmp = bol->in(1);\n       assert(cmp->is_Cmp(), \"unexpected if shape\");\n       if (cmp->in(1)->is_top() || cmp->in(2)->is_top()) {\n-        // This region should lose its Phis and be optimized out by igvn but there's a chance the if folds to top first\n-        // which then causes a reachable part of the graph to become dead.\n+        // This region should lose its Phis. They are removed either in PhaseRemoveUseless (for data phis) or in IGVN\n+        // (for memory phis). During IGVN, there is a chance that the If folds to top before the Region is processed\n+        // which then causes a reachable part of the graph to become dead. To prevent this, set the boolean input of\n+        // the If to a constant to nicely let the diamond Region/If fold away.\n         Compile* C = _stringopts->C;\n-        C->gvn_replace_by(n, iff->in(0));\n+        C->gvn_replace_by(iff->in(1), _stringopts->gvn()->intcon(0));\n       }\n     }\n   }\n@@ -1030,6 +1032,21 @@ bool StringConcat::validate_control_flow() {\n       fail = true;\n       break;\n     } else if (ptr->is_Proj() && ptr->in(0)->is_Initialize()) {\n+      // Check for side effect between Initialize and the constructor\n+      for (SimpleDUIterator iter(ptr); iter.has_next(); iter.next()) {\n+        Node* use = iter.get();\n+        if (!use->is_CFG() && !use->is_CheckCastPP() && !use->is_Load()) {\n+#ifndef PRODUCT\n+          if (PrintOptimizeStringConcat) {\n+            tty->print_cr(\"unexpected control use of Initialize\");\n+            ptr->in(0)->dump(); // Initialize node\n+            use->dump(1);\n+          }\n+#endif\n+          fail = true;\n+          break;\n+        }\n+      }\n       ptr = ptr->in(0)->in(0);\n     } else if (ptr->is_Region()) {\n       Node* copy = ptr->as_Region()->is_copy();"
      },
      {
        "sha": "e4e4717bd55662c66d9efe6ca1f14472c2a4c9f0",
        "filename": "src/hotspot/share/opto/subnode.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fsubnode.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fopto%2Fsubnode.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fopto%2Fsubnode.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1521,14 +1521,15 @@ Node *BoolNode::Ideal(PhaseGVN *phase, bool can_reshape) {\n   }\n \n   // Change x u< 1 or x u<= 0 to x == 0\n+  // and    x u> 0 or u>= 1   to x != 0\n   if (cop == Op_CmpU &&\n       cmp1_op != Op_LoadRange &&\n-      ((_test._test == BoolTest::lt &&\n+      (((_test._test == BoolTest::lt || _test._test == BoolTest::ge) &&\n         cmp2->find_int_con(-1) == 1) ||\n-       (_test._test == BoolTest::le &&\n+       ((_test._test == BoolTest::le || _test._test == BoolTest::gt) &&\n         cmp2->find_int_con(-1) == 0))) {\n     Node* ncmp = phase->transform(new CmpINode(cmp1, phase->intcon(0)));\n-    return new BoolNode(ncmp, BoolTest::eq);\n+    return new BoolNode(ncmp, _test.is_less() ? BoolTest::eq : BoolTest::ne);\n   }\n \n   // Change (arraylength <= 0) or (arraylength == 0)"
      },
      {
        "sha": "9b22143caedb5673ded35b32f34addee61863b7e",
        "filename": "src/hotspot/share/prims/forte.cpp",
        "status": "modified",
        "additions": 49,
        "deletions": 6,
        "changes": 55,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2Fforte.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2Fforte.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2Fforte.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -314,6 +314,46 @@ static bool find_initial_Java_frame(JavaThread* thread,\n \n   frame candidate = *fr;\n \n+#ifdef ZERO\n+  // Zero has no frames with code blobs, so the generic code fails.\n+  // Instead, try to do Zero-specific search for Java frame.\n+\n+  {\n+    RegisterMap map(thread, false, false);\n+\n+    while (true) {\n+      // Cannot walk this frame? Cannot do anything anymore.\n+      if (!candidate.safe_for_sender(thread)) {\n+        return false;\n+      }\n+\n+      if (candidate.is_entry_frame()) {\n+        // jcw is NULL if the java call wrapper could not be found\n+        JavaCallWrapper* jcw = candidate.entry_frame_call_wrapper_if_safe(thread);\n+        // If initial frame is frame from StubGenerator and there is no\n+        // previous anchor, there are no java frames associated with a method\n+        if (jcw == NULL || jcw->is_first_frame()) {\n+          return false;\n+        }\n+      }\n+\n+      // If we find a decipherable interpreted frame, this is our initial frame.\n+      if (candidate.is_interpreted_frame()) {\n+        if (is_decipherable_interpreted_frame(thread, &candidate, method_p, bci_p)) {\n+          *initial_frame_p = candidate;\n+          return true;\n+        }\n+      }\n+\n+      // Walk some more.\n+      candidate = candidate.sender(&map);\n+    }\n+\n+    // No dice, report no initial frames.\n+    return false;\n+  }\n+#endif\n+\n   // If the starting frame we were given has no codeBlob associated with\n   // it see if we can find such a frame because only frames with codeBlobs\n   // are possible Java frames.\n@@ -522,12 +562,14 @@ static void forte_fill_call_trace_given_top(JavaThread* thd,\n extern \"C\" {\n JNIEXPORT\n void AsyncGetCallTrace(ASGCT_CallTrace *trace, jint depth, void* ucontext) {\n-  JavaThread* thread;\n \n-  if (trace->env_id == NULL ||\n-    (thread = JavaThread::thread_from_jni_environment(trace->env_id)) == NULL ||\n-    thread->is_exiting()) {\n+  // Can't use thread_from_jni_environment as it may also perform a VM exit check that is unsafe to\n+  // do from this context.\n+  Thread* raw_thread = Thread::current_or_null_safe();\n+  JavaThread* thread;\n \n+  if (trace->env_id == NULL || raw_thread == NULL || !raw_thread->is_Java_thread() ||\n+      (thread = ((JavaThread*)raw_thread))->is_exiting()) {\n     // bad env_id, thread has exited or thread is exiting\n     trace->num_frames = ticks_thread_exit; // -8\n     return;\n@@ -539,7 +581,8 @@ void AsyncGetCallTrace(ASGCT_CallTrace *trace, jint depth, void* ucontext) {\n     return;\n   }\n \n-  assert(JavaThread::current() == thread,\n+  // This is safe now as the thread has not terminated and so no VM exit check occurs.\n+  assert(thread == JavaThread::thread_from_jni_environment(trace->env_id),\n          \"AsyncGetCallTrace must be called by the current interrupted thread\");\n \n   if (!JvmtiExport::should_post_class_load()) {"
      },
      {
        "sha": "4160c2c876502c32b0898f1719c549932a556f11",
        "filename": "src/hotspot/share/prims/jvmtiEnvBase.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 28,
        "changes": 54,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiEnvBase.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiEnvBase.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiEnvBase.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -718,8 +718,8 @@ JvmtiEnvBase::get_owned_monitors(JavaThread *calling_thread, JavaThread* java_th\n   }\n \n   // Get off stack monitors. (e.g. acquired via jni MonitorEnter).\n-  JvmtiMonitorClosure jmc(java_thread, calling_thread, owned_monitors_list, this);\n-  ObjectSynchronizer::monitors_iterate(&jmc);\n+  JvmtiMonitorClosure jmc(calling_thread, owned_monitors_list, this);\n+  ObjectSynchronizer::monitors_iterate(&jmc, java_thread);\n   err = jmc.error();\n \n   return err;\n@@ -1454,34 +1454,32 @@ JvmtiMonitorClosure::do_monitor(ObjectMonitor* mon) {\n     // to the list.\n     return;\n   }\n-  if (mon->owner() == _java_thread ) {\n-    // Filter out on stack monitors collected during stack walk.\n-    oop obj = mon->object();\n-    bool found = false;\n-    for (int j = 0; j < _owned_monitors_list->length(); j++) {\n-      jobject jobj = ((jvmtiMonitorStackDepthInfo*)_owned_monitors_list->at(j))->monitor;\n-      oop check = JNIHandles::resolve(jobj);\n-      if (check == obj) {\n-        // On stack monitor already collected during the stack walk.\n-        found = true;\n-        break;\n-      }\n+  // Filter out on stack monitors collected during stack walk.\n+  oop obj = mon->object();\n+  bool found = false;\n+  for (int j = 0; j < _owned_monitors_list->length(); j++) {\n+    jobject jobj = ((jvmtiMonitorStackDepthInfo*)_owned_monitors_list->at(j))->monitor;\n+    oop check = JNIHandles::resolve(jobj);\n+    if (check == obj) {\n+      // On stack monitor already collected during the stack walk.\n+      found = true;\n+      break;\n     }\n-    if (found == false) {\n-      // This is off stack monitor (e.g. acquired via jni MonitorEnter).\n-      jvmtiError err;\n-      jvmtiMonitorStackDepthInfo *jmsdi;\n-      err = _env->allocate(sizeof(jvmtiMonitorStackDepthInfo), (unsigned char **)&jmsdi);\n-      if (err != JVMTI_ERROR_NONE) {\n-        _error = err;\n-        return;\n-      }\n-      Handle hobj(Thread::current(), obj);\n-      jmsdi->monitor = _env->jni_reference(_calling_thread, hobj);\n-      // stack depth is unknown for this monitor.\n-      jmsdi->stack_depth = -1;\n-      _owned_monitors_list->append(jmsdi);\n+  }\n+  if (found == false) {\n+    // This is off stack monitor (e.g. acquired via jni MonitorEnter).\n+    jvmtiError err;\n+    jvmtiMonitorStackDepthInfo *jmsdi;\n+    err = _env->allocate(sizeof(jvmtiMonitorStackDepthInfo), (unsigned char **)&jmsdi);\n+    if (err != JVMTI_ERROR_NONE) {\n+      _error = err;\n+      return;\n     }\n+    Handle hobj(Thread::current(), obj);\n+    jmsdi->monitor = _env->jni_reference(_calling_thread, hobj);\n+    // stack depth is unknown for this monitor.\n+    jmsdi->stack_depth = -1;\n+    _owned_monitors_list->append(jmsdi);\n   }\n }\n "
      },
      {
        "sha": "515777295d45ee39fa7b53250f39de378c0ec09d",
        "filename": "src/hotspot/share/prims/jvmtiEnvBase.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiEnvBase.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiEnvBase.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiEnvBase.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -639,17 +639,15 @@ class ResourceTracker : public StackObj {\n // Jvmti monitor closure to collect off stack monitors.\n class JvmtiMonitorClosure: public MonitorClosure {\n  private:\n-  JavaThread *_java_thread;\n   JavaThread *_calling_thread;\n   GrowableArray<jvmtiMonitorStackDepthInfo*> *_owned_monitors_list;\n   jvmtiError _error;\n   JvmtiEnvBase *_env;\n \n  public:\n-  JvmtiMonitorClosure(JavaThread* thread, JavaThread *calling_thread,\n+  JvmtiMonitorClosure(JavaThread *calling_thread,\n                       GrowableArray<jvmtiMonitorStackDepthInfo*> *owned_monitors,\n                       JvmtiEnvBase *env) {\n-    _java_thread = thread;\n     _calling_thread = calling_thread;\n     _owned_monitors_list = owned_monitors;\n     _error = JVMTI_ERROR_NONE;"
      },
      {
        "sha": "adf9047bd1c52782c6da63ab9fec57b697c0c1f8",
        "filename": "src/hotspot/share/prims/jvmtiEventController.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiEventController.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiEventController.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiEventController.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -830,10 +830,6 @@ JvmtiEventControllerPrivate::set_user_enabled(JvmtiEnvBase *env, JavaThread *thr\n             thread==NULL? \"ALL\": JvmtiTrace::safe_get_thread_name(thread),\n             enabled? \"enabled\" : \"disabled\", JvmtiTrace::event_name(event_type)));\n \n-  if (event_type == JVMTI_EVENT_OBJECT_FREE) {\n-    flush_object_free_events(env);\n-  }\n-\n   if (thread == NULL) {\n     env->env_event_enable()->set_user_enabled(event_type, enabled);\n   } else {\n@@ -982,6 +978,10 @@ JvmtiEventController::is_global_event(jvmtiEvent event_type) {\n \n void\n JvmtiEventController::set_user_enabled(JvmtiEnvBase *env, JavaThread *thread, jvmtiEvent event_type, bool enabled) {\n+  if (event_type == JVMTI_EVENT_OBJECT_FREE) {\n+    JvmtiEventControllerPrivate::flush_object_free_events(env);\n+  }\n+\n   if (Threads::number_of_threads() == 0) {\n     // during early VM start-up locks don't exist, but we are safely single threaded,\n     // call the functionality without holding the JvmtiThreadState_lock."
      },
      {
        "sha": "0c8a43680fada67f66b9c55aa85392635eaf240b",
        "filename": "src/hotspot/share/prims/jvmtiExport.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiExport.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiExport.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiExport.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -730,6 +730,8 @@ void JvmtiExport::post_vm_initialized() {\n void JvmtiExport::post_vm_death() {\n   EVT_TRIG_TRACE(JVMTI_EVENT_VM_DEATH, (\"Trg VM death event triggered\" ));\n \n+  JvmtiTagMap::flush_all_object_free_events();\n+\n   JvmtiEnvIterator it;\n   for (JvmtiEnv* env = it.first(); env != NULL; env = it.next(env)) {\n     if (env->is_enabled(JVMTI_EVENT_VM_DEATH)) {\n@@ -1490,15 +1492,23 @@ void JvmtiExport::post_thread_end(JavaThread *thread) {\n   }\n }\n \n-void JvmtiExport::post_object_free(JvmtiEnv* env, jlong tag) {\n-  assert(env->is_enabled(JVMTI_EVENT_OBJECT_FREE), \"checking\");\n+void JvmtiExport::post_object_free(JvmtiEnv* env, GrowableArray<jlong>* objects) {\n+  assert(objects != NULL, \"Nothing to post\");\n+  if (!env->is_enabled(JVMTI_EVENT_OBJECT_FREE)) {\n+    return; // the event type has been already disabled\n+  }\n \n   EVT_TRIG_TRACE(JVMTI_EVENT_OBJECT_FREE, (\"[?] Trg Object Free triggered\" ));\n   EVT_TRACE(JVMTI_EVENT_OBJECT_FREE, (\"[?] Evt Object Free sent\"));\n \n+  JavaThread* javaThread = JavaThread::current();\n+  JvmtiThreadEventMark jem(javaThread);\n+  JvmtiJavaThreadEventTransition jet(javaThread);\n   jvmtiEventObjectFree callback = env->callbacks()->ObjectFree;\n   if (callback != NULL) {\n-    (*callback)(env->jvmti_external(), tag);\n+    for (int index = 0; index < objects->length(); index++) {\n+      (*callback)(env->jvmti_external(), objects->at(index));\n+    }\n   }\n }\n "
      },
      {
        "sha": "5d583178a0ba95d3a070ba96e965fd86a3878d70",
        "filename": "src/hotspot/share/prims/jvmtiExport.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiExport.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiExport.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiExport.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -370,7 +370,7 @@ class JvmtiExport : public AllStatic {\n   static void post_monitor_contended_entered(JavaThread *thread, ObjectMonitor *obj_mntr) NOT_JVMTI_RETURN;\n   static void post_monitor_wait(JavaThread *thread, oop obj, jlong timeout) NOT_JVMTI_RETURN;\n   static void post_monitor_waited(JavaThread *thread, ObjectMonitor *obj_mntr, jboolean timed_out) NOT_JVMTI_RETURN;\n-  static void post_object_free(JvmtiEnv* env, jlong tag) NOT_JVMTI_RETURN;\n+  static void post_object_free(JvmtiEnv* env, GrowableArray<jlong>* objects) NOT_JVMTI_RETURN;\n   static void post_resource_exhausted(jint resource_exhausted_flags, const char* detail) NOT_JVMTI_RETURN;\n   static void record_vm_internal_object_allocation(oop object) NOT_JVMTI_RETURN;\n   // Post objects collected by vm_object_alloc_event_collector."
      },
      {
        "sha": "68228f5141bcf5c959cb09db6a396af2179170f3",
        "filename": "src/hotspot/share/prims/jvmtiTagMap.cpp",
        "status": "modified",
        "additions": 122,
        "deletions": 74,
        "changes": 196,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMap.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMap.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMap.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -76,7 +76,8 @@ JvmtiTagMap::JvmtiTagMap(JvmtiEnv* env) :\n   _lock(Mutex::nonleaf+1, \"JvmtiTagMap_lock\", Mutex::_allow_vm_block_flag,\n         Mutex::_safepoint_check_never),\n   _needs_rehashing(false),\n-  _needs_cleaning(false) {\n+  _needs_cleaning(false),\n+  _posting_events(false) {\n \n   assert(JvmtiThreadState_lock->is_locked(), \"sanity check\");\n   assert(((JvmtiEnvBase *)env)->tag_map() == NULL, \"tag map already exists for environment\");\n@@ -135,18 +136,16 @@ bool JvmtiTagMap::is_empty() {\n }\n \n // This checks for posting and rehashing before operations that\n-// this tagmap table.  The calls from a JavaThread only rehash, posting is\n-// only done before heap walks.\n-void JvmtiTagMap::check_hashmap(bool post_events) {\n-  assert(!post_events || SafepointSynchronize::is_at_safepoint(), \"precondition\");\n+// this tagmap table.\n+void JvmtiTagMap::check_hashmap(GrowableArray<jlong>* objects) {\n   assert(is_locked(), \"checking\");\n \n   if (is_empty()) { return; }\n \n   if (_needs_cleaning &&\n-      post_events &&\n+      objects != NULL &&\n       env()->is_enabled(JVMTI_EVENT_OBJECT_FREE)) {\n-    remove_dead_entries_locked(true /* post_object_free */);\n+    remove_dead_entries_locked(objects);\n   }\n   if (_needs_rehashing) {\n     log_info(jvmti, table)(\"TagMap table needs rehashing\");\n@@ -156,7 +155,7 @@ void JvmtiTagMap::check_hashmap(bool post_events) {\n }\n \n // This checks for posting and rehashing and is called from the heap walks.\n-void JvmtiTagMap::check_hashmaps_for_heapwalk() {\n+void JvmtiTagMap::check_hashmaps_for_heapwalk(GrowableArray<jlong>* objects) {\n   assert(SafepointSynchronize::is_at_safepoint(), \"called from safepoints\");\n \n   // Verify that the tag map tables are valid and unconditionally post events\n@@ -167,7 +166,7 @@ void JvmtiTagMap::check_hashmaps_for_heapwalk() {\n     if (tag_map != NULL) {\n       // The ZDriver may be walking the hashmaps concurrently so this lock is needed.\n       MutexLocker ml(tag_map->lock(), Mutex::_no_safepoint_check_flag);\n-      tag_map->check_hashmap(/*post_events*/ true);\n+      tag_map->check_hashmap(objects);\n     }\n   }\n }\n@@ -358,7 +357,7 @@ void JvmtiTagMap::set_tag(jobject object, jlong tag) {\n   // SetTag should not post events because the JavaThread has to\n   // transition to native for the callback and this cannot stop for\n   // safepoints with the hashmap lock held.\n-  check_hashmap(/*post_events*/ false);\n+  check_hashmap(NULL);  /* don't collect dead objects */\n \n   // resolve the object\n   oop o = JNIHandles::resolve_non_null(object);\n@@ -393,7 +392,7 @@ jlong JvmtiTagMap::get_tag(jobject object) {\n   // GetTag should not post events because the JavaThread has to\n   // transition to native for the callback and this cannot stop for\n   // safepoints with the hashmap lock held.\n-  check_hashmap(/*post_events*/ false);\n+  check_hashmap(NULL); /* don't collect dead objects */\n \n   // resolve the object\n   oop o = JNIHandles::resolve_non_null(object);\n@@ -888,15 +887,17 @@ static jint invoke_primitive_field_callback_for_instance_fields(\n class VM_HeapIterateOperation: public VM_Operation {\n  private:\n   ObjectClosure* _blk;\n+  GrowableArray<jlong>* const _dead_objects;\n  public:\n-  VM_HeapIterateOperation(ObjectClosure* blk) { _blk = blk; }\n+  VM_HeapIterateOperation(ObjectClosure* blk, GrowableArray<jlong>* objects) :\n+    _blk(blk), _dead_objects(objects) { }\n \n   VMOp_Type type() const { return VMOp_HeapIterateOperation; }\n   void doit() {\n     // allows class files maps to be cached during iteration\n     ClassFieldMapCacheMark cm;\n \n-    JvmtiTagMap::check_hashmaps_for_heapwalk();\n+    JvmtiTagMap::check_hashmaps_for_heapwalk(_dead_objects);\n \n     // make sure that heap is parsable (fills TLABs with filler objects)\n     Universe::heap()->ensure_parsability(false);  // no need to retire TLABs\n@@ -1135,14 +1136,20 @@ void JvmtiTagMap::iterate_over_heap(jvmtiHeapObjectFilter object_filter,\n                    object_filter == JVMTI_HEAP_OBJECT_EITHER,\n                    JavaThread::current());\n   eb.deoptimize_objects_all_threads();\n-  MutexLocker ml(Heap_lock);\n-  IterateOverHeapObjectClosure blk(this,\n-                                   klass,\n-                                   object_filter,\n-                                   heap_object_callback,\n-                                   user_data);\n-  VM_HeapIterateOperation op(&blk);\n-  VMThread::execute(&op);\n+  Arena dead_object_arena(mtServiceability);\n+  GrowableArray <jlong> dead_objects(&dead_object_arena, 10, 0, 0);\n+  {\n+    MutexLocker ml(Heap_lock);\n+    IterateOverHeapObjectClosure blk(this,\n+                                     klass,\n+                                     object_filter,\n+                                     heap_object_callback,\n+                                     user_data);\n+    VM_HeapIterateOperation op(&blk, &dead_objects);\n+    VMThread::execute(&op);\n+  }\n+  // Post events outside of Heap_lock\n+  post_dead_objects(&dead_objects);\n }\n \n \n@@ -1155,67 +1162,83 @@ void JvmtiTagMap::iterate_through_heap(jint heap_filter,\n   // EA based optimizations on tagged objects are already reverted.\n   EscapeBarrier eb(!(heap_filter & JVMTI_HEAP_FILTER_UNTAGGED), JavaThread::current());\n   eb.deoptimize_objects_all_threads();\n-  MutexLocker ml(Heap_lock);\n-  IterateThroughHeapObjectClosure blk(this,\n-                                      klass,\n-                                      heap_filter,\n-                                      callbacks,\n-                                      user_data);\n-  VM_HeapIterateOperation op(&blk);\n-  VMThread::execute(&op);\n+\n+  Arena dead_object_arena(mtServiceability);\n+  GrowableArray<jlong> dead_objects(&dead_object_arena, 10, 0, 0);\n+  {\n+    MutexLocker ml(Heap_lock);\n+    IterateThroughHeapObjectClosure blk(this,\n+                                        klass,\n+                                        heap_filter,\n+                                        callbacks,\n+                                        user_data);\n+    VM_HeapIterateOperation op(&blk, &dead_objects);\n+    VMThread::execute(&op);\n+  }\n+  // Post events outside of Heap_lock\n+  post_dead_objects(&dead_objects);\n }\n \n-void JvmtiTagMap::remove_dead_entries_locked(bool post_object_free) {\n+void JvmtiTagMap::remove_dead_entries_locked(GrowableArray<jlong>* objects) {\n   assert(is_locked(), \"precondition\");\n   if (_needs_cleaning) {\n     // Recheck whether to post object free events under the lock.\n-    post_object_free = post_object_free && env()->is_enabled(JVMTI_EVENT_OBJECT_FREE);\n+    if (!env()->is_enabled(JVMTI_EVENT_OBJECT_FREE)) {\n+      objects = NULL;\n+    }\n     log_info(jvmti, table)(\"TagMap table needs cleaning%s\",\n-                           (post_object_free ? \" and posting\" : \"\"));\n-    hashmap()->remove_dead_entries(env(), post_object_free);\n+                           ((objects != NULL) ? \" and posting\" : \"\"));\n+    hashmap()->remove_dead_entries(objects);\n     _needs_cleaning = false;\n   }\n }\n \n-void JvmtiTagMap::remove_dead_entries(bool post_object_free) {\n+void JvmtiTagMap::remove_dead_entries(GrowableArray<jlong>* objects) {\n   MutexLocker ml(lock(), Mutex::_no_safepoint_check_flag);\n-  remove_dead_entries_locked(post_object_free);\n+  remove_dead_entries_locked(objects);\n }\n \n-class VM_JvmtiPostObjectFree: public VM_Operation {\n-  JvmtiTagMap* _tag_map;\n- public:\n-  VM_JvmtiPostObjectFree(JvmtiTagMap* tag_map) : _tag_map(tag_map) {}\n-  VMOp_Type type() const { return VMOp_Cleanup; }\n-  void doit() {\n-    _tag_map->remove_dead_entries(true /* post_object_free */);\n+void JvmtiTagMap::post_dead_objects(GrowableArray<jlong>* const objects) {\n+  assert(Thread::current()->is_Java_thread(), \"Must post from JavaThread\");\n+  if (objects != NULL && objects->length() > 0) {\n+    JvmtiExport::post_object_free(env(), objects);\n+    log_info(jvmti)(\"%d free object posted\", objects->length());\n   }\n+}\n \n-  // Doesn't need a safepoint, just the VM thread\n-  virtual bool evaluate_at_safepoint() const { return false; }\n-};\n-\n-// PostObjectFree can't be called by JavaThread, so call it from the VM thread.\n-void JvmtiTagMap::post_dead_objects_on_vm_thread() {\n-  VM_JvmtiPostObjectFree op(this);\n-  VMThread::execute(&op);\n+void JvmtiTagMap::remove_and_post_dead_objects() {\n+  ResourceMark rm;\n+  GrowableArray<jlong> objects;\n+  remove_dead_entries(&objects);\n+  post_dead_objects(&objects);\n }\n \n void JvmtiTagMap::flush_object_free_events() {\n   assert_not_at_safepoint();\n   if (env()->is_enabled(JVMTI_EVENT_OBJECT_FREE)) {\n     {\n-      MutexLocker ml(lock(), Mutex::_no_safepoint_check_flag);\n+      MonitorLocker ml(lock(), Mutex::_no_safepoint_check_flag);\n+      // If another thread is posting events, let it finish\n+      while (_posting_events) {\n+        ml.wait();\n+      }\n+\n       if (!_needs_cleaning || is_empty()) {\n         _needs_cleaning = false;\n         return;\n       }\n+      _posting_events = true;\n     } // Drop the lock so we can do the cleaning on the VM thread.\n     // Needs both cleaning and event posting (up to some other thread\n     // getting there first after we dropped the lock).\n-    post_dead_objects_on_vm_thread();\n+    remove_and_post_dead_objects();\n+    {\n+      MonitorLocker ml(lock(), Mutex::_no_safepoint_check_flag);\n+      _posting_events = false;\n+      ml.notify_all();\n+    }\n   } else {\n-    remove_dead_entries(false);\n+    remove_dead_entries(NULL);\n   }\n }\n \n@@ -1327,9 +1350,6 @@ jvmtiError JvmtiTagMap::get_objects_with_tags(const jlong* tags,\n     // it is collected yet.\n     entry_iterate(&collector);\n   }\n-  if (collector.some_dead_found() && env()->is_enabled(JVMTI_EVENT_OBJECT_FREE)) {\n-    post_dead_objects_on_vm_thread();\n-  }\n   return collector.result(count_ptr, object_result_ptr, tag_result_ptr);\n }\n \n@@ -2376,6 +2396,9 @@ class VM_HeapWalkOperation: public VM_Operation {\n   Handle _initial_object;\n   GrowableArray<oop>* _visit_stack;                 // the visit stack\n \n+  // Dead object tags in JvmtiTagMap\n+  GrowableArray<jlong>* _dead_objects;\n+\n   bool _following_object_refs;                      // are we following object references\n \n   bool _reporting_primitive_fields;                 // optional reporting\n@@ -2417,12 +2440,14 @@ class VM_HeapWalkOperation: public VM_Operation {\n   VM_HeapWalkOperation(JvmtiTagMap* tag_map,\n                        Handle initial_object,\n                        BasicHeapWalkContext callbacks,\n-                       const void* user_data);\n+                       const void* user_data,\n+                       GrowableArray<jlong>* objects);\n \n   VM_HeapWalkOperation(JvmtiTagMap* tag_map,\n                        Handle initial_object,\n                        AdvancedHeapWalkContext callbacks,\n-                       const void* user_data);\n+                       const void* user_data,\n+                       GrowableArray<jlong>* objects);\n \n   ~VM_HeapWalkOperation();\n \n@@ -2434,7 +2459,8 @@ class VM_HeapWalkOperation: public VM_Operation {\n VM_HeapWalkOperation::VM_HeapWalkOperation(JvmtiTagMap* tag_map,\n                                            Handle initial_object,\n                                            BasicHeapWalkContext callbacks,\n-                                           const void* user_data) {\n+                                           const void* user_data,\n+                                           GrowableArray<jlong>* objects) {\n   _is_advanced_heap_walk = false;\n   _tag_map = tag_map;\n   _initial_object = initial_object;\n@@ -2443,6 +2469,7 @@ VM_HeapWalkOperation::VM_HeapWalkOperation(JvmtiTagMap* tag_map,\n   _reporting_primitive_array_values = false;\n   _reporting_string_values = false;\n   _visit_stack = create_visit_stack();\n+  _dead_objects = objects;\n \n \n   CallbackInvoker::initialize_for_basic_heap_walk(tag_map, _visit_stack, user_data, callbacks);\n@@ -2451,7 +2478,8 @@ VM_HeapWalkOperation::VM_HeapWalkOperation(JvmtiTagMap* tag_map,\n VM_HeapWalkOperation::VM_HeapWalkOperation(JvmtiTagMap* tag_map,\n                                            Handle initial_object,\n                                            AdvancedHeapWalkContext callbacks,\n-                                           const void* user_data) {\n+                                           const void* user_data,\n+                                           GrowableArray<jlong>* objects) {\n   _is_advanced_heap_walk = true;\n   _tag_map = tag_map;\n   _initial_object = initial_object;\n@@ -2460,6 +2488,7 @@ VM_HeapWalkOperation::VM_HeapWalkOperation(JvmtiTagMap* tag_map,\n   _reporting_primitive_array_values = (callbacks.array_primitive_value_callback() != NULL);;\n   _reporting_string_values = (callbacks.string_primitive_value_callback() != NULL);;\n   _visit_stack = create_visit_stack();\n+  _dead_objects = objects;\n \n   CallbackInvoker::initialize_for_advanced_heap_walk(tag_map, _visit_stack, user_data, callbacks);\n }\n@@ -2930,7 +2959,7 @@ void VM_HeapWalkOperation::doit() {\n   ObjectMarkerController marker;\n   ClassFieldMapCacheMark cm;\n \n-  JvmtiTagMap::check_hashmaps_for_heapwalk();\n+  JvmtiTagMap::check_hashmaps_for_heapwalk(_dead_objects);\n \n   assert(visit_stack()->is_empty(), \"visit stack must be empty\");\n \n@@ -2978,10 +3007,16 @@ void JvmtiTagMap::iterate_over_reachable_objects(jvmtiHeapRootCallback heap_root\n   JavaThread* jt = JavaThread::current();\n   EscapeBarrier eb(true, jt);\n   eb.deoptimize_objects_all_threads();\n-  MutexLocker ml(Heap_lock);\n-  BasicHeapWalkContext context(heap_root_callback, stack_ref_callback, object_ref_callback);\n-  VM_HeapWalkOperation op(this, Handle(), context, user_data);\n-  VMThread::execute(&op);\n+  Arena dead_object_arena(mtServiceability);\n+  GrowableArray<jlong> dead_objects(&dead_object_arena, 10, 0, 0);\n+  {\n+    MutexLocker ml(Heap_lock);\n+    BasicHeapWalkContext context(heap_root_callback, stack_ref_callback, object_ref_callback);\n+    VM_HeapWalkOperation op(this, Handle(), context, user_data, &dead_objects);\n+    VMThread::execute(&op);\n+  }\n+  // Post events outside of Heap_lock\n+  post_dead_objects(&dead_objects);\n }\n \n // iterate over all objects that are reachable from a given object\n@@ -2991,10 +3026,16 @@ void JvmtiTagMap::iterate_over_objects_reachable_from_object(jobject object,\n   oop obj = JNIHandles::resolve(object);\n   Handle initial_object(Thread::current(), obj);\n \n-  MutexLocker ml(Heap_lock);\n-  BasicHeapWalkContext context(NULL, NULL, object_ref_callback);\n-  VM_HeapWalkOperation op(this, initial_object, context, user_data);\n-  VMThread::execute(&op);\n+  Arena dead_object_arena(mtServiceability);\n+  GrowableArray<jlong> dead_objects(&dead_object_arena, 10, 0, 0);\n+  {\n+    MutexLocker ml(Heap_lock);\n+    BasicHeapWalkContext context(NULL, NULL, object_ref_callback);\n+    VM_HeapWalkOperation op(this, initial_object, context, user_data, &dead_objects);\n+    VMThread::execute(&op);\n+  }\n+  // Post events outside of Heap_lock\n+  post_dead_objects(&dead_objects);\n }\n \n // follow references from an initial object or the GC roots\n@@ -3012,10 +3053,17 @@ void JvmtiTagMap::follow_references(jint heap_filter,\n                    !(heap_filter & JVMTI_HEAP_FILTER_UNTAGGED),\n                    jt);\n   eb.deoptimize_objects_all_threads();\n-  MutexLocker ml(Heap_lock);\n-  AdvancedHeapWalkContext context(heap_filter, klass, callbacks);\n-  VM_HeapWalkOperation op(this, initial_object, context, user_data);\n-  VMThread::execute(&op);\n+\n+  Arena dead_object_arena(mtServiceability);\n+  GrowableArray<jlong> dead_objects(&dead_object_arena, 10, 0, 0);\n+  {\n+    MutexLocker ml(Heap_lock);\n+    AdvancedHeapWalkContext context(heap_filter, klass, callbacks);\n+    VM_HeapWalkOperation op(this, initial_object, context, user_data, &dead_objects);\n+    VMThread::execute(&op);\n+  }\n+  // Post events outside of Heap_lock\n+  post_dead_objects(&dead_objects);\n }\n \n // Concurrent GC needs to call this in relocation pause, so after the objects are moved"
      },
      {
        "sha": "a87ff45baac1eae824c413c61e4df42a2f91f7b5",
        "filename": "src/hotspot/share/prims/jvmtiTagMap.hpp",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMap.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMap.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMap.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -38,10 +38,11 @@ class JvmtiTagMap :  public CHeapObj<mtInternal> {\n  private:\n \n   JvmtiEnv*             _env;                       // the jvmti environment\n-  Mutex                 _lock;                      // lock for this tag map\n+  Monitor               _lock;                      // lock for this tag map\n   JvmtiTagMapTable*     _hashmap;                   // the hashmap for tags\n   bool                  _needs_rehashing;\n   bool                  _needs_cleaning;\n+  bool                  _posting_events;\n \n   static bool           _has_object_free_events;\n \n@@ -51,15 +52,14 @@ class JvmtiTagMap :  public CHeapObj<mtInternal> {\n   // accessors\n   inline JvmtiEnv* env() const              { return _env; }\n \n-  void check_hashmap(bool post_events);\n+  void check_hashmap(GrowableArray<jlong>* objects);\n \n   void entry_iterate(JvmtiTagMapEntryClosure* closure);\n-  void post_dead_objects_on_vm_thread();\n \n  public:\n   // indicates if this tag map is locked\n   bool is_locked()                          { return lock()->is_locked(); }\n-  inline Mutex* lock()                      { return &_lock; }\n+  inline Monitor* lock()                    { return &_lock; }\n \n   JvmtiTagMapTable* hashmap() { return _hashmap; }\n \n@@ -109,11 +109,12 @@ class JvmtiTagMap :  public CHeapObj<mtInternal> {\n                                    jint* count_ptr, jobject** object_result_ptr,\n                                    jlong** tag_result_ptr);\n \n+  void remove_and_post_dead_objects();\n+  void remove_dead_entries(GrowableArray<jlong>* objects);\n+  void remove_dead_entries_locked(GrowableArray<jlong>* objects);\n+  void post_dead_objects(GrowableArray<jlong>* const objects);\n \n-  void remove_dead_entries(bool post_object_free);\n-  void remove_dead_entries_locked(bool post_object_free);\n-\n-  static void check_hashmaps_for_heapwalk();\n+  static void check_hashmaps_for_heapwalk(GrowableArray<jlong>* objects);\n   static void set_needs_rehashing() NOT_JVMTI_RETURN;\n   static void set_needs_cleaning() NOT_JVMTI_RETURN;\n   static void gc_notification(size_t num_dead_entries) NOT_JVMTI_RETURN;"
      },
      {
        "sha": "8eddd81e0dace1b0700265cd3eb1681f9e54f57e",
        "filename": "src/hotspot/share/prims/jvmtiTagMapTable.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMapTable.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMapTable.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMapTable.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2020, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -186,8 +186,9 @@ void JvmtiTagMapTable::resize_if_needed() {\n   }\n }\n \n-// Serially remove entries for dead oops from the table, and notify jvmti.\n-void JvmtiTagMapTable::remove_dead_entries(JvmtiEnv* env, bool post_object_free) {\n+// Serially remove entries for dead oops from the table and store dead oops'\n+// tag in objects array if provided.\n+void JvmtiTagMapTable::remove_dead_entries(GrowableArray<jlong>* objects) {\n   int oops_removed = 0;\n   int oops_counted = 0;\n   for (int i = 0; i < table_size(); ++i) {\n@@ -206,19 +207,18 @@ void JvmtiTagMapTable::remove_dead_entries(JvmtiEnv* env, bool post_object_free)\n         *p = entry->next();\n         free_entry(entry);\n \n-        // post the event to the profiler\n-        if (post_object_free) {\n-          JvmtiExport::post_object_free(env, tag);\n+        // collect object tags for posting JVMTI events later\n+        if (objects != NULL) {\n+          objects->append(tag);\n         }\n-\n       }\n       // get next entry\n       entry = *p;\n     }\n   }\n \n-  log_info(jvmti, table) (\"JvmtiTagMap entries counted %d removed %d; %s\",\n-                          oops_counted, oops_removed, post_object_free ? \"free object posted\" : \"no posting\");\n+  log_info(jvmti, table) (\"JvmtiTagMap entries counted %d removed %d\",\n+                          oops_counted, oops_removed);\n }\n \n // Rehash oops in the table"
      },
      {
        "sha": "1cac459d652909600bfd576edb975ee5135eb1a2",
        "filename": "src/hotspot/share/prims/jvmtiTagMapTable.hpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMapTable.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMapTable.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FjvmtiTagMapTable.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -87,8 +87,8 @@ class JvmtiTagMapTable : public Hashtable<WeakHandle, mtServiceability> {\n \n   bool is_empty() const { return number_of_entries() == 0; }\n \n-  // Cleanup cleared entries and post\n-  void remove_dead_entries(JvmtiEnv* env, bool post_object_free);\n+  // Cleanup cleared entries and store dead object tags in objects array\n+  void remove_dead_entries(GrowableArray<jlong>* objects);\n   void rehash();\n   void clear();\n };"
      },
      {
        "sha": "c086b81e9e2e1fe61c9277ef90c0fb380e744888",
        "filename": "src/hotspot/share/prims/methodHandles.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FmethodHandles.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fprims%2FmethodHandles.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fprims%2FmethodHandles.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2008, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -89,7 +89,11 @@ void MethodHandles::generate_adapters() {\n \n   ResourceMark rm;\n   TraceTime timer(\"MethodHandles adapters generation\", TRACETIME_LOG(Info, startuptime));\n-  _adapter_code = MethodHandlesAdapterBlob::create(adapter_code_size);\n+  // The adapter entry is required to be aligned to CodeEntryAlignment.\n+  // So we need additional bytes due to alignment.\n+  int adapter_num = (int)Interpreter::method_handle_invoke_LAST - (int)Interpreter::method_handle_invoke_FIRST + 1;\n+  int max_aligned_bytes = adapter_num * CodeEntryAlignment;\n+  _adapter_code = MethodHandlesAdapterBlob::create(adapter_code_size + max_aligned_bytes);\n   CodeBuffer code(_adapter_code);\n   MethodHandlesAdapterGenerator g(&code);\n   g.generate();"
      },
      {
        "sha": "bbe1043f0fb43354f13fdfbbb5b13a59776f4b30",
        "filename": "src/hotspot/share/runtime/abstract_vm_version.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fabstract_vm_version.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fabstract_vm_version.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fruntime%2Fabstract_vm_version.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -238,6 +238,10 @@ const char* Abstract_VM_Version::internal_vm_info_string() {\n         #define HOTSPOT_BUILD_COMPILER \"MS VC++ 17.0 (VS2022)\"\n       #elif _MSC_VER == 1931\n         #define HOTSPOT_BUILD_COMPILER \"MS VC++ 17.1 (VS2022)\"\n+      #elif _MSC_VER == 1932\n+        #define HOTSPOT_BUILD_COMPILER \"MS VC++ 17.2 (VS2022)\"\n+      #elif _MSC_VER == 1933\n+        #define HOTSPOT_BUILD_COMPILER \"MS VC++ 17.3 (VS2022)\"\n       #else\n         #define HOTSPOT_BUILD_COMPILER \"unknown MS VC++:\" XSTR(_MSC_VER)\n       #endif"
      },
      {
        "sha": "cbb13ba292b91d4e91b50a82a44110d721df5aeb",
        "filename": "src/hotspot/share/runtime/fieldDescriptor.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2FfieldDescriptor.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2FfieldDescriptor.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fruntime%2FfieldDescriptor.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -62,7 +62,7 @@ class fieldDescriptor {\n \n   AccessFlags access_flags()      const    { return _access_flags; }\n   oop loader()                    const;\n-  // Offset (in words) of field from start of instanceOop / Klass*\n+  // Offset (in bytes) of field from start of instanceOop / Klass*\n   inline int offset()             const;\n   Symbol* generic_signature()     const;\n   int index()                     const    { return _index; }"
      },
      {
        "sha": "1834b79109b1111ea946665df74992767f4ea97d",
        "filename": "src/hotspot/share/runtime/globals.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fglobals.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fglobals.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fruntime%2Fglobals.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1572,7 +1572,7 @@ const intx ObjectAlignmentInBytes = 8;\n           \"Stack space (bytes) required for JVM_InvokeMethod to complete\")  \\\n                                                                             \\\n   /* code cache parameters                                    */            \\\n-  develop_pd(uintx, CodeCacheSegmentSize,                                   \\\n+  product_pd(uintx, CodeCacheSegmentSize, EXPERIMENTAL,                     \\\n           \"Code cache segment size (in bytes) - smallest unit of \"          \\\n           \"allocation\")                                                     \\\n           range(1, 1024)                                                    \\"
      },
      {
        "sha": "621efe55f6f8a64c35ad18fc27da785c2b91bedc",
        "filename": "src/hotspot/share/runtime/os.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fos.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fos.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fruntime%2Fos.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -513,8 +513,6 @@ void os::initialize_jdk_signal_support(TRAPS) {\n       Threads::add(signal_thread);\n       Thread::start(signal_thread);\n     }\n-    // Handle ^BREAK\n-    os::signal(SIGBREAK, os::user_handler());\n   }\n }\n "
      },
      {
        "sha": "93fac19effee3255697294626b7cf1b4bd72e358",
        "filename": "src/hotspot/share/runtime/sweeper.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fsweeper.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fsweeper.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fruntime%2Fsweeper.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -406,11 +406,6 @@ void NMethodSweeper::sweep_code_cache() {\n     _peak_sweep_time = MAX2(_peak_sweep_time, _total_time_this_sweep);\n   }\n \n-  EventSweepCodeCache event(UNTIMED);\n-  if (event.should_commit()) {\n-    post_sweep_event(&event, sweep_start_counter, sweep_end_counter, (s4)_traversals, swept_count, flushed_count, zombified_count);\n-  }\n-\n #ifdef ASSERT\n   if(PrintMethodFlushing) {\n     tty->print_cr(\"### sweeper:      sweep time(\" JLONG_FORMAT \"): \", sweep_time.value());\n@@ -437,6 +432,15 @@ void NMethodSweeper::sweep_code_cache() {\n     CompileBroker::set_should_compile_new_jobs(CompileBroker::run_compilation);\n     log.debug(\"restart compiler\");\n     log_sweep(\"restart_compiler\");\n+    EventJITRestart event;\n+    event.set_freedMemory(freed_memory);\n+    event.set_codeCacheMaxCapacity(CodeCache::max_capacity());\n+    event.commit();\n+  }\n+\n+  EventSweepCodeCache event(UNTIMED);\n+  if (event.should_commit()) {\n+    post_sweep_event(&event, sweep_start_counter, sweep_end_counter, (s4)_traversals, swept_count, flushed_count, zombified_count);\n   }\n }\n "
      },
      {
        "sha": "b0e0059b16b29bb96557f4c0344133a82736aabb",
        "filename": "src/hotspot/share/runtime/synchronizer.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fsynchronizer.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fsynchronizer.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fruntime%2Fsynchronizer.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1056,10 +1056,13 @@ JavaThread* ObjectSynchronizer::get_lock_owner(ThreadsList * t_list, Handle h_ob\n \n // Visitors ...\n \n-void ObjectSynchronizer::monitors_iterate(MonitorClosure* closure) {\n+void ObjectSynchronizer::monitors_iterate(MonitorClosure* closure, JavaThread* thread) {\n   MonitorList::Iterator iter = _in_use_list.iterator();\n   while (iter.has_next()) {\n     ObjectMonitor* mid = iter.next();\n+    if (mid->owner() != thread) {\n+      continue;\n+    }\n     if (!mid->is_being_async_deflated() && mid->object_peek() != NULL) {\n       // Only process with closure if the object is set.\n \n@@ -1547,9 +1550,7 @@ class ReleaseJavaMonitorsClosure: public MonitorClosure {\n  public:\n   ReleaseJavaMonitorsClosure(JavaThread* thread) : _thread(thread) {}\n   void do_monitor(ObjectMonitor* mid) {\n-    if (mid->owner() == _thread) {\n-      (void)mid->complete_exit(_thread);\n-    }\n+    (void)mid->complete_exit(_thread);\n   }\n };\n \n@@ -1572,7 +1573,7 @@ void ObjectSynchronizer::release_monitors_owned_by_thread(JavaThread* current) {\n   assert(current == JavaThread::current(), \"must be current Java thread\");\n   NoSafepointVerifier nsv;\n   ReleaseJavaMonitorsClosure rjmc(current);\n-  ObjectSynchronizer::monitors_iterate(&rjmc);\n+  ObjectSynchronizer::monitors_iterate(&rjmc, current);\n   assert(!current->has_pending_exception(), \"Should not be possible\");\n   current->clear_pending_exception();\n }"
      },
      {
        "sha": "5a331e306eeb01fce5fa582fd88bc1d50033267c",
        "filename": "src/hotspot/share/runtime/synchronizer.hpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fsynchronizer.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fruntime%2Fsynchronizer.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fruntime%2Fsynchronizer.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -133,7 +133,7 @@ class ObjectSynchronizer : AllStatic {\n \n   // JNI detach support\n   static void release_monitors_owned_by_thread(JavaThread* current);\n-  static void monitors_iterate(MonitorClosure* m);\n+  static void monitors_iterate(MonitorClosure* m, JavaThread* thread);\n \n   // Initialize the gInflationLocks\n   static void initialize();"
      },
      {
        "sha": "e67f2d8a2a909b13e602bc8119e3c2316e601af6",
        "filename": "src/hotspot/share/services/mallocTracker.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fservices%2FmallocTracker.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fservices%2FmallocTracker.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fservices%2FmallocTracker.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -60,6 +60,15 @@ size_t MemoryCounter::peak_size() const {\n }\n #endif\n \n+// Total malloc invocation count\n+size_t MallocMemorySnapshot::total_count() const {\n+  size_t amount = 0;\n+  for (int index = 0; index < mt_number_of_types; index ++) {\n+    amount += _malloc[index].malloc_count();\n+  }\n+  return amount;\n+}\n+\n // Total malloc'd memory amount\n size_t MallocMemorySnapshot::total() const {\n   size_t amount = 0;"
      },
      {
        "sha": "74fbba3a51c04daf007b353f57a302a478895c0b",
        "filename": "src/hotspot/share/services/mallocTracker.hpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fservices%2FmallocTracker.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fservices%2FmallocTracker.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fservices%2FmallocTracker.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -153,6 +153,8 @@ class MallocMemorySnapshot : public ResourceObj {\n     return &_tracking_header;\n   }\n \n+  // Total malloc invocation count\n+  size_t total_count() const;\n   // Total malloc'd memory amount\n   size_t total() const;\n   // Total malloc'd memory used by arenas"
      },
      {
        "sha": "92f3d4da4c95939d66b1bd7164f2808d99c95c39",
        "filename": "src/hotspot/share/services/memReporter.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fservices%2FmemReporter.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fservices%2FmemReporter.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fservices%2FmemReporter.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -98,10 +98,12 @@ void MemReporterBase::print_virtual_memory_region(const char* type, address base\n \n void MemSummaryReporter::report() {\n   outputStream* out = output();\n-  size_t total_reserved_amount = _malloc_snapshot->total() +\n-    _vm_snapshot->total_reserved();\n-  size_t total_committed_amount = _malloc_snapshot->total() +\n-    _vm_snapshot->total_committed();\n+  const size_t total_malloced_bytes = _malloc_snapshot->total();\n+  const size_t total_mmap_reserved_bytes = _vm_snapshot->total_reserved();\n+  const size_t total_mmap_committed_bytes = _vm_snapshot->total_committed();\n+\n+  size_t total_reserved_amount = total_malloced_bytes + total_mmap_reserved_bytes;\n+  size_t total_committed_amount = total_malloced_bytes + total_mmap_committed_bytes;\n \n   // Overall total\n   out->print_cr(\"\\nNative Memory Tracking:\\n\");\n@@ -113,7 +115,14 @@ void MemSummaryReporter::report() {\n \n   out->print(\"Total: \");\n   print_total(total_reserved_amount, total_committed_amount);\n-  out->print(\"\\n\");\n+  out->cr();\n+  out->print_cr(\"       malloc: \" SIZE_FORMAT \"%s #\" SIZE_FORMAT,\n+                amount_in_current_scale(total_malloced_bytes), current_scale(),\n+                _malloc_snapshot->total_count());\n+  out->print(\"       mmap:   \");\n+  print_total(total_mmap_reserved_bytes, total_mmap_committed_bytes);\n+  out->cr();\n+  out->cr();\n \n   // Summary by memory type\n   for (int index = 0; index < mt_number_of_types; index ++) {"
      },
      {
        "sha": "7a143dbc73e0844b5500c20000528671f029b2f3",
        "filename": "src/hotspot/share/services/threadService.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 10,
        "changes": 16,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fservices%2FthreadService.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Fservices%2FthreadService.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Fservices%2FthreadService.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -622,18 +622,14 @@ void StackFrameInfo::print_on(outputStream* st) const {\n class InflatedMonitorsClosure: public MonitorClosure {\n private:\n   ThreadStackTrace* _stack_trace;\n-  Thread* _thread;\n public:\n-  InflatedMonitorsClosure(Thread* t, ThreadStackTrace* st) {\n-    _thread = t;\n+  InflatedMonitorsClosure(ThreadStackTrace* st) {\n     _stack_trace = st;\n   }\n   void do_monitor(ObjectMonitor* mid) {\n-    if (mid->owner() == _thread) {\n-      oop object = mid->object();\n-      if (!_stack_trace->is_owned_monitor_on_stack(object)) {\n-        _stack_trace->add_jni_locked_monitor(object);\n-      }\n+    oop object = mid->object();\n+    if (!_stack_trace->is_owned_monitor_on_stack(object)) {\n+      _stack_trace->add_jni_locked_monitor(object);\n     }\n   }\n };\n@@ -692,8 +688,8 @@ void ThreadStackTrace::dump_stack_at_safepoint(int maxDepth) {\n   if (_with_locked_monitors) {\n     // Iterate inflated monitors and find monitors locked by this thread\n     // not found in the stack\n-    InflatedMonitorsClosure imc(_thread, this);\n-    ObjectSynchronizer::monitors_iterate(&imc);\n+    InflatedMonitorsClosure imc(this);\n+    ObjectSynchronizer::monitors_iterate(&imc, _thread);\n   }\n }\n "
      },
      {
        "sha": "6c00013747121ba55b4325171c95333ba14a066f",
        "filename": "src/hotspot/share/utilities/powerOfTwo.hpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Futilities%2FpowerOfTwo.hpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fhotspot%2Fshare%2Futilities%2FpowerOfTwo.hpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fhotspot%2Fshare%2Futilities%2FpowerOfTwo.hpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -103,7 +103,8 @@ inline T round_down_power_of_2(T value) {\n template<typename T, ENABLE_IF(std::is_integral<T>::value)>\n inline T round_up_power_of_2(T value) {\n   assert(value > 0, \"Invalid value\");\n-  assert(value <= max_power_of_2<T>(), \"Overflow\");\n+  assert(value <= max_power_of_2<T>(), \"Overflowing maximum allowed power of two with \" UINT64_FORMAT_X,\n+         static_cast<uint64_t>(value));\n   if (is_power_of_2(value)) {\n     return value;\n   }"
      },
      {
        "sha": "8f0ac0102b0074b2d3e2bd69820cc6a59b4ed29e",
        "filename": "src/java.base/linux/classes/jdk/internal/platform/CgroupMetrics.java",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Flinux%2Fclasses%2Fjdk%2Finternal%2Fplatform%2FCgroupMetrics.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Flinux%2Fclasses%2Fjdk%2Finternal%2Fplatform%2FCgroupMetrics.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Flinux%2Fclasses%2Fjdk%2Finternal%2Fplatform%2FCgroupMetrics.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -121,7 +121,13 @@ public long getMemoryFailCount() {\n \n     @Override\n     public long getMemoryLimit() {\n-        return subsystem.getMemoryLimit();\n+        long subsMem = subsystem.getMemoryLimit();\n+        // Catch the cgroup memory limit exceeding host physical memory.\n+        // Treat this as unlimited.\n+        if (subsMem >= getTotalMemorySize0()) {\n+            return CgroupSubsystem.LONG_RETVAL_UNLIMITED;\n+        }\n+        return subsMem;\n     }\n \n     @Override\n@@ -178,5 +184,6 @@ public static Metrics getInstance() {\n     }\n \n     private static native boolean isUseContainerSupport();\n+    private static native long getTotalMemorySize0();\n \n }"
      },
      {
        "sha": "3af834e230165dd4700fcef933d779d21e4acd2f",
        "filename": "src/java.base/linux/classes/jdk/internal/platform/CgroupSubsystemFactory.java",
        "status": "modified",
        "additions": 19,
        "deletions": 25,
        "changes": 44,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Flinux%2Fclasses%2Fjdk%2Finternal%2Fplatform%2FCgroupSubsystemFactory.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Flinux%2Fclasses%2Fjdk%2Finternal%2Fplatform%2FCgroupSubsystemFactory.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Flinux%2Fclasses%2Fjdk%2Finternal%2Fplatform%2FCgroupSubsystemFactory.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -320,30 +320,11 @@ private static boolean amendCgroupInfos(String mntInfoLine,\n                         case MEMORY_CTRL: // fall-through\n                         case CPU_CTRL:\n                         case CPUACCT_CTRL:\n+                        case CPUSET_CTRL:\n                         case PIDS_CTRL:\n                         case BLKIO_CTRL: {\n                             CgroupInfo info = infos.get(controllerName);\n-                            assert info.getMountPoint() == null;\n-                            assert info.getMountRoot() == null;\n-                            info.setMountPoint(mountPath);\n-                            info.setMountRoot(mountRoot);\n-                            cgroupv1ControllerFound = true;\n-                            break;\n-                        }\n-                        case CPUSET_CTRL: {\n-                            CgroupInfo info = infos.get(controllerName);\n-                            if (info.getMountPoint() != null) {\n-                                // On some systems duplicate cpuset controllers get mounted in addition to\n-                                // the main cgroup controllers most likely under /sys/fs/cgroup. In that\n-                                // case pick the one under /sys/fs/cgroup and discard others.\n-                                if (!info.getMountPoint().startsWith(\"/sys/fs/cgroup\")) {\n-                                    info.setMountPoint(mountPath);\n-                                    info.setMountRoot(mountRoot);\n-                                }\n-                            } else {\n-                                info.setMountPoint(mountPath);\n-                                info.setMountRoot(mountRoot);\n-                            }\n+                            setMountPoints(info, mountPath, mountRoot);\n                             cgroupv1ControllerFound = true;\n                             break;\n                         }\n@@ -357,10 +338,7 @@ private static boolean amendCgroupInfos(String mntInfoLine,\n                     // All controllers have the same mount point and root mount\n                     // for unified hierarchy.\n                     for (CgroupInfo info: infos.values()) {\n-                        assert info.getMountPoint() == null;\n-                        assert info.getMountRoot() == null;\n-                        info.setMountPoint(mountPath);\n-                        info.setMountRoot(mountRoot);\n+                        setMountPoints(info, mountPath, mountRoot);\n                     }\n                 }\n                 cgroupv2ControllerFound = true;\n@@ -369,6 +347,22 @@ private static boolean amendCgroupInfos(String mntInfoLine,\n         return cgroupv1ControllerFound || cgroupv2ControllerFound;\n     }\n \n+    private static void setMountPoints(CgroupInfo info, String mountPath, String mountRoot) {\n+        if (info.getMountPoint() != null) {\n+            // On some systems duplicate controllers get mounted in addition to\n+            // the main cgroup controllers (which are under /sys/fs/cgroup). In that\n+            // case pick the main one and discard others as the limits\n+            // are associated with the ones in /sys/fs/cgroup.\n+            if (!info.getMountPoint().startsWith(\"/sys/fs/cgroup\")) {\n+                info.setMountPoint(mountPath);\n+                info.setMountRoot(mountRoot);\n+            }\n+        } else {\n+            info.setMountPoint(mountPath);\n+            info.setMountRoot(mountRoot);\n+        }\n+    }\n+\n     public static final class CgroupTypeResult {\n         private final boolean isCgroupV2;\n         private final boolean anyControllersEnabled;"
      },
      {
        "sha": "4eaac0c6dd483a2d5bc92f2054f96a99fed5dd61",
        "filename": "src/java.base/linux/native/libjava/CgroupMetrics.c",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Flinux%2Fnative%2Flibjava%2FCgroupMetrics.c",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Flinux%2Fnative%2Flibjava%2FCgroupMetrics.c",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Flinux%2Fnative%2Flibjava%2FCgroupMetrics.c?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -22,6 +22,7 @@\n  * or visit www.oracle.com if you need additional information or have any\n  * questions.\n  */\n+#include <unistd.h>\n \n #include \"jni.h\"\n #include \"jvm.h\"\n@@ -33,3 +34,10 @@ Java_jdk_internal_platform_CgroupMetrics_isUseContainerSupport(JNIEnv *env, jcla\n {\n     return JVM_IsUseContainerSupport();\n }\n+\n+JNIEXPORT jlong JNICALL\n+Java_jdk_internal_platform_CgroupMetrics_getTotalMemorySize0\n+  (JNIEnv *env, jclass ignored)\n+{\n+    return sysconf(_SC_PHYS_PAGES) * sysconf(_SC_PAGESIZE);\n+}"
      },
      {
        "sha": "905f61c4b123fdcf1b3736a3fd253aee0d0ce18d",
        "filename": "src/java.base/share/classes/java/lang/String.java",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FString.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FString.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FString.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -541,8 +541,7 @@ public String(byte[] bytes, int offset, int length, Charset charset) {\n                             offset++;\n                             continue;\n                         }\n-                        if ((b1 == (byte)0xc2 || b1 == (byte)0xc3) &&\n-                                offset + 1 < sl) {\n+                        if ((b1 & 0xfe) == 0xc2 && offset + 1 < sl) { // b1 either 0xc2 or 0xc3\n                             int b2 = bytes[offset + 1];\n                             if (!isNotContinuation(b2)) {\n                                 dst[dp++] = (byte)decode2(b1, b2);\n@@ -698,8 +697,7 @@ static String newStringUTF8NoRepl(byte[] bytes, int offset, int length) {\n                         offset++;\n                         continue;\n                     }\n-                    if ((b1 == (byte) 0xc2 || b1 == (byte) 0xc3) &&\n-                            offset + 1 < sl) {\n+                    if ((b1 & 0xfe) == 0xc2 && offset + 1 < sl) { // b1 either 0xc2 or 0xc3\n                         int b2 = bytes[offset + 1];\n                         if (!isNotContinuation(b2)) {\n                             dst[dp++] = (byte) decode2(b1, b2);"
      },
      {
        "sha": "4c2d5b230c537ff7be48fd232d9d60abfacaffa6",
        "filename": "src/java.base/share/classes/java/lang/StringConcatHelper.java",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FStringConcatHelper.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FStringConcatHelper.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Flang%2FStringConcatHelper.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -490,8 +490,11 @@ static byte[] newArrayWithSuffix(String suffix, long indexCoder) {\n     @ForceInline\n     static byte[] newArray(long indexCoder) {\n         byte coder = (byte)(indexCoder >> 32);\n-        int index = (int)indexCoder;\n-        return (byte[]) UNSAFE.allocateUninitializedArray(byte.class, index << coder);\n+        int index = ((int)indexCoder) << coder;\n+        if (index < 0) {\n+            throw new OutOfMemoryError(\"Overflow: String length out of range\");\n+        }\n+        return (byte[]) UNSAFE.allocateUninitializedArray(byte.class, index);\n     }\n \n     /**"
      },
      {
        "sha": "63023de8cb5604ed213af4ee202a2744bbcdb976",
        "filename": "src/java.base/share/classes/java/util/Base64.java",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FBase64.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FBase64.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FBase64.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -753,16 +753,15 @@ private int decodedOutLength(byte[] src, int sp, int sl) {\n          * chunks of the src that are of a favorable size for the specific\n          * processor it's running on.\n          *\n-         * If the intrinsic function does not process all of the bytes in\n-         * src, it must process a multiple of four of them, making the\n-         * returned destination length a multiple of three.\n-         *\n          * If any illegal base64 bytes are encountered in src by the\n          * intrinsic, the intrinsic must return the actual number of valid\n          * data bytes already written to dst.  Note that the '=' pad\n          * character is treated as an illegal Base64 character by\n          * decodeBlock, so it will not process a block of 4 bytes\n-         * containing pad characters.\n+         * containing pad characters.  However, MIME decoding ignores\n+         * illegal characters, so any intrinsic overriding decodeBlock\n+         * can choose how to handle illegal characters based on the isMIME\n+         * parameter.\n          *\n          * Given the parameters, no length check is possible on dst, so dst\n          * is assumed to be large enough to store the decoded bytes.\n@@ -779,10 +778,12 @@ private int decodedOutLength(byte[] src, int sp, int sl) {\n          *         the offset into dst array to begin writing\n          * @param  isURL\n          *         boolean, when true decode RFC4648 URL-safe base64 characters\n+         * @param  isMIME\n+         *         boolean, when true decode according to RFC2045 (ignore illegal chars)\n          * @return the number of destination data bytes produced\n          */\n         @IntrinsicCandidate\n-        private int decodeBlock(byte[] src, int sp, int sl, byte[] dst, int dp, boolean isURL) {\n+        private int decodeBlock(byte[] src, int sp, int sl, byte[] dst, int dp, boolean isURL, boolean isMIME) {\n             int[] base64 = isURL ? fromBase64URL : fromBase64;\n             int sl0 = sp + ((sl - sp) & ~0b11);\n             int new_dp = dp;\n@@ -810,12 +811,12 @@ private int decode0(byte[] src, int sp, int sl, byte[] dst) {\n \n             while (sp < sl) {\n                 if (shiftto == 18 && sp < sl - 4) {       // fast path\n-                    int dl = decodeBlock(src, sp, sl, dst, dp, isURL);\n+                    int dl = decodeBlock(src, sp, sl, dst, dp, isURL, isMIME);\n                     /*\n                      * Calculate how many characters were processed by how many\n                      * bytes of data were returned.\n                      */\n-                    int chars_decoded = (dl / 3) * 4;\n+                    int chars_decoded = ((dl + 2) / 3) * 4;\n \n                     sp += chars_decoded;\n                     dp += dl;"
      },
      {
        "sha": "cd8b2b6048fb60a32445aef0f7d22e92eb31f329",
        "filename": "src/java.base/share/classes/java/util/Optional.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptional.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptional.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptional.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -454,7 +454,7 @@ public int hashCode() {\n     @Override\n     public String toString() {\n         return value != null\n-            ? String.format(\"Optional[%s]\", value)\n+            ? (\"Optional[\" + value + \"]\")\n             : \"Optional.empty\";\n     }\n }"
      },
      {
        "sha": "752aaac1e547ed28f69cafa9fbd38106825316b1",
        "filename": "src/java.base/share/classes/java/util/OptionalDouble.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptionalDouble.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptionalDouble.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptionalDouble.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -328,7 +328,7 @@ public int hashCode() {\n     @Override\n     public String toString() {\n         return isPresent\n-                ? String.format(\"OptionalDouble[%s]\", value)\n+                ? (\"OptionalDouble[\" + value + \"]\")\n                 : \"OptionalDouble.empty\";\n     }\n }"
      },
      {
        "sha": "c1e62090c25c5e10bb635dc5066bd81598f37aa5",
        "filename": "src/java.base/share/classes/java/util/OptionalInt.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptionalInt.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptionalInt.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptionalInt.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -326,7 +326,7 @@ public int hashCode() {\n     @Override\n     public String toString() {\n         return isPresent\n-                ? String.format(\"OptionalInt[%s]\", value)\n+                ? (\"OptionalInt[\" + value + \"]\")\n                 : \"OptionalInt.empty\";\n     }\n }"
      },
      {
        "sha": "2c1171f86e9b763c7f63186113282b9a139b68d6",
        "filename": "src/java.base/share/classes/java/util/OptionalLong.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptionalLong.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptionalLong.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjava%2Futil%2FOptionalLong.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -326,7 +326,7 @@ public int hashCode() {\n     @Override\n     public String toString() {\n         return isPresent\n-                ? String.format(\"OptionalLong[%s]\", value)\n+                ? (\"OptionalLong[\" + value + \"]\")\n                 : \"OptionalLong.empty\";\n     }\n }"
      },
      {
        "sha": "a8a3ec16c3a920801ac018092b66530adeafbf30",
        "filename": "src/java.base/share/classes/javax/security/auth/Subject.java",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fsecurity%2Fauth%2FSubject.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fsecurity%2Fauth%2FSubject.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fsecurity%2Fauth%2FSubject.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -144,8 +144,8 @@ public final class Subject implements java.io.Serializable {\n      * has been set read-only before permitting subsequent modifications.\n      * The newly created Sets also prevent illegal modifications\n      * by ensuring that callers have sufficient permissions.  These Sets\n-     * also prohibit null elements, and attempts to add or query a null\n-     * element will result in a {@code NullPointerException}.\n+     * also prohibit null elements, and attempts to add, query, or remove\n+     * a null element will result in a {@code NullPointerException}.\n      *\n      * <p> To modify the Principals Set, the caller must have\n      * {@code AuthPermission(\"modifyPrincipals\")}.\n@@ -174,8 +174,8 @@ public Subject() {\n      * has been set read-only before permitting subsequent modifications.\n      * The newly created Sets also prevent illegal modifications\n      * by ensuring that callers have sufficient permissions.  These Sets\n-     * also prohibit null elements, and attempts to add or query a null\n-     * element will result in a {@code NullPointerException}.\n+     * also prohibit null elements, and attempts to add, query, or remove\n+     * a null element will result in a {@code NullPointerException}.\n      *\n      * <p> To modify the Principals Set, the caller must have\n      * {@code AuthPermission(\"modifyPrincipals\")}."
      },
      {
        "sha": "5b4f5178f2323596e10997973f2d851cedfdd259",
        "filename": "src/java.base/share/classes/javax/security/auth/login/LoginContext.java",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FLoginContext.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FLoginContext.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FLoginContext.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1998, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -691,13 +691,13 @@ private void invoke(String methodName) throws LoginException {\n         // - this can only be non-zero if methodName is LOGIN_METHOD\n \n         for (int i = moduleIndex; i < moduleStack.length; i++, moduleIndex++) {\n+            String name = moduleStack[i].entry.getLoginModuleName();\n             try {\n \n                 if (moduleStack[i].module == null) {\n \n                     // locate and instantiate the LoginModule\n                     //\n-                    String name = moduleStack[i].entry.getLoginModuleName();\n                     Set<Provider<LoginModule>> lmProviders;\n                     synchronized(providersCache){\n                         lmProviders = providersCache.get(contextClassLoader);\n@@ -780,16 +780,16 @@ private void invoke(String methodName) throws LoginException {\n                         clearState();\n \n                         if (debug != null)\n-                            debug.println(methodName + \" SUFFICIENT success\");\n+                            debug.println(name + \" \" + methodName + \" SUFFICIENT success\");\n                         return;\n                     }\n \n                     if (debug != null)\n-                        debug.println(methodName + \" success\");\n+                        debug.println(name + \" \" + methodName + \" success\");\n                     success = true;\n                 } else {\n                     if (debug != null)\n-                        debug.println(methodName + \" ignored\");\n+                        debug.println(name + \" \" + methodName + \" ignored\");\n                 }\n             } catch (Exception ite) {\n \n@@ -854,7 +854,7 @@ private void invoke(String methodName) throws LoginException {\n                     AppConfigurationEntry.LoginModuleControlFlag.REQUISITE) {\n \n                     if (debug != null)\n-                        debug.println(methodName + \" REQUISITE failure\");\n+                        debug.println(name + \" \" + methodName + \" REQUISITE failure\");\n \n                     // if REQUISITE, then immediately throw an exception\n                     if (methodName.equals(ABORT_METHOD) ||\n@@ -869,7 +869,7 @@ private void invoke(String methodName) throws LoginException {\n                     AppConfigurationEntry.LoginModuleControlFlag.REQUIRED) {\n \n                     if (debug != null)\n-                        debug.println(methodName + \" REQUIRED failure\");\n+                        debug.println(name + \" \" + methodName + \" REQUIRED failure\");\n \n                     // mark down that a REQUIRED module failed\n                     if (firstRequiredError == null)\n@@ -878,7 +878,7 @@ private void invoke(String methodName) throws LoginException {\n                 } else {\n \n                     if (debug != null)\n-                        debug.println(methodName + \" OPTIONAL failure\");\n+                        debug.println(name + \" \" + methodName + \" OPTIONAL failure\");\n \n                     // mark down that an OPTIONAL module failed\n                     if (firstError == null)"
      },
      {
        "sha": "3882404d3c9a8a9de81a1e25a71e02a25715fa19",
        "filename": "src/java.base/share/classes/javax/security/auth/spi/LoginModule.java",
        "status": "modified",
        "additions": 20,
        "deletions": 14,
        "changes": 34,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fsecurity%2Fauth%2Fspi%2FLoginModule.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fsecurity%2Fauth%2Fspi%2FLoginModule.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjavax%2Fsecurity%2Fauth%2Fspi%2FLoginModule.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1998, 2015, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -26,7 +26,6 @@\n package javax.security.auth.spi;\n \n import javax.security.auth.Subject;\n-import javax.security.auth.AuthPermission;\n import javax.security.auth.callback.*;\n import javax.security.auth.login.*;\n import java.util.Map;\n@@ -50,13 +49,13 @@\n  * a {@code Subject}, a {@code CallbackHandler}, shared\n  * {@code LoginModule} state, and LoginModule-specific options.\n  *\n- * The {@code Subject} represents the\n+ * <p> The {@code Subject} represents the\n  * {@code Subject} currently being authenticated and is updated\n  * with relevant Credentials if authentication succeeds.\n  * LoginModules use the {@code CallbackHandler} to\n  * communicate with users.  The {@code CallbackHandler} may be\n  * used to prompt for usernames and passwords, for example.\n- * Note that the {@code CallbackHandler} may be null.  LoginModules\n+ * Note that the {@code CallbackHandler} may be {@code null}.  LoginModules\n  * which absolutely require a {@code CallbackHandler} to authenticate\n  * the {@code Subject} may throw a {@code LoginException}.\n  * LoginModules optionally use the shared state to share information\n@@ -129,7 +128,7 @@\n public interface LoginModule {\n \n     /**\n-     * Initialize this LoginModule.\n+     * Initialize this {@code LoginModule}.\n      *\n      * <p> This method is called by the {@code LoginContext}\n      * after this {@code LoginModule} has been instantiated.\n@@ -163,12 +162,12 @@ void initialize(Subject subject, CallbackHandler callbackHandler,\n      * {@code Subject} information such\n      * as a username and password and then attempt to verify the password.\n      * This method saves the result of the authentication attempt\n-     * as private state within the LoginModule.\n+     * as private state within the {@code LoginModule}.\n      *\n      * @exception LoginException if the authentication fails\n      *\n-     * @return true if the authentication succeeded, or false if this\n-     *                  {@code LoginModule} should be ignored.\n+     * @return {@code true} if the authentication succeeded, or {@code false}\n+     *                  if this {@code LoginModule} should be ignored.\n      */\n     boolean login() throws LoginException;\n \n@@ -190,8 +189,8 @@ void initialize(Subject subject, CallbackHandler callbackHandler,\n      *\n      * @exception LoginException if the commit fails\n      *\n-     * @return true if this method succeeded, or false if this\n-     *                  {@code LoginModule} should be ignored.\n+     * @return {@code true} if this method succeeded, or {@code false}\n+     *                  if this {@code LoginModule} should be ignored.\n      */\n     boolean commit() throws LoginException;\n \n@@ -210,8 +209,8 @@ void initialize(Subject subject, CallbackHandler callbackHandler,\n      *\n      * @exception LoginException if the abort fails\n      *\n-     * @return true if this method succeeded, or false if this\n-     *                  {@code LoginModule} should be ignored.\n+     * @return {@code true} if this method succeeded, or {@code false}\n+     *                  if this {@code LoginModule} should be ignored.\n      */\n     boolean abort() throws LoginException;\n \n@@ -223,8 +222,15 @@ void initialize(Subject subject, CallbackHandler callbackHandler,\n      *\n      * @exception LoginException if the logout fails\n      *\n-     * @return true if this method succeeded, or false if this\n-     *                  {@code LoginModule} should be ignored.\n+     * @return {@code true} if this method succeeded, or {@code false}\n+     *                  if this {@code LoginModule} should be ignored.\n+     *\n+     * @implNote Implementations should check if a variable is {@code null}\n+     *      before removing it from the Principals or Credentials set\n+     *      of a {@code Subject}, otherwise a {@code NullPointerException}\n+     *      will be thrown as these sets {@linkplain Subject#Subject()\n+     *      prohibit null elements}. This is especially important if\n+     *      this method is called after a login failure.\n      */\n     boolean logout() throws LoginException;\n }"
      },
      {
        "sha": "8451b8cd751204df49edbb572b1b8c7942e45b5e",
        "filename": "src/java.base/share/classes/jdk/internal/loader/NativeLibraries.java",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjdk%2Finternal%2Floader%2FNativeLibraries.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fjdk%2Finternal%2Floader%2FNativeLibraries.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fjdk%2Finternal%2Floader%2FNativeLibraries.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -385,7 +385,21 @@ boolean open() {\n                 throw new InternalError(\"Native library \" + name + \" has been loaded\");\n             }\n \n-            return load(this, name, isBuiltin, isJNI, loadLibraryOnlyIfPresent);\n+            return load(this, name, isBuiltin, isJNI, throwExceptionIfFail());\n+        }\n+\n+        @SuppressWarnings(\"removal\")\n+        private boolean throwExceptionIfFail() {\n+            if (loadLibraryOnlyIfPresent) return true;\n+\n+            // If the file exists but fails to load, UnsatisfiedLinkException thrown by the VM\n+            // will include the error message from dlopen to provide diagnostic information\n+            return AccessController.doPrivileged(new PrivilegedAction<>() {\n+                public Boolean run() {\n+                    File file = new File(name);\n+                    return file.exists();\n+                }\n+            });\n         }\n     }\n "
      },
      {
        "sha": "07f1145e8d855dc3586af0465f92480b56c5b200",
        "filename": "src/java.base/share/classes/sun/security/pkcs12/PKCS12KeyStore.java",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs12%2FPKCS12KeyStore.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs12%2FPKCS12KeyStore.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs12%2FPKCS12KeyStore.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -2266,11 +2266,6 @@ public synchronized void engineLoad(InputStream stream, char[] password)\n                 /* Update existing KeyEntry in entries table */\n                 if (chain.size() > 0) {\n                     entry.chain = chain.toArray(new Certificate[chain.size()]);\n-                } else {\n-                    // Remove private key entries where there is no associated\n-                    // certs. Most likely the keystore is loaded with a null\n-                    // password.\n-                    entries.remove(entry);\n                 }\n             }\n         }"
      },
      {
        "sha": "b75491def4cf775ad66123ee310a0e98e0025a77",
        "filename": "src/java.base/share/classes/sun/security/ssl/ClientHello.java",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FClientHello.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FClientHello.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FClientHello.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -568,15 +568,15 @@ public byte[] produce(ConnectionContext context) throws IOException {\n                             \"No new session is allowed and \" +\n                             \"no existing session can be resumed\");\n                 }\n-\n-                if (chc.maximumActiveProtocol.useTLS13PlusSpec() &&\n-                        SSLConfiguration.useCompatibilityMode) {\n-                    // In compatibility mode, the TLS 1.3 legacy_session_id\n-                    // field MUST be non-empty, so a client not offering a\n-                    // pre-TLS 1.3 session MUST generate a new 32-byte value.\n-                    sessionId =\n+            }\n+            if (sessionId.length() == 0 &&\n+                    chc.maximumActiveProtocol.useTLS13PlusSpec() &&\n+                    SSLConfiguration.useCompatibilityMode) {\n+                // In compatibility mode, the TLS 1.3 legacy_session_id\n+                // field MUST be non-empty, so a client not offering a\n+                // pre-TLS 1.3 session MUST generate a new 32-byte value.\n+                sessionId =\n                         new SessionId(true, chc.sslContext.getSecureRandom());\n-                }\n             }\n \n             ProtocolVersion minimumVersion = ProtocolVersion.NONE;"
      },
      {
        "sha": "d267c2e6b467cd30109262928cceff5146c03ab9",
        "filename": "src/java.base/share/classes/sun/security/ssl/SSLConfiguration.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLConfiguration.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLConfiguration.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLConfiguration.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -97,7 +97,7 @@ final class SSLConfiguration implements Cloneable {\n     static final boolean allowLegacyMasterSecret =\n         Utilities.getBooleanProperty(\"jdk.tls.allowLegacyMasterSecret\", true);\n \n-    // Allow full handshake without Extended Master Secret extension.\n+    // Use TLS1.3 middlebox compatibility mode.\n     static final boolean useCompatibilityMode = Utilities.getBooleanProperty(\n             \"jdk.tls.client.useCompatibilityMode\", true);\n "
      },
      {
        "sha": "9ebb55fd86a09f6f130341a3b26c603890facecf",
        "filename": "src/java.base/share/classes/sun/security/ssl/SSLEngineImpl.java",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLEngineImpl.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLEngineImpl.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLEngineImpl.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -48,7 +48,7 @@\n import javax.net.ssl.SSLSession;\n \n /**\n- * Implementation of an non-blocking SSLEngine.\n+ * Implementation of a non-blocking SSLEngine.\n  *\n  * @author Brad Wetmore\n  */\n@@ -270,7 +270,7 @@ private SSLEngineResult writeRecord(\n             if (ciphertext == null && !conContext.isNegotiated &&\n                     conContext.isInboundClosed() &&\n                     hsStatus == HandshakeStatus.NEED_WRAP) {\n-                // Even the outboud is open, no futher data could be wrapped as:\n+                // Even the outbound is open, no further data could be wrapped as:\n                 //     1. the outbound is empty\n                 //     2. no negotiated connection\n                 //     3. the inbound has closed, cannot complete the handshake\n@@ -789,17 +789,17 @@ public void closeInbound() throws SSLException {\n             // Is it ready to close inbound?\n             //\n             // No exception if the initial handshake is not started.\n-            if (!conContext.isInputCloseNotified &&\n-                (conContext.isNegotiated ||\n-                    conContext.handshakeContext != null)) {\n-\n-                throw conContext.fatal(Alert.INTERNAL_ERROR,\n+            if (!conContext.isInputCloseNotified && (conContext.isNegotiated\n+                    || conContext.handshakeContext != null)) {\n+                throw new SSLException(\n                         \"closing inbound before receiving peer's close_notify\");\n             }\n-\n-            conContext.closeInbound();\n         } finally {\n-            engineLock.unlock();\n+            try {\n+                conContext.closeInbound();\n+            } finally {\n+                engineLock.unlock();\n+            }\n         }\n     }\n "
      },
      {
        "sha": "0a888f0557e7cbeea3d0beb6069e8e0a71417a76",
        "filename": "src/java.base/share/classes/sun/security/ssl/SSLSocketImpl.java",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLSocketImpl.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLSocketImpl.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLSocketImpl.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -639,8 +639,12 @@ private void duplexCloseOutput() throws IOException {\n             if (!conContext.protocolVersion.useTLS13PlusSpec()) {\n                 hasCloseReceipt = true;\n             } else {\n-                // Use a user_canceled alert for TLS 1.3 duplex close.\n-                useUserCanceled = true;\n+                // Do not use user_canceled workaround if the other side has\n+                // already half-closed the connection\n+                if (!conContext.isInboundClosed()) {\n+                    // Use a user_canceled alert for TLS 1.3 duplex close.\n+                    useUserCanceled = true;\n+                }\n             }\n         } else if (conContext.handshakeContext != null) {   // initial handshake\n             // Use user_canceled alert regardless the protocol versions.\n@@ -838,9 +842,10 @@ private void shutdownInput(\n         // No need to throw exception if the initial handshake is not started.\n         try {\n             if (checkCloseNotify && !conContext.isInputCloseNotified &&\n-                (conContext.isNegotiated || conContext.handshakeContext != null)) {\n-            throw new SSLException(\n-                    \"closing inbound before receiving peer's close_notify\");\n+                    (conContext.isNegotiated ||\n+                            conContext.handshakeContext != null)) {\n+                throw new SSLException(\n+                        \"closing inbound before receiving peer's close_notify\");\n             }\n         } finally {\n             conContext.closeInbound();"
      },
      {
        "sha": "b1c8d4b7b3c9e1ff886ec433a5f7091e30f658a5",
        "filename": "src/java.base/share/classes/sun/security/ssl/SSLSocketInputRecord.java",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLSocketInputRecord.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLSocketInputRecord.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FSSLSocketInputRecord.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -255,7 +255,11 @@ private Plaintext[] decodeInputRecord() throws IOException, BadPaddingException\n         // Decrypt the fragment\n         //\n         ByteBuffer fragment;\n+        recordLock.lock();\n         try {\n+            if (isClosed) {\n+                return null;\n+            }\n             Plaintext plaintext =\n                     readCipher.decrypt(contentType, recordBody, null);\n             fragment = plaintext.fragment;\n@@ -265,6 +269,8 @@ private Plaintext[] decodeInputRecord() throws IOException, BadPaddingException\n         } catch (GeneralSecurityException gse) {\n             throw (SSLProtocolException)(new SSLProtocolException(\n                     \"Unexpected exception\")).initCause(gse);\n+        } finally {\n+            recordLock.unlock();\n         }\n \n         if (contentType != ContentType.HANDSHAKE.id &&"
      },
      {
        "sha": "8317d9ae3cbc1baa4badc931ab37c3e3ef64e8df",
        "filename": "src/java.base/share/classes/sun/security/ssl/Utilities.java",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FUtilities.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FUtilities.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FUtilities.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -101,14 +101,19 @@ static List<SNIServerName> addToSNIServerNameList(\n      *         not look like a FQDN\n      */\n     private static SNIHostName rawToSNIHostName(String hostname) {\n-        SNIHostName sniHostName = null;\n+        // Is it a Fully-Qualified Domain Names (FQDN) ending with a dot?\n+        if (hostname != null && hostname.endsWith(\".\")) {\n+            // Remove the ending dot, which is not allowed in SNIHostName.\n+            hostname = hostname.substring(0, hostname.length() - 1);\n+        }\n+\n         if (hostname != null && hostname.indexOf('.') > 0 &&\n                 !hostname.endsWith(\".\") &&\n                 !IPAddressUtil.isIPv4LiteralAddress(hostname) &&\n                 !IPAddressUtil.isIPv6LiteralAddress(hostname)) {\n \n             try {\n-                sniHostName = new SNIHostName(hostname);\n+                return new SNIHostName(hostname);\n             } catch (IllegalArgumentException iae) {\n                 // don't bother to handle illegal host_name\n                 if (SSLLogger.isOn && SSLLogger.isOn(\"ssl\")) {\n@@ -118,7 +123,7 @@ private static SNIHostName rawToSNIHostName(String hostname) {\n             }\n         }\n \n-        return sniHostName;\n+        return null;\n     }\n \n     /**"
      },
      {
        "sha": "681bb25904b352da47468c630a42125834e879f3",
        "filename": "src/java.base/share/classes/sun/security/ssl/X509TrustManagerImpl.java",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FX509TrustManagerImpl.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FX509TrustManagerImpl.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fssl%2FX509TrustManagerImpl.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -404,6 +404,12 @@ static void checkIdentity(SSLSession session,\n \n         boolean identifiable = false;\n         String peerHost = session.getPeerHost();\n+        // Is it a Fully-Qualified Domain Names (FQDN) ending with a dot?\n+        if (peerHost != null && peerHost.endsWith(\".\")) {\n+            // Remove the ending dot, which is not allowed in SNIHostName.\n+            peerHost = peerHost.substring(0, peerHost.length() - 1);\n+        }\n+\n         if (!checkClientTrusted) {\n             List<SNIServerName> sniNames = getRequestedServerNames(session);\n             String sniHostName = getHostNameInSNI(sniNames);"
      },
      {
        "sha": "7b39927ea0be284ff6fa9f2cfe7eb66b726a0e10",
        "filename": "src/java.base/share/classes/sun/security/tools/keytool/CertAndKeyGen.java",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FCertAndKeyGen.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FCertAndKeyGen.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FCertAndKeyGen.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1996, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -160,7 +160,7 @@ public void generate(String name) {\n             }\n \n         } catch (Exception e) {\n-            throw new IllegalArgumentException(e.getMessage());\n+            throw new IllegalArgumentException(e.getMessage(), e);\n         }\n         generateInternal();\n     }\n@@ -176,7 +176,7 @@ public void generate(int keyBits) {\n                 keyGen.initialize(keyBits, prng);\n \n             } catch (Exception e) {\n-                throw new IllegalArgumentException(e.getMessage());\n+                throw new IllegalArgumentException(e.getMessage(), e);\n             }\n         }\n         generateInternal();\n@@ -349,7 +349,7 @@ public X509Certificate getSelfCertificate (X500Name myname, Date firstDate,\n \n         } catch (IOException e) {\n              throw new CertificateEncodingException(\"getSelfCert: \" +\n-                                                    e.getMessage());\n+                                                    e.getMessage(), e);\n         }\n     }\n "
      },
      {
        "sha": "575367a405b81374ebda0680bfa3c13d9d168e39",
        "filename": "src/java.base/share/classes/sun/security/tools/keytool/Main.java",
        "status": "modified",
        "additions": 418,
        "deletions": 88,
        "changes": 506,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FMain.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FMain.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FMain.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -31,10 +31,14 @@\n import java.security.*;\n import java.security.cert.Certificate;\n import java.security.cert.CertificateFactory;\n+import java.security.cert.CertPathValidatorException;\n+import java.security.cert.CertPathValidatorException.BasicReason;\n import java.security.cert.CertStoreException;\n import java.security.cert.CRL;\n import java.security.cert.X509Certificate;\n import java.security.cert.CertificateException;\n+import java.security.cert.CertificateParsingException;\n+import java.security.cert.TrustAnchor;\n import java.security.cert.URICertStoreParameters;\n \n \n@@ -60,6 +64,7 @@\n import java.util.Base64;\n \n import sun.security.pkcs12.PKCS12KeyStore;\n+import sun.security.provider.certpath.CertPathConstraintsParameters;\n import sun.security.util.ECKeySizeParameterSpec;\n import sun.security.util.KeyUtil;\n import sun.security.util.NamedCurve;\n@@ -83,6 +88,7 @@\n import sun.security.tools.PathList;\n import sun.security.util.DerValue;\n import sun.security.util.Pem;\n+import sun.security.validator.Validator;\n import sun.security.x509.*;\n \n import static java.security.KeyStore.*;\n@@ -178,6 +184,8 @@ public final class Main {\n     // Warnings on weak algorithms etc\n     private List<String> weakWarnings = new ArrayList<>();\n \n+    private Set<X509Certificate> trustedCerts = new HashSet<>();\n+\n     private static final DisabledAlgorithmConstraints DISABLED_CHECK =\n             new DisabledAlgorithmConstraints(\n                     DisabledAlgorithmConstraints.PROPERTY_CERTPATH_DISABLED_ALGS);\n@@ -1117,6 +1125,7 @@ && isKeyStoreRelated(command)\n             }\n         }\n \n+        KeyStore cakstore = buildTrustedCerts();\n         // -trustcacerts can be specified on -importcert, -printcert or -printcrl.\n         // Reset it so that warnings on CA cert will remain for other command.\n         if (command != IMPORTCERT && command != PRINTCERT\n@@ -1125,7 +1134,13 @@ && isKeyStoreRelated(command)\n         }\n \n         if (trustcacerts) {\n-            caks = KeyStoreUtil.getCacertsKeyStore();\n+            if (cakstore != null) {\n+                caks = cakstore;\n+            } else {\n+                // try to load cacerts again, and let exception propagate\n+                // if it cannot be loaded\n+                caks = KeyStoreUtil.getCacertsKeyStore();\n+            }\n         }\n \n         // Perform the specified command\n@@ -1482,7 +1497,9 @@ private void doGenCert(String alias, String sigAlgName, InputStream in, PrintStr\n         byte[] rawReq = Pem.decode(new String(sb));\n         PKCS10 req = new PKCS10(rawReq);\n \n-        checkWeak(rb.getString(\"the.certificate.request\"), req);\n+        CertPathConstraintsParameters cpcp = new CertPathConstraintsParameters(\n+                req.getSubjectPublicKeyInfo(), null, null);\n+        checkWeakConstraint(rb.getString(\"the.certificate.request\"), req, cpcp);\n \n         info.set(X509CertInfo.KEY, new CertificateX509Key(req.getSubjectPublicKeyInfo()));\n         info.set(X509CertInfo.SUBJECT,\n@@ -1541,8 +1558,11 @@ private void doGenCert(String alias, String sigAlgName, InputStream in, PrintStr\n             }\n         }\n \n-        checkWeak(rb.getString(\"the.issuer\"), keyStore.getCertificateChain(alias));\n-        checkWeak(rb.getString(\"the.generated.certificate\"), cert);\n+        checkWeakConstraint(rb.getString(\"the.issuer\"),\n+                keyStore.getCertificateChain(alias));\n+        cpcp = buildCertPathConstraint(cert, null);\n+        checkWeakConstraint(rb.getString(\"the.generated.certificate\"),\n+                cert, cpcp);\n     }\n \n     private void doGenCRL(PrintStream out)\n@@ -1591,7 +1611,10 @@ private void doGenCRL(PrintStream out)\n         } else {\n             out.write(crl.getEncodedInternal());\n         }\n-        checkWeak(rb.getString(\"the.generated.crl\"), crl, privateKey);\n+        CertPathConstraintsParameters cpcp = new CertPathConstraintsParameters(\n+                privateKey, null, null);\n+        checkWeakConstraint(rb.getString(\"the.generated.crl\"), crl, privateKey,\n+                cpcp);\n     }\n \n     /**\n@@ -1637,7 +1660,10 @@ private void doCertReq(String alias, String sigAlgName, PrintStream out)\n         request.encodeAndSign(subject, privKey, sigAlgName);\n         request.print(out);\n \n-        checkWeak(rb.getString(\"the.generated.certificate.request\"), request);\n+        CertPathConstraintsParameters cpcp = new CertPathConstraintsParameters(\n+                request.getSubjectPublicKeyInfo(), null, null);\n+        checkWeakConstraint(rb.getString(\"the.generated.certificate.request\"),\n+                request, cpcp);\n     }\n \n     /**\n@@ -1682,7 +1708,9 @@ private void doExportCert(String alias, PrintStream out)\n             throw new Exception(form.format(source));\n         }\n         dumpCert(cert, out);\n-        checkWeak(rb.getString(\"the.certificate\"), cert);\n+        CertPathConstraintsParameters cpcp =\n+                buildCertPathConstraint(cert, null);\n+        checkWeakConstraint(rb.getString(\"the.certificate\"), cert, cpcp);\n     }\n \n     /**\n@@ -2020,7 +2048,8 @@ private void doGenKeyPair(String alias, String dname, String keyAlgName,\n         } else {\n             finalChain = new Certificate[] { newCert };\n         }\n-        checkWeak(rb.getString(\"the.generated.certificate\"), finalChain);\n+        checkWeakConstraint(rb.getString(\"the.generated.certificate\"),\n+                finalChain);\n         keyStore.setKeyEntry(alias, privKey, keyPass, finalChain);\n     }\n \n@@ -2113,6 +2142,7 @@ private void doImportIdentityDatabase(InputStream in)\n     private void doPrintEntry(String label, String alias, PrintStream out)\n         throws Exception\n     {\n+        CertPathConstraintsParameters cpcp;\n         if (keyStore.containsAlias(alias) == false) {\n             MessageFormat form = new MessageFormat\n                 (rb.getString(\"Alias.alias.does.not.exist\"));\n@@ -2169,6 +2199,10 @@ private void doPrintEntry(String label, String alias, PrintStream out)\n                 if (verbose || rfc || debug) {\n                     out.println(rb.getString\n                         (\"Certificate.chain.length.\") + chain.length);\n+\n+                    X509Certificate[] xcerts = convertCerts(chain);\n+                    List<X509Certificate> certs = Arrays.asList(xcerts);\n+                    TrustAnchor anchor = findTrustAnchor(certs);\n                     for (int i = 0; i < chain.length; i ++) {\n                         MessageFormat form = new MessageFormat\n                                 (rb.getString(\"Certificate.i.1.\"));\n@@ -2181,14 +2215,26 @@ private void doPrintEntry(String label, String alias, PrintStream out)\n                         } else {\n                             dumpCert(chain[i], out);\n                         }\n-                        checkWeak(label, chain[i]);\n+\n+                        if (i == 0 &&\n+                                ((X509Certificate)chain[0]).\n+                                getBasicConstraints() == -1) {\n+                            // this is an EE\n+                            cpcp = buildCertPathConstraint((X509Certificate) chain[i], anchor);\n+                        } else {\n+                            cpcp = new CertPathConstraintsParameters(\n+                                    (X509Certificate)chain[i], null, anchor,\n+                                    null);\n+                        }\n+\n+                        checkWeakConstraint(label, chain[i], cpcp);\n                     }\n                 } else {\n                     // Print the digest of the user cert only\n                     out.println\n                         (rb.getString(\"Certificate.fingerprint.SHA.256.\") +\n                         getCertFingerPrint(\"SHA-256\", chain[0]));\n-                    checkWeak(label, chain);\n+                    checkWeakConstraint(label, chain);\n                 }\n             } else {\n                 out.println(rb.getString\n@@ -2217,7 +2263,8 @@ private void doPrintEntry(String label, String alias, PrintStream out)\n                 out.println(rb.getString(\"Certificate.fingerprint.SHA.256.\")\n                             + getCertFingerPrint(\"SHA-256\", cert));\n             }\n-            checkWeak(label, cert);\n+            cpcp = buildCertPathConstraint((X509Certificate)cert, null);\n+            checkWeakConstraint(label, cert, cpcp);\n         } else {\n             out.println(rb.getString(\"Unknown.Entry.Type\"));\n         }\n@@ -2444,7 +2491,9 @@ private int doImportKeyStoreSingle(KeyStore srckeystore, String alias)\n         try {\n             Certificate c = srckeystore.getCertificate(alias);\n             if (c != null) {\n-                checkWeak(\"<\" + newAlias + \">\", c);\n+                CertPathConstraintsParameters cpcp =\n+                        buildCertPathConstraint((X509Certificate)c, null);\n+                checkWeakConstraint(\"<\" + newAlias + \">\", c, cpcp);\n             }\n             keyStore.setEntry(newAlias, entry, pp);\n             // Place the check so that only successful imports are blocked.\n@@ -2641,23 +2690,29 @@ private void doPrintCRL(String src, PrintStream out)\n                 issuer = verifyCRL(caks, crl);\n                 if (issuer != null) {\n                     signer = caks.getCertificate(issuer);\n+                    CertPathConstraintsParameters cpcp =\n+                            buildCertPathConstraint((X509Certificate)signer,\n+                            null);\n                     out.printf(rb.getString(\n                             \"verified.by.s.in.s.weak\"),\n                             issuer,\n                             \"cacerts\",\n-                            withWeak(signer.getPublicKey()));\n+                            withWeakConstraint(signer.getPublicKey(), cpcp));\n                     out.println();\n                 }\n             }\n             if (issuer == null && keyStore != null) {\n                 issuer = verifyCRL(keyStore, crl);\n                 if (issuer != null) {\n                     signer = keyStore.getCertificate(issuer);\n+                    CertPathConstraintsParameters cpcp =\n+                            buildCertPathConstraint((X509Certificate)signer,\n+                            null);\n                     out.printf(rb.getString(\n                             \"verified.by.s.in.s.weak\"),\n                             issuer,\n                             \"keystore\",\n-                            withWeak(signer.getPublicKey()));\n+                            withWeakConstraint(signer.getPublicKey(), cpcp));\n                     out.println();\n                 }\n             }\n@@ -2674,7 +2729,15 @@ private void doPrintCRL(String src, PrintStream out)\n                 out.println(rb.getString\n                         (\"STARNN\"));\n             }\n-            checkWeak(rb.getString(\"the.crl\"), crl, signer == null ? null : signer.getPublicKey());\n+\n+            if (signer != null) {\n+                CertPathConstraintsParameters cpcp =\n+                        buildCertPathConstraint((X509Certificate)signer, null);\n+                checkWeakConstraint(rb.getString(\"the.crl\"), crl,\n+                        signer.getPublicKey(), cpcp);\n+            } else {\n+                checkWeak(rb.getString(\"the.crl\"), crl, null);\n+            }\n         }\n     }\n \n@@ -2720,10 +2783,12 @@ private void doPrintCertReq(InputStream in, PrintStream out)\n         PKCS10 req = new PKCS10(Pem.decode(new String(sb)));\n \n         PublicKey pkey = req.getSubjectPublicKeyInfo();\n+        CertPathConstraintsParameters cpcp =\n+                new CertPathConstraintsParameters(pkey, null, null);\n         out.printf(rb.getString(\"PKCS.10.with.weak\"),\n                 req.getSubjectName(),\n                 pkey.getFormat(),\n-                withWeak(pkey),\n+                withWeakConstraint(pkey, cpcp),\n                 withWeak(req.getSigAlg()));\n         for (PKCS10Attribute attr: req.getAttributes().getAttributes()) {\n             ObjectIdentifier oid = attr.getAttributeId();\n@@ -2747,7 +2812,12 @@ private void doPrintCertReq(InputStream in, PrintStream out)\n         if (debug) {\n             out.println(req);   // Just to see more, say, public key length...\n         }\n-        checkWeak(rb.getString(\"the.certificate.request\"), req);\n+\n+        CertPathConstraintsParameters cpcp1 =\n+                new CertPathConstraintsParameters(\n+                req.getSubjectPublicKeyInfo(), null, null);\n+        checkWeakConstraint(rb.getString(\"the.certificate.request\"), req,\n+                cpcp1);\n     }\n \n     /**\n@@ -2767,6 +2837,9 @@ private void printCertFromStream(InputStream in, PrintStream out)\n             throw new Exception(rb.getString(\"Empty.input\"));\n         }\n         Certificate[] certs = c.toArray(new Certificate[c.size()]);\n+        X509Certificate[] xcerts = convertCerts(certs);\n+        List<X509Certificate> chain = Arrays.asList(xcerts);\n+        TrustAnchor anchor = findTrustAnchor(chain);\n         for (int i=0; i<certs.length; i++) {\n             X509Certificate x509Cert = null;\n             try {\n@@ -2787,7 +2860,17 @@ private void printCertFromStream(InputStream in, PrintStream out)\n             if (i < (certs.length-1)) {\n                 out.println();\n             }\n-            checkWeak(oneInMany(rb.getString(\"the.certificate\"), i, certs.length), x509Cert);\n+            CertPathConstraintsParameters cpcp;\n+            if (i == 0 &&\n+                    x509Cert.getBasicConstraints() == -1) {\n+                // this is an EE\n+                cpcp = buildCertPathConstraint(x509Cert, anchor);\n+            } else {\n+                cpcp = new CertPathConstraintsParameters(x509Cert,\n+                        null, anchor, null);\n+            }\n+            checkWeakConstraint(oneInMany(rb.getString(\"the.certificate\"),\n+                    i, certs.length), x509Cert, cpcp);\n         }\n     }\n \n@@ -2845,6 +2928,23 @@ private static String oneInMany(String label, int i, int num) {\n         }\n     }\n \n+    private static String oneInManys(String label, int certNo, int certCnt, int signerNo,\n+        int signerCnt) {\n+        if (certCnt == 1 && signerCnt == 1) {\n+            return label;\n+        }\n+        if (certCnt > 1 && signerCnt == 1) {\n+            return String.format(rb.getString(\"one.in.many1\"), label, certNo);\n+        }\n+        if (certCnt == 1 && signerCnt > 1) {\n+            return String.format(rb.getString(\"one.in.many2\"), label, signerNo);\n+        }\n+        if (certCnt > 1 && signerCnt > 1) {\n+            return String.format(rb.getString(\"one.in.many3\"), label, certNo, signerNo);\n+        }\n+        return label;\n+    }\n+\n     private void doPrintCert(final PrintStream out) throws Exception {\n         if (jarfile != null) {\n             // reset \"jdk.certpath.disabledAlgorithms\" security property\n@@ -2853,7 +2953,7 @@ private void doPrintCert(final PrintStream out) throws Exception {\n \n             JarFile jf = new JarFile(jarfile, true);\n             Enumeration<JarEntry> entries = jf.entries();\n-            Set<CodeSigner> ss = new HashSet<>();\n+            LinkedHashSet<CodeSigner> ss = new LinkedHashSet<>();\n             byte[] buffer = new byte[8192];\n             int pos = 0;\n             while (entries.hasMoreElements()) {\n@@ -2870,48 +2970,83 @@ private void doPrintCert(final PrintStream out) throws Exception {\n                     for (CodeSigner signer: signers) {\n                         if (!ss.contains(signer)) {\n                             ss.add(signer);\n-                            out.printf(rb.getString(\"Signer.d.\"), ++pos);\n-                            out.println();\n-                            out.println();\n-                            out.println(rb.getString(\"Signature.\"));\n-                            out.println();\n-\n-                            List<? extends Certificate> certs\n-                                    = signer.getSignerCertPath().getCertificates();\n-                            int cc = 0;\n-                            for (Certificate cert: certs) {\n-                                X509Certificate x = (X509Certificate)cert;\n-                                if (rfc) {\n-                                    out.println(rb.getString(\"Certificate.owner.\") + x.getSubjectX500Principal() + \"\\n\");\n-                                    dumpCert(x, out);\n-                                } else {\n-                                    printX509Cert(x, out);\n-                                }\n-                                out.println();\n-                                checkWeak(oneInMany(rb.getString(\"the.certificate\"), cc++, certs.size()), x);\n-                            }\n-                            Timestamp ts = signer.getTimestamp();\n-                            if (ts != null) {\n-                                out.println(rb.getString(\"Timestamp.\"));\n-                                out.println();\n-                                certs = ts.getSignerCertPath().getCertificates();\n-                                cc = 0;\n-                                for (Certificate cert: certs) {\n-                                    X509Certificate x = (X509Certificate)cert;\n-                                    if (rfc) {\n-                                        out.println(rb.getString(\"Certificate.owner.\") + x.getSubjectX500Principal() + \"\\n\");\n-                                        dumpCert(x, out);\n-                                    } else {\n-                                        printX509Cert(x, out);\n-                                    }\n-                                    out.println();\n-                                    checkWeak(oneInMany(rb.getString(\"the.tsa.certificate\"), cc++, certs.size()), x);\n-                                }\n-                            }\n                         }\n                     }\n                 }\n             }\n+\n+            for (CodeSigner signer: ss) {\n+                out.printf(rb.getString(\"Signer.d.\"), ++pos);\n+                out.println();\n+                out.println();\n+\n+                List<? extends Certificate> certs\n+                        = signer.getSignerCertPath().getCertificates();\n+                @SuppressWarnings(\"unchecked\")\n+                List<X509Certificate> chain =\n+                        (List<X509Certificate>)certs;\n+                TrustAnchor anchor = findTrustAnchor(chain);\n+                CertPathConstraintsParameters cpcp;\n+                int cc = 0;\n+                for (Certificate cert: certs) {\n+                    out.printf(rb.getString(\"Certificate.d.\"), ++cc);\n+                    out.println();\n+                    X509Certificate x = (X509Certificate)cert;\n+                    if (rfc) {\n+                        out.println(rb.getString(\"Certificate.owner.\") + x.getSubjectX500Principal() + \"\\n\");\n+                        dumpCert(x, out);\n+                    } else {\n+                        printX509Cert(x, out);\n+                    }\n+                    out.println();\n+                    if (cc == 0 && x.getBasicConstraints() == -1) {\n+                        // this is an EE\n+                        cpcp = buildCertPathConstraint(x, anchor);\n+                    } else {\n+                        cpcp = new CertPathConstraintsParameters(\n+                                x, null, anchor, null);\n+                    }\n+                    checkWeakConstraint(oneInManys(rb.getString(\n+                            \"the.certificate\"), cc,\n+                            certs.size(), pos,\n+                            ss.size()), x, cpcp);\n+                }\n+                Timestamp ts = signer.getTimestamp();\n+                if (ts != null) {\n+                    out.println(rb.getString(\"Timestamp.\"));\n+                    out.println();\n+                    certs = ts.getSignerCertPath().getCertificates();\n+                    @SuppressWarnings(\"unchecked\")\n+                    List<X509Certificate> tschain =\n+                            (List<X509Certificate>)certs;\n+                    anchor = findTrustAnchor(tschain);\n+                    cc = 0;\n+                    for (Certificate cert: certs) {\n+                        out.printf(rb.getString(\"Certificate.d.\"), ++cc);\n+                        out.println();\n+                        X509Certificate x = (X509Certificate)cert;\n+                        if (rfc) {\n+                            out.println(rb.getString(\"Certificate.owner.\") + x.getSubjectX500Principal() + \"\\n\");\n+                            dumpCert(x, out);\n+                        } else {\n+                            printX509Cert(x, out);\n+                        }\n+                        out.println();\n+                        if (cc == 0 &&\n+                                x.getBasicConstraints() == -1) {\n+                            // this is an EE\n+                            cpcp = buildCertPathConstraint(x, anchor);\n+                        } else {\n+                            cpcp = new CertPathConstraintsParameters(\n+                                    x, null, anchor, null);\n+                        }\n+                        checkWeakConstraint(oneInManys(rb.getString(\n+                                \"the.tsa.certificate\"), cc,\n+                                certs.size(), pos,\n+                                ss.size()), x, cpcp);\n+                    }\n+                }\n+            }\n             jf.close();\n             if (ss.isEmpty()) {\n                 out.println(rb.getString(\"Not.a.signed.jar.file\"));\n@@ -2938,6 +3073,9 @@ private void doPrintCert(final PrintStream out) throws Exception {\n             }\n \n             int i = 0;\n+            @SuppressWarnings(\"unchecked\")\n+            List<X509Certificate> xcerts = (List<X509Certificate>)chain;\n+            TrustAnchor anchor = findTrustAnchor(xcerts);\n             for (Certificate cert : chain) {\n                 try {\n                     if (rfc) {\n@@ -2948,7 +3086,17 @@ private void doPrintCert(final PrintStream out) throws Exception {\n                         printX509Cert((X509Certificate)cert, out);\n                         out.println();\n                     }\n-                    checkWeak(oneInMany(rb.getString(\"the.certificate\"), i++, chain.size()), cert);\n+                    X509Certificate x = (X509Certificate)cert;\n+                    CertPathConstraintsParameters cpcp;\n+                    if (i == 0 && x.getBasicConstraints() == -1) {\n+                        // this is an EE\n+                        cpcp = buildCertPathConstraint(x, anchor);\n+                    } else {\n+                        cpcp = new CertPathConstraintsParameters(\n+                                x, null, anchor, null);\n+                    }\n+                    checkWeakConstraint(oneInMany(rb.getString(\n+                            \"the.certificate\"), i++, chain.size()), x, cpcp);\n                 } catch (Exception e) {\n                     if (debug) {\n                         e.printStackTrace();\n@@ -3172,8 +3320,11 @@ private boolean addTrustedCert(String alias, InputStream in)\n             throw new Exception(rb.getString(\"Input.not.an.X.509.certificate\"));\n         }\n \n+        CertPathConstraintsParameters cpcp =\n+                buildCertPathConstraint(cert, null);\n+\n         if (noprompt) {\n-            checkWeak(rb.getString(\"the.input\"), cert);\n+            checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n             keyStore.setCertificateEntry(alias, cert);\n             return true;\n         }\n@@ -3193,7 +3344,7 @@ private boolean addTrustedCert(String alias, InputStream in)\n                 (\"Certificate.already.exists.in.keystore.under.alias.trustalias.\"));\n             Object[] source = {trustalias};\n             System.err.println(form.format(source));\n-            checkWeak(rb.getString(\"the.input\"), cert);\n+            checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n             printWeakWarnings(true);\n             reply = getYesNoReply\n                 (rb.getString(\"Do.you.still.want.to.add.it.no.\"));\n@@ -3204,7 +3355,7 @@ private boolean addTrustedCert(String alias, InputStream in)\n                         (\"Certificate.already.exists.in.system.wide.CA.keystore.under.alias.trustalias.\"));\n                 Object[] source = {trustalias};\n                 System.err.println(form.format(source));\n-                checkWeak(rb.getString(\"the.input\"), cert);\n+                checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n                 printWeakWarnings(true);\n                 reply = getYesNoReply\n                         (rb.getString(\"Do.you.still.want.to.add.it.to.your.own.keystore.no.\"));\n@@ -3213,7 +3364,7 @@ private boolean addTrustedCert(String alias, InputStream in)\n                 // Print the cert and ask user if they really want to add\n                 // it to their keystore\n                 printX509Cert(cert, System.out);\n-                checkWeak(rb.getString(\"the.input\"), cert);\n+                checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n                 printWeakWarnings(true);\n                 reply = getYesNoReply\n                         (rb.getString(\"Trust.this.certificate.no.\"));\n@@ -3240,7 +3391,7 @@ private boolean addTrustedCert(String alias, InputStream in)\n             // Print the cert and ask user if they really want to add it to\n             // their keystore\n             printX509Cert(cert, System.out);\n-            checkWeak(rb.getString(\"the.input\"), cert);\n+            checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n             printWeakWarnings(true);\n             reply = getYesNoReply\n                 (rb.getString(\"Trust.this.certificate.no.\"));\n@@ -3380,6 +3531,21 @@ private char[] getKeyPasswd(String alias, String otherAlias,\n         return keyPass;\n     }\n \n+    private String withWeakConstraint(String alg,\n+            CertPathConstraintsParameters cpcp) {\n+        try {\n+            DISABLED_CHECK.permits(alg, cpcp, false);\n+        } catch (CertPathValidatorException e) {\n+            return String.format(rb.getString(\"with.disabled\"), alg);\n+        }\n+        try {\n+            LEGACY_CHECK.permits(alg, cpcp, false);\n+            return alg;\n+        } catch (CertPathValidatorException e) {\n+            return String.format(rb.getString(\"with.weak\"), alg);\n+        }\n+    }\n+\n     private String withWeak(String alg) {\n         if (DISABLED_CHECK.permits(SIG_PRIMITIVE_SET, alg, null)) {\n             if (LEGACY_CHECK.permits(SIG_PRIMITIVE_SET, alg, null)) {\n@@ -3406,21 +3572,24 @@ private String fullDisplayAlgName(Key key) {\n         return result;\n     }\n \n-    private String withWeak(Key key) {\n+    private String withWeakConstraint(Key key,\n+            CertPathConstraintsParameters cpcp) {\n         int kLen = KeyUtil.getKeySize(key);\n         String displayAlg = fullDisplayAlgName(key);\n-        if (DISABLED_CHECK.permits(SIG_PRIMITIVE_SET, key)) {\n-            if (LEGACY_CHECK.permits(SIG_PRIMITIVE_SET, key)) {\n-                if (kLen >= 0) {\n-                    return String.format(rb.getString(\"key.bit\"), kLen, displayAlg);\n-                } else {\n-                    return String.format(rb.getString(\"unknown.size.1\"), displayAlg);\n-                }\n+        try {\n+            DISABLED_CHECK.permits(key.getAlgorithm(), cpcp, true);\n+        } catch (CertPathValidatorException e) {\n+            return String.format(rb.getString(\"key.bit.disabled\"), kLen, displayAlg);\n+        }\n+        try {\n+            LEGACY_CHECK.permits(key.getAlgorithm(), cpcp, true);\n+            if (kLen >= 0) {\n+                return String.format(rb.getString(\"key.bit\"), kLen, displayAlg);\n             } else {\n-                return String.format(rb.getString(\"key.bit.weak\"), kLen, displayAlg);\n+                return String.format(rb.getString(\"unknown.size.1\"), displayAlg);\n             }\n-        } else {\n-            return String.format(rb.getString(\"key.bit.disabled\"), kLen, displayAlg);\n+        } catch (CertPathValidatorException e) {\n+            return String.format(rb.getString(\"key.bit.weak\"), kLen, displayAlg);\n         }\n     }\n \n@@ -3435,9 +3604,11 @@ private void printX509Cert(X509Certificate cert, PrintStream out)\n                 (rb.getString(\".PATTERN.printX509Cert.with.weak\"));\n         PublicKey pkey = cert.getPublicKey();\n         String sigName = cert.getSigAlgName();\n+        CertPathConstraintsParameters cpcp =\n+                buildCertPathConstraint(cert, null);\n         // No need to warn about sigalg of a trust anchor\n         if (!isTrustedCert(cert)) {\n-            sigName = withWeak(sigName);\n+            sigName = withWeakConstraint(sigName, cpcp);\n         }\n         Object[] source = {cert.getSubjectX500Principal().toString(),\n                         cert.getIssuerX500Principal().toString(),\n@@ -3447,7 +3618,7 @@ private void printX509Cert(X509Certificate cert, PrintStream out)\n                         getCertFingerPrint(\"SHA-1\", cert),\n                         getCertFingerPrint(\"SHA-256\", cert),\n                         sigName,\n-                        withWeak(pkey),\n+                        withWeakConstraint(pkey, cpcp),\n                         cert.getVersion()\n                         };\n         out.println(form.format(source));\n@@ -3771,7 +3942,7 @@ private Certificate[] validateReply(String alias,\n         throws Exception\n     {\n \n-        checkWeak(rb.getString(\"reply\"), replyCerts);\n+        checkWeakConstraint(rb.getString(\"reply\"), replyCerts);\n \n         // order the certs in the reply (bottom-up).\n         // we know that all certs in the reply are of type X.509, because\n@@ -3853,11 +4024,14 @@ private Certificate[] validateReply(String alias,\n                                  replyCerts.length);\n                 tmpCerts[tmpCerts.length-1] = root.snd;\n                 replyCerts = tmpCerts;\n-                checkWeak(String.format(fromKeyStore\n+                CertPathConstraintsParameters cpcp =\n+                        buildCertPathConstraint((X509Certificate)root.snd,\n+                        null);\n+                checkWeakConstraint(String.format(fromKeyStore\n                                 ? rb.getString(\"alias.in.keystore\")\n                                 : rb.getString(\"alias.in.cacerts\"),\n                                         root.fst),\n-                          root.snd);\n+                        root.snd, cpcp);\n             }\n         }\n         return replyCerts;\n@@ -3922,7 +4096,9 @@ private Certificate[] establishCertChain(Certificate userCert,\n                            (X509Certificate) certToVerify),\n                 chain, certs)) {\n             for (Pair<String,X509Certificate> p : chain) {\n-                checkWeak(p.fst, p.snd);\n+                CertPathConstraintsParameters cpcp =\n+                        buildCertPathConstraint(p.snd, null);\n+                checkWeakConstraint(p.fst, p.snd, cpcp);\n             }\n             Certificate[] newChain =\n                     new Certificate[chain.size()];\n@@ -4718,6 +4894,67 @@ private boolean isTrustedCert(Certificate cert) throws KeyStoreException {\n         }\n     }\n \n+    private void checkWeakConstraint(String label, String sigAlg, Key key,\n+            CertPathConstraintsParameters cpcp) throws Exception {\n+        if (sigAlg != null) {\n+            try {\n+                DISABLED_CHECK.permits(sigAlg, cpcp, false);\n+                try {\n+                    LEGACY_CHECK.permits(sigAlg, cpcp, false);\n+                } catch (CertPathValidatorException e) {\n+                    weakWarnings.add(String.format(\n+                            rb.getString(\"whose.sigalg.weak\"), label, sigAlg));\n+                }\n+            } catch (CertPathValidatorException e) {\n+                String eMessage = e.getMessage();\n+                if (eMessage.contains(\"denyAfter constraint check failed\") &&\n+                        e.getReason() == BasicReason.ALGORITHM_CONSTRAINED) {\n+                    String startSeparator = \"Constraint date: \";\n+                    int startSepPos = eMessage.indexOf(startSeparator);\n+                    String endSeparator = \"; params date\";\n+                    int endSepPos = eMessage.indexOf(endSeparator);\n+                    String denyAfterDate = null;\n+                    try {\n+                        denyAfterDate = eMessage.substring(startSepPos + startSeparator.length(),\n+                                endSepPos);\n+                    } catch (IndexOutOfBoundsException e1) {\n+                        throw new Exception(rb.getString(\n+                                \"Unable.to.parse.denyAfter.string.in.exception.message\"));\n+                    }\n+\n+                    weakWarnings.add(String.format(\n+                            rb.getString(\"whose.sigalg.usagesignedjar\"), label, sigAlg,\n+                            denyAfterDate));\n+                } else {\n+                    weakWarnings.add(String.format(\n+                            rb.getString(\"whose.sigalg.disabled\"), label, sigAlg));\n+                }\n+                if (debug) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+\n+        if (key != null) {\n+            try {\n+                DISABLED_CHECK.permits(key.getAlgorithm(), cpcp, true);\n+                try {\n+                    LEGACY_CHECK.permits(key.getAlgorithm(), cpcp, true);\n+                } catch (CertPathValidatorException e) {\n+                    weakWarnings.add(String.format(\n+                            rb.getString(\"whose.key.weak\"), label,\n+                            String.format(rb.getString(\"key.bit\"),\n+                            KeyUtil.getKeySize(key), fullDisplayAlgName(key))));\n+                }\n+            } catch (CertPathValidatorException e) {\n+                weakWarnings.add(String.format(\n+                        rb.getString(\"whose.key.disabled\"), label,\n+                        String.format(rb.getString(\"key.bit\"),\n+                        KeyUtil.getKeySize(key), fullDisplayAlgName(key))));\n+            }\n+        }\n+    }\n+\n     private void checkWeak(String label, String sigAlg, Key key) {\n         if (sigAlg != null) {\n             if (!DISABLED_CHECK.permits(SIG_PRIMITIVE_SET, sigAlg, null)) {\n@@ -4744,8 +4981,11 @@ private void checkWeak(String label, String sigAlg, Key key) {\n         }\n     }\n \n-    private void checkWeak(String label, Certificate[] certs)\n-            throws KeyStoreException {\n+    private void checkWeakConstraint(String label, Certificate[] certs)\n+            throws KeyStoreException, Exception {\n+        X509Certificate[] xcerts = convertCerts(certs);\n+        List<X509Certificate> chain = Arrays.asList(xcerts);\n+        TrustAnchor anchor = findTrustAnchor(chain);\n         for (int i = 0; i < certs.length; i++) {\n             Certificate cert = certs[i];\n             if (cert instanceof X509Certificate) {\n@@ -4754,23 +4994,43 @@ private void checkWeak(String label, Certificate[] certs)\n                 if (certs.length > 1) {\n                     fullLabel = oneInMany(label, i, certs.length);\n                 }\n-                checkWeak(fullLabel, xc);\n+\n+                CertPathConstraintsParameters cpcp = null;\n+                if (i == 0 && xc.getBasicConstraints() == -1) {\n+                    // this is an EE\n+                    cpcp = buildCertPathConstraint(xc, anchor);\n+                } else {\n+                    cpcp = new CertPathConstraintsParameters(\n+                            xc, null, anchor, null);\n+                }\n+                checkWeakConstraint(fullLabel, xc, cpcp);\n             }\n         }\n     }\n \n-    private void checkWeak(String label, Certificate cert)\n-            throws KeyStoreException {\n+    private void checkWeakConstraint(String label, Certificate cert,\n+            CertPathConstraintsParameters cpcp)\n+            throws KeyStoreException, Exception {\n         if (cert instanceof X509Certificate) {\n             X509Certificate xc = (X509Certificate)cert;\n             // No need to check the sigalg of a trust anchor\n             String sigAlg = isTrustedCert(cert) ? null : xc.getSigAlgName();\n-            checkWeak(label, sigAlg, xc.getPublicKey());\n+            checkWeakConstraint(label, sigAlg, xc.getPublicKey(), cpcp);\n         }\n     }\n \n-    private void checkWeak(String label, PKCS10 p10) {\n-        checkWeak(label, p10.getSigAlg(), p10.getSubjectPublicKeyInfo());\n+    private void checkWeakConstraint(String label, PKCS10 p10,\n+            CertPathConstraintsParameters cpcp) throws Exception {\n+        checkWeakConstraint(label, p10.getSigAlg(),\n+                p10.getSubjectPublicKeyInfo(), cpcp);\n+    }\n+\n+    private void checkWeakConstraint(String label, CRL crl, Key key,\n+            CertPathConstraintsParameters cpcp) throws Exception {\n+        if (crl instanceof X509CRLImpl) {\n+            X509CRLImpl impl = (X509CRLImpl)crl;\n+            checkWeakConstraint(label, impl.getSigAlgName(), key, cpcp);\n+        }\n     }\n \n     private void checkWeak(String label, CRL crl, Key key) {\n@@ -4780,6 +5040,76 @@ private void checkWeak(String label, CRL crl, Key key) {\n         }\n     }\n \n+    private KeyStore buildTrustedCerts() {\n+        KeyStore caks = null;\n+        try {\n+            caks = KeyStoreUtil.getCacertsKeyStore();\n+            if (caks != null) {\n+                Enumeration<String> aliases = caks.aliases();\n+                while (aliases.hasMoreElements()) {\n+                    String a = aliases.nextElement();\n+                    try {\n+                        trustedCerts.add((X509Certificate)caks.getCertificate(a));\n+                    } catch (Exception e2) {\n+                        // ignore, if the keystore has not been loaded/initialized properly\n+                    }\n+                }\n+            }\n+        } catch (Exception e) {\n+            // Ignore, if cacerts cannot be loaded\n+        }\n+        return caks;\n+    }\n+\n+    private TrustAnchor findTrustAnchor(List<X509Certificate> chain) {\n+        if (chain.isEmpty()) {\n+            return null;\n+        }\n+\n+        X509Certificate last = chain.get(chain.size() - 1);\n+        Optional<X509Certificate> trusted =\n+                trustedCerts.stream()\n+                        .filter(c -> c.getSubjectX500Principal().equals(last.getIssuerX500Principal()))\n+                        .findFirst();\n+        return trusted.isPresent() ? new TrustAnchor(trusted.get(), null) : null;\n+    }\n+\n+    private X509Certificate[] convertCerts(Certificate[] certs) {\n+        X509Certificate[] xcerts = new X509Certificate[certs.length];\n+\n+        for (int i = 0; i < certs.length; i++) {\n+            if (certs[i] instanceof X509Certificate) {\n+                xcerts[i] = (X509Certificate) certs[i];\n+            }\n+        }\n+        return xcerts;\n+    }\n+\n+    private CertPathConstraintsParameters buildCertPathConstraint(\n+        X509Certificate xcert, TrustAnchor anchor) throws Exception{\n+        List<String> eku = xcert.getExtendedKeyUsage();\n+        if (eku == null) {\n+            return new CertPathConstraintsParameters(xcert, null,\n+                    anchor, null);\n+        }\n+\n+        if (eku.contains(KnownOIDs.codeSigning.value())) {\n+            return new CertPathConstraintsParameters(xcert,\n+                    Validator.VAR_CODE_SIGNING, anchor, null);\n+        } else if (eku.contains(KnownOIDs.clientAuth.value())) {\n+            return new CertPathConstraintsParameters(xcert,\n+                    Validator.VAR_TLS_CLIENT, anchor, null);\n+        } else if (eku.contains(KnownOIDs.serverAuth.value())) {\n+            return new CertPathConstraintsParameters(xcert,\n+                    Validator.VAR_TLS_SERVER, anchor, null);\n+        } else if (eku.contains(KnownOIDs.KP_TimeStamping.value())) {\n+            return new CertPathConstraintsParameters(xcert,\n+                    Validator.VAR_TSA_SERVER, anchor, null);\n+        }\n+        return new CertPathConstraintsParameters(xcert, Validator.VAR_GENERIC,\n+                anchor, null);\n+    }\n+\n     private void printWeakWarnings(boolean newLine) {\n         if (!weakWarnings.isEmpty() && !nowarn) {\n             System.err.println(\"\\nWarning:\");"
      },
      {
        "sha": "313538ebf2197dd4796fada08496a3673414b43b",
        "filename": "src/java.base/share/classes/sun/security/tools/keytool/Resources.java",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FResources.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FResources.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Ftools%2Fkeytool%2FResources.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2000, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -396,8 +396,8 @@ public class Resources extends java.util.ListResourceBundle {\n         {\".WARNING.WARNING.WARNING.\",\n             \"*****************  WARNING WARNING WARNING  *****************\"},\n         {\"Signer.d.\", \"Signer #%d:\"},\n+        {\"Certificate.d.\", \"Certificate #%d:\"},\n         {\"Timestamp.\", \"Timestamp:\"},\n-        {\"Signature.\", \"Signature:\"},\n         {\"Certificate.owner.\", \"Certificate owner: \"},\n         {\"Not.a.signed.jar.file\", \"Not a signed jar file\"},\n         {\"No.certificate.from.the.SSL.server\",\n@@ -464,6 +464,9 @@ public class Resources extends java.util.ListResourceBundle {\n         {\"the.input\", \"The input\"},\n         {\"reply\", \"Reply\"},\n         {\"one.in.many\", \"%1$s #%2$d of %3$d\"},\n+        {\"one.in.many1\", \"%1$s #%2$d\"},\n+        {\"one.in.many2\", \"%1$s of signer #%2$d\"},\n+        {\"one.in.many3\", \"%1$s #%2$d of signer #%3$d\"},\n         {\"alias.in.cacerts\", \"Issuer <%s> in cacerts\"},\n         {\"alias.in.keystore\", \"Issuer <%s>\"},\n         {\"with.weak\", \"%s (weak)\"},\n@@ -479,6 +482,8 @@ public class Resources extends java.util.ListResourceBundle {\n                         \"Subject: %1$s\\nFormat: %2$s\\nPublic Key: %3$s\\nSignature algorithm: %4$s\\n\"},\n         {\"verified.by.s.in.s.weak\", \"Verified by %1$s in %2$s with a %3$s\"},\n         {\"whose.sigalg.disabled\", \"%1$s uses the %2$s signature algorithm which is considered a security risk and is disabled.\"},\n+        {\"whose.sigalg.usagesignedjar\", \"%1$s uses the %2$s signature algorithm which is considered a security risk and cannot be used to sign JARs after %3$s.\"},\n+        {\"Unable.to.parse.denyAfter.string.in.exception.message\", \"Unable to parse denyAfter date string in exception message\"},\n         {\"whose.sigalg.weak\", \"%1$s uses the %2$s signature algorithm which is considered a security risk. This algorithm will be disabled in a future update.\"},\n         {\"whose.key.disabled\", \"%1$s uses a %2$s which is considered a security risk and is disabled.\"},\n         {\"whose.key.weak\", \"%1$s uses a %2$s which is considered a security risk. This key size will be disabled in a future update.\"},"
      },
      {
        "sha": "41ea669613d0d35b1ef1bd1c52c9a3cb21734029",
        "filename": "src/java.base/share/classes/sun/security/util/DisabledAlgorithmConstraints.java",
        "status": "modified",
        "additions": 21,
        "deletions": 31,
        "changes": 52,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FDisabledAlgorithmConstraints.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FDisabledAlgorithmConstraints.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Futil%2FDisabledAlgorithmConstraints.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -40,9 +40,12 @@\n import java.security.spec.MGF1ParameterSpec;\n import java.security.spec.NamedParameterSpec;\n import java.security.spec.PSSParameterSpec;\n+import java.time.DateTimeException;\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.time.ZoneId;\n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Calendar;\n import java.util.Date;\n import java.util.HashMap;\n import java.util.HashSet;\n@@ -52,7 +55,6 @@\n import java.util.Set;\n import java.util.Collection;\n import java.util.StringTokenizer;\n-import java.util.TimeZone;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.regex.Pattern;\n import java.util.regex.Matcher;\n@@ -700,41 +702,30 @@ public void permits(ConstraintsParameters cp)\n      * timezone.\n      */\n     private static class DenyAfterConstraint extends Constraint {\n-        private Date denyAfterDate;\n+        private ZonedDateTime zdt;\n+        private Instant denyAfterDate;\n \n         DenyAfterConstraint(String algo, int year, int month, int day) {\n-            Calendar c;\n \n             algorithm = algo;\n \n             if (debug != null) {\n-                debug.println(\"DenyAfterConstraint read in as:  year \" +\n+                debug.println(\"DenyAfterConstraint read in as: year \" +\n                         year + \", month = \" + month + \", day = \" + day);\n             }\n \n-            c = new Calendar.Builder().setTimeZone(TimeZone.getTimeZone(\"GMT\"))\n-                    .setDate(year, month - 1, day).build();\n-\n-            if (year > c.getActualMaximum(Calendar.YEAR) ||\n-                    year < c.getActualMinimum(Calendar.YEAR)) {\n-                throw new IllegalArgumentException(\n-                        \"Invalid year given in constraint: \" + year);\n-            }\n-            if ((month - 1) > c.getActualMaximum(Calendar.MONTH) ||\n-                    (month - 1) < c.getActualMinimum(Calendar.MONTH)) {\n-                throw new IllegalArgumentException(\n-                        \"Invalid month given in constraint: \" + month);\n-            }\n-            if (day > c.getActualMaximum(Calendar.DAY_OF_MONTH) ||\n-                    day < c.getActualMinimum(Calendar.DAY_OF_MONTH)) {\n+            try {\n+                zdt = ZonedDateTime\n+                    .of(year, month, day, 0, 0, 0, 0, ZoneId.of(\"GMT\"));\n+                denyAfterDate = zdt.toInstant();\n+            } catch (DateTimeException dte) {\n                 throw new IllegalArgumentException(\n-                        \"Invalid Day of Month given in constraint: \" + day);\n+                    \"Invalid denyAfter date\", dte);\n             }\n \n-            denyAfterDate = c.getTime();\n             if (debug != null) {\n                 debug.println(\"DenyAfterConstraint date set to: \" +\n-                        denyAfterDate);\n+                        zdt.toLocalDate());\n             }\n         }\n \n@@ -749,23 +740,22 @@ private static class DenyAfterConstraint extends Constraint {\n         @Override\n         public void permits(ConstraintsParameters cp)\n                 throws CertPathValidatorException {\n-            Date currentDate;\n-            String errmsg;\n+            Instant currentDate;\n \n             if (cp.getDate() != null) {\n-                currentDate = cp.getDate();\n+                currentDate = cp.getDate().toInstant();\n             } else {\n-                currentDate = new Date();\n+                currentDate = Instant.now();\n             }\n \n-            if (!denyAfterDate.after(currentDate)) {\n+            if (!denyAfterDate.isAfter(currentDate)) {\n                 if (next(cp)) {\n                     return;\n                 }\n                 throw new CertPathValidatorException(\n                         \"denyAfter constraint check failed: \" + algorithm +\n                         \" used with Constraint date: \" +\n-                        denyAfterDate + \"; params date: \" +\n+                        zdt.toLocalDate() + \"; params date: \" +\n                         currentDate + cp.extendedExceptionMsg(),\n                         null, null, -1, BasicReason.ALGORITHM_CONSTRAINED);\n             }\n@@ -784,7 +774,7 @@ public boolean permits(Key key) {\n                 debug.println(\"DenyAfterConstraints.permits(): \" + algorithm);\n             }\n \n-            return denyAfterDate.after(new Date());\n+            return denyAfterDate.isAfter(Instant.now());\n         }\n     }\n "
      },
      {
        "sha": "6f6e190efcd0e33894a4dbb5bb622b3efc93e408",
        "filename": "src/java.base/share/classes/sun/util/calendar/ZoneInfoFile.java",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Futil%2Fcalendar%2FZoneInfoFile.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Futil%2Fcalendar%2FZoneInfoFile.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Futil%2Fcalendar%2FZoneInfoFile.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -574,12 +574,8 @@ private static ZoneInfo getZoneInfo(String zoneId,\n                     // we can then pass in the dom = -1, dow > 0 into ZoneInfo\n                     //\n                     // hacking, assume the >=24 is the result of ZRB optimization for\n-                    // \"last\", it works for now. From tzdata2020d this hacking\n-                    // will not work for Asia/Gaza and Asia/Hebron which follow\n-                    // Palestine DST rules.\n-                    if (dom < 0 || dom >= 24 &&\n-                                   !(zoneId.equals(\"Asia/Gaza\") ||\n-                                     zoneId.equals(\"Asia/Hebron\"))) {\n+                    // \"last\", it works for now.\n+                    if (dom < 0 || dom >= 24) {\n                         params[1] = -1;\n                         params[2] = toCalendarDOW[dow];\n                     } else {\n@@ -601,7 +597,6 @@ private static ZoneInfo getZoneInfo(String zoneId,\n                     params[7] = 0;\n                 } else {\n                     // hacking: see comment above\n-                    // No need of hacking for Asia/Gaza and Asia/Hebron from tz2021e\n                     if (dom < 0 || dom >= 24) {\n                         params[6] = -1;\n                         params[7] = toCalendarDOW[dow];"
      },
      {
        "sha": "bf7918659aef3334977284f05cc678ad8257db58",
        "filename": "src/java.base/share/classes/sun/util/resources/TimeZoneNames.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2FTimeZoneNames.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2FTimeZoneNames.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2FTimeZoneNames.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1996, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -429,7 +429,8 @@ protected final Object[][] getContents() {\n                                               \"French Guiana Summer Time\", \"GFST\",\n                                               \"French Guiana Time\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -518,7 +519,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"Suriname Time\", \"SRT\","
      },
      {
        "sha": "55d6fbcf42a4f552af6ce8443a1f70ed465419d6",
        "filename": "src/java.base/share/native/libverify/check_code.c",
        "status": "modified",
        "additions": 30,
        "deletions": 21,
        "changes": 51,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fnative%2Flibverify%2Fcheck_code.c",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fshare%2Fnative%2Flibverify%2Fcheck_code.c",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fshare%2Fnative%2Flibverify%2Fcheck_code.c?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -468,7 +468,8 @@ static void CCout_of_memory (context_type *);\n /* Because we can longjmp any time, we need to be very careful about\n  * remembering what needs to be freed. */\n \n-static void check_and_push(context_type *context, const void *ptr, int kind);\n+static void check_and_push_malloc_block(context_type *context, void *ptr);\n+static void check_and_push_string_utf(context_type *context, const char *ptr);\n static void pop_and_free(context_type *context);\n \n static int signature_to_args_size(const char *method_signature);\n@@ -604,7 +605,7 @@ class_to_ID(context_type *context, jclass cb, jboolean loadable)\n     unsigned short *pID;\n     const char *name = JVM_GetClassNameUTF(env, cb);\n \n-    check_and_push(context, name, VM_STRING_UTF);\n+    check_and_push_string_utf(context, name);\n     hash = class_hash_fun(name);\n     pID = &(class_hash->table[hash % HASH_TABLE_SIZE]);\n     while (*pID) {\n@@ -939,10 +940,10 @@ read_all_code(context_type* context, jclass cb, int num_methods,\n     int i;\n \n     lengths = malloc(sizeof(int) * num_methods);\n-    check_and_push(context, lengths, VM_MALLOC_BLK);\n+    check_and_push_malloc_block(context, lengths);\n \n     code = malloc(sizeof(unsigned char*) * num_methods);\n-    check_and_push(context, code, VM_MALLOC_BLK);\n+    check_and_push_malloc_block(context, code);\n \n     *(lengths_addr) = lengths;\n     *(code_addr) = code;\n@@ -951,7 +952,7 @@ read_all_code(context_type* context, jclass cb, int num_methods,\n         lengths[i] = JVM_GetMethodIxByteCodeLength(context->env, cb, i);\n         if (lengths[i] > 0) {\n             code[i] = malloc(sizeof(unsigned char) * (lengths[i] + 1));\n-            check_and_push(context, code[i], VM_MALLOC_BLK);\n+            check_and_push_malloc_block(context, code[i]);\n             JVM_GetMethodIxByteCode(context->env, cb, i, code[i]);\n         } else {\n             code[i] = NULL;\n@@ -1305,7 +1306,7 @@ verify_opcode_operands(context_type *context, unsigned int inumber, int offset)\n         /* Make sure the constant pool item is the right type. */\n         verify_constant_pool_type(context, key, kind);\n         methodname = JVM_GetCPMethodNameUTF(env, cb, key);\n-        check_and_push(context, methodname, VM_STRING_UTF);\n+        check_and_push_string_utf(context, methodname);\n         is_constructor = !strcmp(methodname, \"<init>\");\n         is_internal = methodname[0] == '<';\n         pop_and_free(context);\n@@ -1354,7 +1355,7 @@ verify_opcode_operands(context_type *context, unsigned int inumber, int offset)\n             unsigned int args2;\n             const char *signature =\n                 JVM_GetCPMethodSignatureUTF(env, context->class, key);\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n             args1 = signature_to_args_size(signature) + 1;\n             args2 = code[offset + 3];\n             if (args1 != args2) {\n@@ -1652,7 +1653,7 @@ initialize_exception_table(context_type *context)\n             classname = JVM_GetCPClassNameUTF(env,\n                                               context->class,\n                                               einfo.catchType);\n-            check_and_push(context, classname, VM_STRING_UTF);\n+            check_and_push_string_utf(context, classname);\n             stack_item->item = make_class_info_from_name(context, classname);\n             if (!isAssignableTo(context,\n                                 stack_item->item,\n@@ -1807,7 +1808,7 @@ initialize_dataflow(context_type *context)\n         }\n     }\n     signature = JVM_GetMethodIxSignatureUTF(env, cb, mi);\n-    check_and_push(context, signature, VM_STRING_UTF);\n+    check_and_push_string_utf(context, signature);\n     /* Fill in each of the arguments into the registers. */\n     for (p = signature + 1; *p != JVM_SIGNATURE_ENDFUNC; ) {\n         char fieldchar = signature_to_fieldtype(context, &p, &full_info);\n@@ -2050,7 +2051,7 @@ pop_stack(context_type *context, unsigned int inumber, stack_info_type *new_stac\n                                            context->class,\n                                            operand);\n             char *ip = buffer;\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n #ifdef DEBUG\n             if (verify_verbose) {\n                 print_formatted_fieldname(context, operand);\n@@ -2076,7 +2077,7 @@ pop_stack(context_type *context, unsigned int inumber, stack_info_type *new_stac\n                                             operand);\n             char *ip = buffer;\n             const char *p;\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n #ifdef DEBUG\n             if (verify_verbose) {\n                 print_formatted_methodname(context, operand);\n@@ -2376,7 +2377,7 @@ pop_stack(context_type *context, unsigned int inumber, stack_info_type *new_stac\n                                             operand);\n             int item;\n             const char *p;\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n             if (opcode == JVM_OPC_invokestatic) {\n                 item = 0;\n             } else if (opcode == JVM_OPC_invokeinit) {\n@@ -2758,7 +2759,7 @@ push_stack(context_type *context, unsigned int inumber, stack_info_type *new_sta\n             const char *signature = JVM_GetCPFieldSignatureUTF(context->env,\n                                                                context->class,\n                                                                operand);\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n #ifdef DEBUG\n             if (verify_verbose) {\n                 print_formatted_fieldname(context, operand);\n@@ -2780,7 +2781,7 @@ push_stack(context_type *context, unsigned int inumber, stack_info_type *new_sta\n                                                                 context->class,\n                                                                 operand);\n             const char *result_signature;\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n             result_signature = get_result_signature(signature);\n             if (result_signature++ == NULL) {\n                 CCerror(context, \"Illegal signature %s\", signature);\n@@ -3621,7 +3622,7 @@ cp_index_to_class_fullinfo(context_type *context, int cp_index, int kind)\n         CCerror(context, \"Internal error #5\");\n     }\n \n-    check_and_push(context, classname, VM_STRING_UTF);\n+    check_and_push_string_utf(context, classname);\n     if (classname[0] == JVM_SIGNATURE_ARRAY) {\n         /* This make recursively call us, in case of a class array */\n         signature_to_fieldtype(context, &classname, &result);\n@@ -3822,8 +3823,8 @@ signature_to_fieldtype(context_type *context,\n                 assert(finish >= p);\n                 length = (int)(finish - p);\n                 if (length + 1 > (int)sizeof(buffer_space)) {\n-                    buffer = calloc(length + 1, sizeof(char));\n-                    check_and_push(context, buffer, VM_MALLOC_BLK);\n+                    buffer = malloc(length + 1);\n+                    check_and_push_malloc_block(context, buffer);\n                 }\n                 memcpy(buffer, p, length);\n                 buffer[length] = '\\0';\n@@ -4142,7 +4143,7 @@ static void free_block(void *ptr, int kind)\n     }\n }\n \n-static void check_and_push(context_type *context, const void *ptr, int kind)\n+static void check_and_push_common(context_type *context, void *ptr, int kind)\n {\n     alloc_stack_type *p;\n     if (ptr == 0)\n@@ -4154,16 +4155,24 @@ static void check_and_push(context_type *context, const void *ptr, int kind)\n         p = malloc(sizeof(alloc_stack_type));\n         if (p == 0) {\n             /* Make sure we clean up. */\n-            free_block((void *)ptr, kind);\n+            free_block(ptr, kind);\n             CCout_of_memory(context);\n         }\n     }\n     p->kind = kind;\n-    p->ptr = (void *)ptr;\n+    p->ptr = ptr;\n     p->next = context->allocated_memory;\n     context->allocated_memory = p;\n }\n \n+static void check_and_push_malloc_block(context_type *context, void *ptr) {\n+  check_and_push_common(context, ptr, VM_MALLOC_BLK);\n+}\n+\n+static void check_and_push_string_utf(context_type *context, const char *ptr) {\n+  check_and_push_common(context, (void *)ptr, VM_STRING_UTF);\n+}\n+\n static void pop_and_free(context_type *context)\n {\n     alloc_stack_type *p = context->allocated_memory;"
      },
      {
        "sha": "660665392c12db9879a535f8d30a0262d4ba3b92",
        "filename": "src/java.base/unix/native/libjava/TimeZone_md.c",
        "status": "modified",
        "additions": 36,
        "deletions": 45,
        "changes": 81,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Funix%2Fnative%2Flibjava%2FTimeZone_md.c",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Funix%2Fnative%2Flibjava%2FTimeZone_md.c",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Funix%2Fnative%2Flibjava%2FTimeZone_md.c?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -379,12 +379,11 @@ mapPlatformToJavaTimezone(const char *java_home_dir, const char *tz) {\n     size_t tz_len = 0;\n \n     /* On AIX, the TZ environment variable may end with a comma\n-     * followed by modifier fields. These are ignored here. */\n-    temp_tz = strchr(tz, ',');\n-    tz_len = (temp_tz == NULL) ? strlen(tz) : temp_tz - tz;\n-    tz_buf = (char *)malloc(tz_len + 1);\n-    memcpy(tz_buf, tz, tz_len);\n-    tz_buf[tz_len] = 0;\n+     * followed by modifier fields until early AIX6.1.\n+     * This restriction has been removed from AIX7. */\n+\n+    tz_buf = strdup(tz);\n+    tz_len = strlen(tz_buf);\n \n     /* Open tzmappings file, with buffer overrun check */\n     if ((strlen(java_home_dir) + 15) > PATH_MAX) {\n@@ -525,58 +524,50 @@ findJavaTZ_md(const char *java_home_dir)\n /**\n  * Returns a GMT-offset-based zone ID. (e.g., \"GMT-08:00\")\n  */\n-\n-#if defined(MACOSX)\n-\n char *\n getGMTOffsetID()\n {\n-    time_t offset;\n-    char sign, buf[32];\n-    struct tm local_tm;\n-    time_t clock;\n+    char buf[32];\n+    char offset[6];\n+    struct tm localtm;\n+    time_t clock = time(NULL);\n+    if (localtime_r(&clock, &localtm) == NULL) {\n+        return strdup(\"GMT\");\n+    }\n \n-    clock = time(NULL);\n-    if (localtime_r(&clock, &local_tm) == NULL) {\n+#if defined(MACOSX)\n+    time_t gmt_offset;\n+    gmt_offset = (time_t)localtm.tm_gmtoff;\n+    if (gmt_offset == 0) {\n         return strdup(\"GMT\");\n     }\n-    offset = (time_t)local_tm.tm_gmtoff;\n-    if (offset == 0) {\n+#else\n+    struct tm gmt;\n+    if (gmtime_r(&clock, &gmt) == NULL) {\n         return strdup(\"GMT\");\n     }\n-    if (offset > 0) {\n-        sign = '+';\n-    } else {\n-        offset = -offset;\n-        sign = '-';\n+\n+    if(localtm.tm_hour == gmt.tm_hour && localtm.tm_min == gmt.tm_min) {\n+        return strdup(\"GMT\");\n     }\n-    sprintf(buf, (const char *)\"GMT%c%02d:%02d\",\n-            sign, (int)(offset/3600), (int)((offset%3600)/60));\n-    return strdup(buf);\n-}\n+#endif\n \n+#if defined(_AIX)\n+    // strftime() with \"%z\" does not return ISO 8601 format by AIX default.\n+    // XPG_SUS_ENV=ON environment variable is required.\n+    // But Hotspot does not support XPG_SUS_ENV=ON.\n+    // Ignore daylight saving settings to calculate current time difference\n+    localtm.tm_isdst = 0;\n+    int gmt_off = (int)(difftime(mktime(&localtm), mktime(&gmt)) / 60.0);\n+    sprintf(buf, (const char *)\"GMT%c%02.2d:%02.2d\",\n+            gmt_off < 0 ? '-' : '+' , abs(gmt_off / 60), gmt_off % 60);\n #else\n-\n-char *\n-getGMTOffsetID()\n-{\n-    time_t offset;\n-    char sign, buf[32];\n-    offset = timezone;\n-\n-    if (offset == 0) {\n+    if (strftime(offset, 6, \"%z\", &localtm) != 5) {\n         return strdup(\"GMT\");\n     }\n \n-    /* Note that the time offset direction is opposite. */\n-    if (offset > 0) {\n-        sign = '-';\n-    } else {\n-        offset = -offset;\n-        sign = '+';\n-    }\n-    sprintf(buf, (const char *)\"GMT%c%02d:%02d\",\n-            sign, (int)(offset/3600), (int)((offset%3600)/60));\n+    sprintf(buf, (const char *)\"GMT%c%c%c:%c%c\", offset[0], offset[1], offset[2],\n+        offset[3], offset[4]);\n+#endif\n     return strdup(buf);\n }\n-#endif /* MACOSX */"
      },
      {
        "sha": "9fe8485171d0340e84a711f2d1b7194e2433ea12",
        "filename": "src/java.base/windows/native/libjava/java_props_md.c",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fwindows%2Fnative%2Flibjava%2Fjava_props_md.c",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fwindows%2Fnative%2Flibjava%2Fjava_props_md.c",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fwindows%2Fnative%2Flibjava%2Fjava_props_md.c?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -558,7 +558,7 @@ GetJavaProperties(JNIEnv* env)\n                         /* Windows server 2022 build number is 20348 */\n                         if (buildNumber > 20347) {\n                             sprops.os_name = \"Windows Server 2022\";\n-                        } else if (buildNumber > 17676) {\n+                        } else if (buildNumber > 17762) {\n                             sprops.os_name = \"Windows Server 2019\";\n                         } else {\n                             sprops.os_name = \"Windows Server 2016\";"
      },
      {
        "sha": "1309a9c3da2b9f1b7707354823831b54856e99df",
        "filename": "src/java.base/windows/native/libnet/NTLMAuthSequence.c",
        "status": "modified",
        "additions": 7,
        "deletions": 18,
        "changes": 25,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fwindows%2Fnative%2Flibnet%2FNTLMAuthSequence.c",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.base%2Fwindows%2Fnative%2Flibnet%2FNTLMAuthSequence.c",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.base%2Fwindows%2Fnative%2Flibnet%2FNTLMAuthSequence.c?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -76,7 +76,7 @@ JNIEXPORT jlong JNICALL Java_sun_net_www_protocol_http_ntlm_NTLMAuthSequence_get\n     CredHandle      *pCred;\n     TimeStamp            ltime;\n     jboolean         isCopy;\n-    SECURITY_STATUS      ss;\n+    SECURITY_STATUS      ss = SEC_E_INTERNAL_ERROR;\n \n     if (user != 0) {\n         pUser = JNU_GetStringPlatformChars(env, user, &isCopy);\n@@ -86,31 +86,19 @@ JNIEXPORT jlong JNICALL Java_sun_net_www_protocol_http_ntlm_NTLMAuthSequence_get\n     if (domain != 0) {\n         pDomain = JNU_GetStringPlatformChars(env, domain, &isCopy);\n         if (pDomain == NULL) {\n-            if (pUser != NULL)\n-                JNU_ReleaseStringPlatformChars(env, user, pUser);\n-            return 0;  // pending Exception\n+            goto cleanup;\n         }\n     }\n     if (password != 0) {\n         pPassword = JNU_GetStringPlatformChars(env, password, &isCopy);\n         if (pPassword == NULL) {\n-            if(pUser != NULL)\n-                JNU_ReleaseStringPlatformChars(env, user, pUser);\n-            if(pDomain != NULL)\n-                JNU_ReleaseStringPlatformChars(env, domain, pDomain);\n-            return 0;  // pending Exception\n+            goto cleanup;\n         }\n     }\n     pCred = (CredHandle *)malloc(sizeof (CredHandle));\n     if (pCred == NULL) {\n         JNU_ThrowOutOfMemoryError(env, \"native memory allocation failed\");\n-        if (pUser != NULL)\n-            JNU_ReleaseStringPlatformChars(env, user, pUser);\n-        if (pPassword != NULL)\n-            JNU_ReleaseStringPlatformChars(env, password, pPassword);\n-        if (pDomain != NULL)\n-            JNU_ReleaseStringPlatformChars(env, domain, pDomain);\n-        return NULL;\n+        goto cleanup;\n     }\n \n     if ( ((pUser != NULL) || (pPassword != NULL)) || (pDomain != NULL)) {\n@@ -145,14 +133,15 @@ JNIEXPORT jlong JNICALL Java_sun_net_www_protocol_http_ntlm_NTLMAuthSequence_get\n         );\n \n     /* Release resources held by JNU_GetStringPlatformChars */\n+cleanup:\n     if (pUser != NULL)\n         JNU_ReleaseStringPlatformChars(env, user, pUser);\n     if (pPassword != NULL)\n         JNU_ReleaseStringPlatformChars(env, password, pPassword);\n     if (pDomain != NULL)\n         JNU_ReleaseStringPlatformChars(env, domain, pDomain);\n \n-    if (ss == 0) {\n+    if (ss == SEC_E_OK) {\n         return (jlong) pCred;\n     } else {\n         return 0;"
      },
      {
        "sha": "cee23f2f96e38d585ba764961d35e41e285627f1",
        "filename": "src/java.desktop/macosx/classes/sun/lwawt/macosx/CAccessibleText.java",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fclasses%2Fsun%2Flwawt%2Fmacosx%2FCAccessibleText.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fclasses%2Fsun%2Flwawt%2Fmacosx%2FCAccessibleText.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fmacosx%2Fclasses%2Fsun%2Flwawt%2Fmacosx%2FCAccessibleText.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2011, 2016, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -288,7 +288,9 @@ public String call() throws Exception {\n                 final AccessibleEditableText aet = ac.getAccessibleEditableText();\n                 if (aet == null) return null;\n \n-                return aet.getTextRange(location, location + length);\n+                int currentLength = aet.getCharCount();\n+                return aet.getTextRange(Math.min(currentLength, location),\n+                        Math.min(currentLength, location + length));\n             }\n         }, c);\n     }"
      },
      {
        "sha": "b47fffed46008aa5879011dc0b84ae80f4d98eda",
        "filename": "src/java.desktop/macosx/native/libawt_lwawt/awt/a11y/ButtonAccessibility.m",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FButtonAccessibility.m",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FButtonAccessibility.m",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FButtonAccessibility.m?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -54,4 +54,15 @@ - (id)accessibilityParent\n     return [super accessibilityParent];\n }\n \n+- (id _Nullable)accessibilityValue\n+{\n+    if ([self accessibilityRole] == NSAccessibilityButtonRole) {\n+        // Only do it for buttons, radio buttons and checkbox buttons\n+        // have a meaningful value to return\n+        return NULL;\n+    } else {\n+        return [super accessibilityValue];\n+    }\n+}\n+\n @end"
      },
      {
        "sha": "33b4b7c579a1c3f2994238181103713e091d58b9",
        "filename": "src/java.desktop/macosx/native/libawt_lwawt/awt/a11y/CommonComponentAccessibility.m",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FCommonComponentAccessibility.m",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FCommonComponentAccessibility.m",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FCommonComponentAccessibility.m?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -126,7 +126,7 @@ + (void) initializeRolesMap {\n     /*\n      * Here we should keep all the mapping between the accessibility roles and implementing classes\n      */\n-    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:50];\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:51];\n \n     [rolesMap setObject:@\"ButtonAccessibility\" forKey:@\"pushbutton\"];\n     [rolesMap setObject:@\"ImageAccessibility\" forKey:@\"icon\"];\n@@ -159,6 +159,7 @@ + (void) initializeRolesMap {\n     [rolesMap setObject:@\"MenuBarAccessibility\" forKey:@\"menubar\"];\n     [rolesMap setObject:@\"MenuAccessibility\" forKey:@\"menu\"];\n     [rolesMap setObject:@\"MenuAccessibility\" forKey:@\"popupmenu\"];\n+    [rolesMap setObject:@\"MenuItemAccessibility\" forKey:@\"menuitem\"];\n     [rolesMap setObject:@\"ProgressIndicatorAccessibility\" forKey:@\"progressbar\"];\n \n     /*\n@@ -614,8 +615,11 @@ - (void)getActionsWithEnv:(JNIEnv *)env\n                 [fActions setObject:action forKey:NSAccessibilityPickAction];\n                 [fActionSelectors addObject:[sActionSelectors objectForKey:NSAccessibilityPickAction]];\n             } else {\n-                [fActions setObject:action forKey:[sActions objectForKey:[action getDescription]]];\n-                [fActionSelectors addObject:[sActionSelectors objectForKey:[sActions objectForKey:[action getDescription]]]];\n+                NSString *nsActionName = [sActions objectForKey:[action getDescription]];\n+                if (nsActionName != nil) {\n+                    [fActions setObject:action forKey:nsActionName];\n+                    [fActionSelectors addObject:[sActionSelectors objectForKey:nsActionName]];\n+                }\n             }\n             [action release];\n         }"
      },
      {
        "sha": "8e10494bc96374708a5dbf490bb216ad34692d94",
        "filename": "src/java.desktop/macosx/native/libawt_lwawt/awt/a11y/ImageAccessibility.m",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FImageAccessibility.m",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FImageAccessibility.m",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FImageAccessibility.m?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -49,4 +49,9 @@ - (id)accessibilityParent\n     return [super accessibilityParent];\n }\n \n+- (id _Nullable)accessibilityValue\n+{\n+    return NULL;\n+}\n+\n @end"
      },
      {
        "sha": "f9f13ca207f38ba92718dbced16e58541867e536",
        "filename": "src/java.desktop/macosx/native/libawt_lwawt/awt/a11y/MenuAccessibility.m",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FMenuAccessibility.m",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FMenuAccessibility.m",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FMenuAccessibility.m?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -42,4 +42,9 @@ - (BOOL)isAccessibilityElement\n     return YES;\n }\n \n+- (id _Nullable)accessibilityValue\n+{\n+    return NULL;\n+}\n+\n @end"
      },
      {
        "sha": "ddc15924edaad87f6c276c50d20ce54a742c139b",
        "filename": "src/java.desktop/macosx/native/libawt_lwawt/awt/a11y/MenuItemAccessibility.m",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FMenuItemAccessibility.m",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FMenuItemAccessibility.m",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FMenuItemAccessibility.m?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -56,7 +56,7 @@ - (NSString * _Nullable)accessibilityLabel\n \n - (id _Nullable)accessibilityValue\n {\n-    return [super accessibilityValue];\n+    return NULL;\n }\n \n @end"
      },
      {
        "sha": "7c9f9bcb744936a8420bdcfe89833657b6340194",
        "filename": "src/java.desktop/macosx/native/libawt_lwawt/awt/a11y/TableRowAccessibility.m",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FTableRowAccessibility.m",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FTableRowAccessibility.m",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Fawt%2Fa11y%2FTableRowAccessibility.m?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -123,7 +123,14 @@ - (NSString *)accessibilityLabel\n             if ([accessibilityName isEqualToString:@\"\"]) {\n                 accessibilityName = [cell accessibilityLabel];\n             } else {\n-                accessibilityName = [accessibilityName stringByAppendingFormat:@\", %@\", [cell accessibilityLabel]];\n+                NSString *label = [cell accessibilityLabel];\n+                if (label == nil) {\n+                    id val = [cell accessibilityValue];\n+                    if (val != nil) {\n+                        label = [NSString stringWithFormat:@\"%@\", val];\n+                    }\n+                }\n+                accessibilityName = [accessibilityName stringByAppendingFormat:@\", %@\", label];\n             }\n         }\n         return accessibilityName;"
      },
      {
        "sha": "5e1d6ba0cb1c150b226ba020773f876e320063df",
        "filename": "src/java.desktop/macosx/native/libawt_lwawt/font/AWTFont.m",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Ffont%2FAWTFont.m",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Ffont%2FAWTFont.m",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibawt_lwawt%2Ffont%2FAWTFont.m?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -379,6 +379,9 @@ static OSStatus CreateFSRef(FSRef *myFSRefPtr, NSString *inPath)\n     CTFontRef ctfont = (CTFontRef)nsFont;\n     CFArrayRef tagsArray =\n         CTFontCopyAvailableTables(ctfont, kCTFontTableOptionNoOptions);\n+    if (tagsArray == NULL) {\n+        return NULL;\n+    }\n     CFIndex numTags = CFArrayGetCount(tagsArray);\n     for (i=0; i<numTags; i++) {\n         if (tag =="
      },
      {
        "sha": "97ad7392d8a70934733ad43df3229c8af980e65f",
        "filename": "src/java.desktop/macosx/native/libosxapp/AWT_debug.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibosxapp%2FAWT_debug.h",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibosxapp%2FAWT_debug.h",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fmacosx%2Fnative%2Flibosxapp%2FAWT_debug.h?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -41,7 +41,7 @@ JNIEXPORT bool ShouldPrintVerboseDebugging();\n     if (ShouldPrintVerboseDebugging()) AWT_DEBUG_LOG((str))\n \n #define AWT_DEBUG_BUG_REPORT_MESSAGE \\\n-    NSLog(@\"\\tPlease file a bug report at http://bugreport.java.com/bugreport \\\n+    NSLog(@\"\\tPlease file a bug report at https://bugreport.java.com/bugreport \\\n with this message and a reproducible test case.\")\n \n #endif"
      },
      {
        "sha": "5f3e043c8206d4b2e44578867729f8ab7cc2cb55",
        "filename": "src/java.desktop/share/classes/java/awt/SystemTray.java",
        "status": "modified",
        "additions": 10,
        "deletions": 16,
        "changes": 26,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fshare%2Fclasses%2Fjava%2Fawt%2FSystemTray.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fshare%2Fclasses%2Fjava%2Fawt%2FSystemTray.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fshare%2Fclasses%2Fjava%2Fawt%2FSystemTray.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2005, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -131,15 +131,7 @@ public class SystemTray {\n     private static final TrayIcon[] EMPTY_TRAY_ARRAY = new TrayIcon[0];\n \n     static {\n-        AWTAccessor.setSystemTrayAccessor(\n-            new AWTAccessor.SystemTrayAccessor() {\n-                public void firePropertyChange(SystemTray tray,\n-                                               String propertyName,\n-                                               Object oldValue,\n-                                               Object newValue) {\n-                    tray.firePropertyChange(propertyName, oldValue, newValue);\n-                }\n-            });\n+        AWTAccessor.setSystemTrayAccessor(SystemTray::firePropertyChange);\n     }\n \n     /**\n@@ -257,15 +249,16 @@ public void add(TrayIcon trayIcon) throws AWTException {\n         if (trayIcon == null) {\n             throw new NullPointerException(\"adding null TrayIcon\");\n         }\n-        TrayIcon[] oldArray = null, newArray = null;\n-        Vector<TrayIcon> icons = null;\n+        TrayIcon[] oldArray;\n+        TrayIcon[] newArray;\n+        Vector<TrayIcon> icons;\n         synchronized (this) {\n             oldArray = systemTray.getTrayIcons();\n             @SuppressWarnings(\"unchecked\")\n             Vector<TrayIcon> tmp = (Vector<TrayIcon>)AppContext.getAppContext().get(TrayIcon.class);\n             icons = tmp;\n             if (icons == null) {\n-                icons = new Vector<TrayIcon>(3);\n+                icons = new Vector<>(3);\n                 AppContext.getAppContext().put(TrayIcon.class, icons);\n \n             } else if (icons.contains(trayIcon)) {\n@@ -305,7 +298,8 @@ public void remove(TrayIcon trayIcon) {\n         if (trayIcon == null) {\n             return;\n         }\n-        TrayIcon[] oldArray = null, newArray = null;\n+        TrayIcon[] oldArray;\n+        TrayIcon[] newArray;\n         synchronized (this) {\n             oldArray = systemTray.getTrayIcons();\n             @SuppressWarnings(\"unchecked\")\n@@ -343,7 +337,7 @@ public TrayIcon[] getTrayIcons() {\n         @SuppressWarnings(\"unchecked\")\n         Vector<TrayIcon> icons = (Vector<TrayIcon>)AppContext.getAppContext().get(TrayIcon.class);\n         if (icons != null) {\n-            return icons.toArray(new TrayIcon[icons.size()]);\n+            return icons.toArray(EMPTY_TRAY_ARRAY);\n         }\n         return EMPTY_TRAY_ARRAY;\n     }\n@@ -475,7 +469,7 @@ public synchronized PropertyChangeListener[] getPropertyChangeListeners(String p\n     private void firePropertyChange(String propertyName,\n                                     Object oldValue, Object newValue)\n     {\n-        if (oldValue != null && newValue != null && oldValue.equals(newValue)) {\n+        if (oldValue != null && oldValue.equals(newValue)) {\n             return;\n         }\n         getCurrentChangeSupport().firePropertyChange(propertyName, oldValue, newValue);"
      },
      {
        "sha": "e74da8869d3b923c9ee5d95be10e34eeebf32bbb",
        "filename": "src/java.desktop/share/legal/freetype.md",
        "status": "modified",
        "additions": 82,
        "deletions": 41,
        "changes": 123,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fshare%2Flegal%2Ffreetype.md",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fshare%2Flegal%2Ffreetype.md",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fshare%2Flegal%2Ffreetype.md?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -20,6 +20,27 @@ which fits your needs best.\n \n ### FreeType License\n ```\n+\n+Copyright (C) 1996-2022 by David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2007-2022 by Dereg Clegg and Michael Toftdal.\n+Copyright (C) 1996-2022 by Just van Rossum, David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2004-2022 by Masatake YAMATO and Redhat K.K.\n+Copyright (C) 2007-2022 by Derek Clegg and Michael Toftdal.\n+Copyright (C) 2007-2022 by David Turner.\n+Copyright (C) 2022 by David Turner, Robert Wilhelm, Werner Lemberg, and Moazin Khatti.\n+Copyright (C) 2007-2022 by Rahul Bhalerao <rahul.bhalerao@redhat.com>, <b.rahul.pm@gmail.com>.\n+Copyright (C) 2008-2022 by David Turner, Robert Wilhelm, Werner Lemberg, and suzuki toshiya.\n+Copyright (C) 2019-2022 by Nikhil Ramakrishnan, David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2009-2022 by Oran Agra and Mickey Gabel.\n+Copyright (C) 2004-2022 by David Turner, Robert Wilhelm, Werner Lemberg, and George Williams.\n+Copyright (C) 2004-2022 by Masatake YAMATO, Red Hat K.K.,\n+Copyright (C) 2003-2022 by Masatake YAMATO, Redhat K.K.,\n+Copyright (C) 2013-2022 by Google, Inc.\n+Copyright (C) 2018-2022 by David Turner, Robert Wilhelm, Dominik Röttsches, and Werner Lemberg.\n+Copyright (C) 2005-2022 by David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright 2013 by Google, Inc.\n+\n+\n                    The FreeType Project LICENSE\n                     ----------------------------\n \n@@ -533,46 +554,34 @@ consider it more useful to permit linking proprietary applications with the\n library.  If this is what you want to do, use the GNU Library General\n Public License instead of this License.\n \n-#########################################################################\n-\n---- fthash.c and fthash.h are covered by the following notices ---\n-\n-/*\n- * Copyright 2000 Computing Research Labs, New Mexico State University\n- * Copyright 2001-2015\n- *   Francesco Zappa Nardelli\n- *\n- * Permission is hereby granted, free of charge, to any person obtaining a\n- * copy of this software and associated documentation files (the \"Software\"),\n- * to deal in the Software without restriction, including without limitation\n- * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n- * and/or sell copies of the Software, and to permit persons to whom the\n- * Software is furnished to do so, subject to the following conditions:\n- *\n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- *\n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n- * THE COMPUTING RESEARCH LAB OR NEW MEXICO STATE UNIVERSITY BE LIABLE FOR ANY\n- * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n- * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\n- * THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n- */\n-\n-  /**************************************************************************\n-   *\n-   * This file is based on code from bdf.c,v 1.22 2000/03/16 20:08:50\n-   *\n-   * taken from Mark Leisher's xmbdfed package\n-   *\n-   */\n-   \n-#########################################################################\n-\n-\n---- FreeType 2 PSaux module is covered by the following notices ---\n+```\n+\n+### Additional Freetype Attributions\n+```\n+\n+---------------------------------\n+The below license applies to the following files:\n+libfreetype/src/psaux/psarrst.c\n+libfreetype/src/psaux/psarrst.h\n+libfreetype/src/psaux/psblues.c\n+libfreetype/src/psaux/psblues.h\n+libfreetype/src/psaux/pserror.c\n+libfreetype/src/psaux/pserror.h\n+libfreetype/src/psaux/psfixed.h\n+libfreetype/src/psaux/psfont.c\n+libfreetype/src/psaux/psfont.h\n+libfreetype/src/psaux/psft.c\n+libfreetype/src/psaux/psft.h\n+libfreetype/src/psaux/psglue.h\n+libfreetype/src/psaux/pshints.c\n+libfreetype/src/psaux/pshints.h\n+libfreetype/src/psaux/psintrp.c\n+libfreetype/src/psaux/psintrp.h\n+libfreetype/src/psaux/psread.c\n+libfreetype/src/psaux/psread.h\n+libfreetype/src/psaux/psstack.c\n+libfreetype/src/psaux/psstack.h\n+libfreetype/src/psaux/pstypes.h\n \n Copyright 2006-2014 Adobe Systems Incorporated.\n \n@@ -603,7 +612,39 @@ have read and understood the terms and conditions of the\n FreeType Project License as well as those provided in this section,\n and you accept them fully.\n \n-#########################################################################\n \n ```\n \n+### MIT License\n+```\n+\n+---------------------------------\n+The below license applies to the following files:\n+libfreetype/include/freetype/internal/fthash.h\n+libfreetype/src/base/fthash.c\n+\n+Copyright 2000 Computing Research Labs, New Mexico State University\n+Copyright 2001-2015\n+\n+  Francesco Zappa Nardelli\n+\n+Permission is hereby granted, free of charge, to any person obtaining a\n+copy of this software and associated documentation files (the \"Software\"),\n+to deal in the Software without restriction, including without limitation\n+the rights to use, copy, modify, merge, publish, distribute, sublicense,\n+and/or sell copies of the Software, and to permit persons to whom the\n+Software is furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n+THE COMPUTING RESEARCH LAB OR NEW MEXICO STATE UNIVERSITY BE LIABLE FOR ANY\n+CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n+OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\n+THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+\n+```"
      },
      {
        "sha": "9037354540bd1c33cee77f092200f9d49225bf40",
        "filename": "src/java.desktop/share/legal/harfbuzz.md",
        "status": "modified",
        "additions": 16,
        "deletions": 8,
        "changes": 24,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fshare%2Flegal%2Fharfbuzz.md",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fshare%2Flegal%2Fharfbuzz.md",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fshare%2Flegal%2Fharfbuzz.md?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -2,27 +2,31 @@\n \n ### Harfbuzz License\n \n-https://github.com/harfbuzz/harfbuzz/blob/master/COPYING\n+https://github.com/harfbuzz/harfbuzz/blob/4.4.1/COPYING\n \n <pre>\n \n HarfBuzz is licensed under the so-called \"Old MIT\" license.  Details follow.\n For parts of HarfBuzz that are licensed under different licenses see individual\n files names COPYING in subdirectories where applicable.\n \n-Copyright © 2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020  Google, Inc.\n-Copyright © 2018,2019,2020  Ebrahim Byagowi\n-Copyright © 2019,2020  Facebook, Inc. \n-Copyright © 2012  Mozilla Foundation\n+Copyright © 2010-2022  Google, Inc.\n+Copyright © 2018-2020  Ebrahim Byagowi\n+Copyright © 2019-2020  Facebook, Inc.\n+Copyright © 2012-2015  Mozilla Foundation.\n Copyright © 2011  Codethink Limited\n-Copyright © 2008,2010  Nokia Corporation and/or its subsidiary(-ies)\n+Copyright © 2008-2010  Nokia Corporation and/or its subsidiary(-ies)\n Copyright © 2009  Keith Stribley\n Copyright © 2009  Martin Hosken and SIL International\n Copyright © 2007  Chris Wilson\n-Copyright © 2006  Behdad Esfahbod\n+Copyright © 2005-2022 Behdad Esfahbod\n Copyright © 2005  David Turner\n-Copyright © 2004,2007,2008,2009,2010  Red Hat, Inc.\n+Copyright © 2004-2013  Red Hat, Inc.\n Copyright © 1998-2004  David Turner and Werner Lemberg\n+Copyright © 2016  Elie Roux <elie.roux@telecom-bretagne.eu>\n+Copyright © 2018-2019 Adobe Inc.\n+Copyright © 2018  Khaled Hosny\n+Copyright © 2016  Igalia S.L.\n \n For full copyright notices consult the individual files in the package.\n \n@@ -49,6 +53,10 @@ All source code, except for one section, is licensed as above. The one\n exception is licensed with a slightly different MIT variant:\n The contents of this directory are licensed under the following terms:\n \n+---------------------------------\n+The below license applies to the following files:\n+libharfbuzz/hb-ucd.cc\n+\n Copyright (C) 2012 Grigori Goronzy <greg@kinoho.net>\n \n Permission to use, copy, modify, and/or distribute this software for any"
      },
      {
        "sha": "62611fff2a286ea7d6e01b1715f1394b8f3e1b4c",
        "filename": "src/java.desktop/share/native/common/awt/utility/sizecalc.h",
        "status": "renamed",
        "additions": 8,
        "deletions": 12,
        "changes": 20,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fshare%2Fnative%2Fcommon%2Fawt%2Futility%2Fsizecalc.h",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fshare%2Fnative%2Fcommon%2Fawt%2Futility%2Fsizecalc.h",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fshare%2Fnative%2Fcommon%2Fawt%2Futility%2Fsizecalc.h?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -46,13 +46,9 @@\n \n #define IS_SAFE_SIZE_T(x) ((x) >= 0 && (unsigned long long)(x) <= SIZE_MAX)\n \n-#define IS_MUL_OVERFLOW(m, n) \\\n-        ((m) != 0 && (n) != 0 && (((size_t)((m)*(n))) != (((size_t)(m)) * ((size_t)(n)))))\n-\n #define IS_SAFE_SIZE_MUL(m, n) \\\n     (IS_SAFE_SIZE_T(m) && IS_SAFE_SIZE_T(n) && \\\n-     ((m) == 0 || (n) == 0 || (size_t)(n) <= (SIZE_MAX / (size_t)(m))) && \\\n-     !IS_MUL_OVERFLOW(m, n))\n+     ((m) == 0 || (n) == 0 || (size_t)(n) <= (SIZE_MAX / (size_t)(m))))\n \n #define IS_SAFE_SIZE_ADD(a, b) \\\n     (IS_SAFE_SIZE_T(a) && IS_SAFE_SIZE_T(b) && (size_t)(b) <= (SIZE_MAX - (size_t)(a)))\n@@ -75,10 +71,10 @@\n  *    // Use the allocated array...\n  */\n #define SAFE_SIZE_ARRAY_ALLOC(func, m, n) \\\n-    (IS_SAFE_SIZE_MUL((m), (n)) ? ((func)((m) * (n))) : FAILURE_RESULT)\n+    (IS_SAFE_SIZE_MUL((m), (n)) ? ((func)((size_t)(m) * (size_t)(n))) : FAILURE_RESULT)\n \n #define SAFE_SIZE_ARRAY_REALLOC(func, p, m, n) \\\n-    (IS_SAFE_SIZE_MUL((m), (n)) ? ((func)((p), (m) * (n))) : FAILURE_RESULT)\n+    (IS_SAFE_SIZE_MUL((m), (n)) ? ((func)((p), (size_t)(m) * (size_t)(n))) : FAILURE_RESULT)\n \n /*\n  * A helper macro to safely allocate an array of type 'type' with 'n' items\n@@ -92,19 +88,19 @@\n  * IS_SAFE_... macros to check if the calculations are safe.\n  */\n #define SAFE_SIZE_NEW_ARRAY(type, n) \\\n-    (IS_SAFE_SIZE_MUL(sizeof(type), (n)) ? (new type[(n)]) : throw std::bad_alloc())\n+    (IS_SAFE_SIZE_MUL(sizeof(type), (n)) ? (new type[(size_t)(n)]) : throw std::bad_alloc())\n \n #define SAFE_SIZE_NEW_ARRAY2(type, n, m) \\\n-    (IS_SAFE_SIZE_MUL((m), (n)) && IS_SAFE_SIZE_MUL(sizeof(type), (n) * (m)) ? \\\n-     (new type[(n) * (m)]) : throw std::bad_alloc())\n+    (IS_SAFE_SIZE_MUL((m), (n)) && IS_SAFE_SIZE_MUL(sizeof(type), (size_t)(n) * (size_t)(m)) ? \\\n+     (new type[(size_t)(n) * (size_t)(m)]) : throw std::bad_alloc())\n \n /*\n  * Checks if a data structure of size (a + m*n) can be safely allocated\n  * w/o producing an integer overflow when calculating its size.\n  */\n #define IS_SAFE_STRUCT_SIZE(a, m, n) \\\n     ( \\\n-      IS_SAFE_SIZE_MUL((m), (n)) && IS_SAFE_SIZE_ADD((m) * (n), (a)) \\\n+      IS_SAFE_SIZE_MUL((m), (n)) && IS_SAFE_SIZE_ADD((size_t)(m) * (size_t)(n), (a)) \\\n     )\n \n /*\n@@ -116,7 +112,7 @@\n  *    // Use the allocated memory...\n  */\n #define SAFE_SIZE_STRUCT_ALLOC(func, a, m, n) \\\n-    (IS_SAFE_STRUCT_SIZE((a), (m), (n)) ? ((func)((a) + (m) * (n))) : FAILURE_RESULT)\n+    (IS_SAFE_STRUCT_SIZE((a), (m), (n)) ? ((func)((size_t)(a) + (size_t)(m) * (size_t)(n))) : FAILURE_RESULT)\n \n \n #endif /* SIZECALC_H */",
        "previous_filename": "src/java.desktop/share/native/include/sizecalc.h"
      },
      {
        "sha": "90fbd880446f32ecb7402b2a4683092ebaf6f37e",
        "filename": "src/java.desktop/windows/classes/sun/awt/windows/WTrayIconPeer.java",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fwindows%2Fclasses%2Fsun%2Fawt%2Fwindows%2FWTrayIconPeer.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fwindows%2Fclasses%2Fsun%2Fawt%2Fwindows%2FWTrayIconPeer.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fwindows%2Fclasses%2Fsun%2Fawt%2Fwindows%2FWTrayIconPeer.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2005, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -25,17 +25,20 @@\n \n package sun.awt.windows;\n \n-import java.awt.Graphics2D;\n import java.awt.AWTEvent;\n import java.awt.Frame;\n+import java.awt.Graphics2D;\n import java.awt.GraphicsEnvironment;\n-import java.awt.PopupMenu;\n+import java.awt.Image;\n import java.awt.Point;\n+import java.awt.PopupMenu;\n import java.awt.TrayIcon;\n-import java.awt.Image;\n import java.awt.geom.AffineTransform;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.DataBufferInt;\n+import java.awt.image.ImageObserver;\n+import java.awt.image.Raster;\n import java.awt.peer.TrayIconPeer;\n-import java.awt.image.*;\n \n import sun.awt.AWTAccessor;\n import sun.awt.SunToolkit;\n@@ -49,14 +52,11 @@ final class WTrayIconPeer extends WObjectPeer implements TrayIconPeer {\n \n     IconObserver observer = new IconObserver();\n     boolean firstUpdate = true;\n-    Frame popupParent = new Frame(\"PopupMessageWindow\");\n+    final Frame popupParent = new Frame(\"PopupMessageWindow\");\n     PopupMenu popup;\n \n     @Override\n     protected void disposeImpl() {\n-        if (popupParent != null) {\n-            popupParent.dispose();\n-        }\n         popupParent.dispose();\n         _dispose();\n         WToolkit.targetDisposedPeer(target, this);"
      },
      {
        "sha": "cc2f567dc680b70e155f7629d77cfd215b059027",
        "filename": "src/java.desktop/windows/native/libawt/windows/ShellFolder2.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fwindows%2Fnative%2Flibawt%2Fwindows%2FShellFolder2.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fwindows%2Fnative%2Flibawt%2Fwindows%2FShellFolder2.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fwindows%2Fnative%2Flibawt%2Fwindows%2FShellFolder2.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -700,6 +700,7 @@ JNIEXPORT jlong JNICALL Java_sun_awt_shell_Win32ShellFolder2_getLinkLocation\n     STRRET strret;\n     OLECHAR olePath[MAX_PATH]; // wide-char version of path name\n     LPWSTR wstr;\n+    int ret;\n \n     IShellFolder* pParent = (IShellFolder*)parentIShellFolder;\n     if (pParent == NULL) {\n@@ -719,12 +720,18 @@ JNIEXPORT jlong JNICALL Java_sun_awt_shell_Win32ShellFolder2_getLinkLocation\n     switch (strret.uType) {\n       case STRRET_CSTR :\n         // IShellFolder::ParseDisplayName requires the path name in Unicode.\n-        MultiByteToWideChar(CP_ACP, MB_PRECOMPOSED, strret.cStr, -1, olePath, MAX_PATH);\n+        ret = MultiByteToWideChar(CP_ACP, MB_PRECOMPOSED, strret.cStr, -1, olePath, MAX_PATH);\n+        if (ret == 0) {\n+            return NULL;\n+        }\n         wstr = olePath;\n         break;\n \n       case STRRET_OFFSET :\n-        MultiByteToWideChar(CP_ACP, MB_PRECOMPOSED, (CHAR *)pidl + strret.uOffset, -1, olePath, MAX_PATH);\n+        ret = MultiByteToWideChar(CP_ACP, MB_PRECOMPOSED, (CHAR *)pidl + strret.uOffset, -1, olePath, MAX_PATH);\n+        if (ret == 0) {\n+            return NULL;\n+        }\n         wstr = olePath;\n         break;\n "
      },
      {
        "sha": "99ef4e95c94445c6d1d86d377e088e5500458a84",
        "filename": "src/java.desktop/windows/native/libawt/windows/awt_TrayIcon.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 11,
        "changes": 49,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fwindows%2Fnative%2Flibawt%2Fwindows%2Fawt_TrayIcon.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fwindows%2Fnative%2Flibawt%2Fwindows%2Fawt_TrayIcon.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fwindows%2Fnative%2Flibawt%2Fwindows%2Fawt_TrayIcon.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2005, 2014, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -70,10 +70,12 @@ typedef struct tagBitmapheader  {\n \n jfieldID AwtTrayIcon::idID;\n jfieldID AwtTrayIcon::actionCommandID;\n+jmethodID AwtTrayIcon::updateImageID;\n \n HWND AwtTrayIcon::sm_msgWindow = NULL;\n AwtTrayIcon::TrayIconListItem* AwtTrayIcon::sm_trayIconList = NULL;\n int AwtTrayIcon::sm_instCount = 0;\n+bool AwtTrayIcon::m_bDPIChanged = false;\n \n /************************************************************************\n  * AwtTrayIcon methods\n@@ -221,6 +223,18 @@ void AwtTrayIcon::InitNID(UINT uID)\n     m_nid.uVersion = NOTIFYICON_VERSION;\n }\n \n+// Call updateImage() method on the peer when screen scale changes\n+void AwtTrayIcon::UpdateImage()\n+{\n+    JNIEnv *env =(JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+\n+    jobject peer = GetPeer(env);\n+    if (peer != NULL) {\n+        env->CallVoidMethod(peer, updateImageID);\n+        env->ExceptionClear();\n+    }\n+}\n+\n BOOL AwtTrayIcon::SendTrayMessage(DWORD dwMessage)\n {\n     return Shell_NotifyIcon(dwMessage, (PNOTIFYICONDATA)&m_nid);\n@@ -248,6 +262,10 @@ LRESULT CALLBACK AwtTrayIcon::TrayWindowProc(HWND hwnd, UINT uMsg, WPARAM wParam\n                 }\n             }\n             break;\n+        case WM_DPICHANGED:\n+            // Set the flag to update icon images, see WmTaskbarCreated\n+            m_bDPIChanged = true;\n+            break;\n         default:\n             if(uMsg == s_msgTaskbarCreated) {\n                 if (hwnd == AwtTrayIcon::sm_msgWindow) {\n@@ -474,12 +492,13 @@ MsgRouting AwtTrayIcon::WmContextMenu(UINT flags, int x, int y)\n MsgRouting AwtTrayIcon::WmTaskbarCreated() {\n     TrayIconListItem* item;\n     for (item = sm_trayIconList; item != NULL; item = item->m_next) {\n-        BOOL result = item->m_trayIcon->SendTrayMessage(NIM_ADD);\n-        // 6270114: Instructs the taskbar to behave according to the Shell version 5.0\n-        if (result) {\n-            item->m_trayIcon->SendTrayMessage(NIM_SETVERSION);\n+        if (m_bDPIChanged) {\n+            // Update the icon image\n+            item->m_trayIcon->UpdateImage();\n         }\n+        item->m_trayIcon->AddTrayIcon();\n     }\n+    m_bDPIChanged = false;\n     return mrDoDefault;\n }\n \n@@ -725,7 +744,7 @@ void AwtTrayIcon::SetToolTip(LPCTSTR tooltip)\n         _tcscpy_s(m_nid.szTip, TRAY_ICON_TOOLTIP_MAX_SIZE, tooltip);\n     }\n \n-    SendTrayMessage(NIM_MODIFY);\n+    ModifyTrayIcon();\n }\n \n void AwtTrayIcon::_SetToolTip(void *param)\n@@ -793,10 +812,10 @@ void AwtTrayIcon::_UpdateIcon(void *param)\n     JNI_CHECK_PEER_GOTO(self, ret);\n     trayIcon = (AwtTrayIcon *)pData;\n \n-    BOOL result = trayIcon->SendTrayMessage(jupdate == JNI_TRUE ? NIM_MODIFY : NIM_ADD);\n-    // 6270114: Instructs the taskbar to behave according to the Shell version 5.0\n-    if (result && jupdate == JNI_FALSE) {\n-        trayIcon->SendTrayMessage(NIM_SETVERSION);\n+    if (jupdate == JNI_TRUE) {\n+        trayIcon->ModifyTrayIcon();\n+    } else {\n+        trayIcon->AddTrayIcon();\n     }\n ret:\n     env->DeleteGlobalRef(self);\n@@ -845,7 +864,7 @@ void AwtTrayIcon::DisplayMessage(LPCTSTR caption, LPCTSTR text, LPCTSTR msgType)\n         _tcscpy_s(m_nid.szInfo, TRAY_ICON_BALLOON_INFO_MAX_SIZE, text);\n     }\n \n-    SendTrayMessage(NIM_MODIFY);\n+    ModifyTrayIcon();\n     m_nid.uFlags &= ~NIF_INFO;\n }\n \n@@ -917,6 +936,14 @@ Java_java_awt_TrayIcon_initIDs(JNIEnv *env, jclass cls)\n     DASSERT(AwtTrayIcon::actionCommandID != NULL);\n     CHECK_NULL( AwtTrayIcon::actionCommandID);\n \n+    jclass wPeerCls = env->FindClass(\"sun/awt/windows/WTrayIconPeer\");\n+    DASSERT(wPeerCls != NULL);\n+    CHECK_NULL(wPeerCls);\n+\n+    AwtTrayIcon::updateImageID = env->GetMethodID(wPeerCls, \"updateImage\", \"()V\");\n+    DASSERT(AwtTrayIcon::updateImageID != NULL);\n+    CHECK_NULL(AwtTrayIcon::updateImageID);\n+\n     CATCH_BAD_ALLOC;\n }\n "
      },
      {
        "sha": "5c074f9f28d60aef19a01618b75b07c88e991eb1",
        "filename": "src/java.desktop/windows/native/libawt/windows/awt_TrayIcon.h",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fwindows%2Fnative%2Flibawt%2Fwindows%2Fawt_TrayIcon.h",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.desktop%2Fwindows%2Fnative%2Flibawt%2Fwindows%2Fawt_TrayIcon.h",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.desktop%2Fwindows%2Fnative%2Flibawt%2Fwindows%2Fawt_TrayIcon.h?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2005, 2008, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -52,7 +52,6 @@ class AwtTrayIcon: public AwtObject {\n \n     virtual void Dispose();\n \n-    BOOL SendTrayMessage(DWORD dwMessage);\n     void LinkObjects(JNIEnv *env, jobject peer);\n     void UnlinkObjects();\n \n@@ -86,6 +85,8 @@ class AwtTrayIcon: public AwtObject {\n \n     void DisplayMessage(LPCTSTR caption, LPCTSTR text, LPCTSTR msgType);\n \n+    void UpdateImage();\n+\n     // Adds to the head of the list\n     INLINE void AddTrayIconItem(UINT id) {\n         TrayIconListItem* item = new TrayIconListItem(id, this);\n@@ -121,6 +122,7 @@ class AwtTrayIcon: public AwtObject {\n      */\n     static jfieldID idID;\n     static jfieldID actionCommandID;\n+    static jmethodID updateImageID;\n \n     // ************************\n \n@@ -151,6 +153,22 @@ class AwtTrayIcon: public AwtObject {\n         TrayIconListItem* m_next;\n     };\n \n+    BOOL SendTrayMessage(DWORD dwMessage);\n+\n+    INLINE void AddTrayIcon() {\n+        BOOL result = SendTrayMessage(NIM_ADD);\n+        // 6270114: Instructs the taskbar to behave according to the Shell version 5.0\n+        if (result) {\n+            SendTrayMessage(NIM_SETVERSION);\n+        }\n+    }\n+\n+    INLINE void ModifyTrayIcon() {\n+        SendTrayMessage(NIM_MODIFY);\n+    }\n+\n+    static bool m_bDPIChanged;\n+\n public:\n     static TrayIconListItem* sm_trayIconList;\n };"
      },
      {
        "sha": "5830d13a33559fe236e20d3e41d7e0c58412b11b",
        "filename": "src/java.instrument/windows/native/libinstrument/EncodingSupport_md.c",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.instrument%2Fwindows%2Fnative%2Flibinstrument%2FEncodingSupport_md.c",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.instrument%2Fwindows%2Fnative%2Flibinstrument%2FEncodingSupport_md.c",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.instrument%2Fwindows%2Fnative%2Flibinstrument%2FEncodingSupport_md.c?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2004, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -76,8 +76,8 @@ convertUft8ToPlatformString(char* utf8_str, int utf8_len, char* platform_str, in\n                 if (plen >= 0) {\n                     platform_str[plen] = '\\0';\n                 }\n-                free(wstr);\n             }\n+            free(wstr);\n         }\n     }\n     return plen;"
      },
      {
        "sha": "77e7eab041b6aefbe405fe3b5b79ad6219c1b9e6",
        "filename": "src/java.management/share/classes/com/sun/jmx/remote/security/FileLoginModule.java",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.management%2Fshare%2Fclasses%2Fcom%2Fsun%2Fjmx%2Fremote%2Fsecurity%2FFileLoginModule.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.management%2Fshare%2Fclasses%2Fcom%2Fsun%2Fjmx%2Fremote%2Fsecurity%2FFileLoginModule.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.management%2Fshare%2Fclasses%2Fcom%2Fsun%2Fjmx%2Fremote%2Fsecurity%2FFileLoginModule.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2004, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -422,7 +422,9 @@ public boolean logout() throws LoginException {\n             cleanState();\n             throw new LoginException (\"Subject is read-only\");\n         }\n-        subject.getPrincipals().remove(user);\n+        if (user != null) {\n+            subject.getPrincipals().remove(user);\n+        }\n \n         // clean out state\n         cleanState();"
      },
      {
        "sha": "09956084cf90057021a66225e4af226335a30b32",
        "filename": "src/java.naming/share/classes/com/sun/jndi/ldap/LdapCtxFactory.java",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.naming%2Fshare%2Fclasses%2Fcom%2Fsun%2Fjndi%2Fldap%2FLdapCtxFactory.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.naming%2Fshare%2Fclasses%2Fcom%2Fsun%2Fjndi%2Fldap%2FLdapCtxFactory.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.naming%2Fshare%2Fclasses%2Fcom%2Fsun%2Fjndi%2Fldap%2FLdapCtxFactory.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -189,6 +189,10 @@ private static DirContext getUsingURL(String url, Hashtable<?,?> env)\n                     ctx = getLdapCtxFromUrl(\n                             r.getDomainName(), url, new LdapURL(u), env);\n                     return ctx;\n+                } catch (AuthenticationException e) {\n+                    // do not retry on a different endpoint to avoid blocking\n+                    // the user if authentication credentials are wrong.\n+                    throw e;\n                 } catch (NamingException e) {\n                     // try the next element\n                     lastException = e;\n@@ -241,6 +245,10 @@ private static DirContext getUsingURLs(String[] urls, Hashtable<?,?> env)\n         for (String u : urls) {\n             try {\n                 return getUsingURL(u, env);\n+            } catch (AuthenticationException e) {\n+                // do not retry on a different URL to avoid blocking\n+                // the user if authentication credentials are wrong.\n+                throw e;\n             } catch (NamingException e) {\n                 ex = e;\n             }"
      },
      {
        "sha": "2b2f98a32050427e88df8fa3ad33957fdd02db7c",
        "filename": "src/java.xml/share/classes/com/sun/org/apache/xerces/internal/dom/AttributeMap.java",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FAttributeMap.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FAttributeMap.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FAttributeMap.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and/or its affiliates. All rights reserved.\n  */\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one or more\n@@ -39,7 +39,7 @@\n  *\n  * @xerces.internal\n  *\n- * @LastModified: Oct 2017\n+ * @LastModified: June 2022\n  */\n public class AttributeMap extends NamedNodeMapImpl {\n \n@@ -117,7 +117,7 @@ public Node setNamedItem(Node arg)\n         } else {\n             i = -1 - i; // Insert point (may be end of list)\n             if (null == nodes) {\n-                nodes = new ArrayList<>(5);\n+                nodes = new ArrayList<>();\n             }\n             nodes.add(i, arg);\n         }\n@@ -193,7 +193,7 @@ public Node setNamedItemNS(Node arg)\n             } else {\n                 i = -1 - i; // Insert point (may be end of list)\n                 if (null == nodes) {\n-                    nodes = new ArrayList<>(5);\n+                    nodes = new ArrayList<>();\n                 }\n                 nodes.add(i, arg);\n             }\n@@ -591,7 +591,7 @@ protected final int addItem (Node arg) {\n             else {\n                 i = -1 - i; // Insert point (may be end of list)\n                 if (null == nodes) {\n-                    nodes = new ArrayList<>(5);\n+                    nodes = new ArrayList<>();\n                 }\n                 nodes.add(i, arg);\n             }"
      },
      {
        "sha": "22198efcbb889802b5e7a8985685eeab39a72087",
        "filename": "src/java.xml/share/classes/com/sun/org/apache/xerces/internal/dom/DOMNormalizer.java",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FDOMNormalizer.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FDOMNormalizer.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FDOMNormalizer.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2017, 2019, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and/or its affiliates. All rights reserved.\n  */\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one or more\n@@ -89,7 +89,7 @@\n  *\n  * @author Elena Litani, IBM\n  * @author Neeraj Bajaj, Sun Microsystems, inc.\n- * @LastModified: Apr 2019\n+ * @LastModified: June 2022\n  */\n public class DOMNormalizer implements XMLDocumentHandler {\n \n@@ -140,9 +140,6 @@ public class DOMNormalizer implements XMLDocumentHandler {\n     /** Stores all namespace bindings on the current element */\n     protected final NamespaceContext fLocalNSBinder = new NamespaceSupport();\n \n-    /** list of attributes */\n-    protected final List<Node> fAttributeList = new ArrayList<>(5);\n-\n     /** DOM Locator -  for namespace fixup algorithm */\n     protected final DOMLocatorImpl fLocator = new DOMLocatorImpl();\n \n@@ -885,9 +882,9 @@ protected final void namespaceFixUp (ElementImpl element, AttributeMap attribute\n         if (attributes != null) {\n \n             // clone content of the attributes\n-            attributes.cloneMap(fAttributeList);\n-            for (int i = 0; i < fAttributeList.size(); i++) {\n-                Attr attr = (Attr) fAttributeList.get(i);\n+            List<Node> attrList = attributes.cloneMap(new ArrayList<>());\n+            for (int i = 0; i < attrList.size(); i++) {\n+                Attr attr = (Attr) attrList.get(i);\n                 fLocator.fRelatedNode = attr;\n \n                 if (DEBUG) {"
      },
      {
        "sha": "387b450826bc8b5ad6ef448aa98cdadc827d1f49",
        "filename": "src/java.xml/share/classes/com/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl.java",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FNamedNodeMapImpl.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FNamedNodeMapImpl.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.xml%2Fshare%2Fclasses%2Fcom%2Fsun%2Forg%2Fapache%2Fxerces%2Finternal%2Fdom%2FNamedNodeMapImpl.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2017, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and/or its affiliates. All rights reserved.\n  */\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one or more\n@@ -56,7 +56,7 @@\n  * @xerces.internal\n  *\n  * @since  PR-DOM-Level-1-19980818.\n- * @LastModified: Jan 2018\n+ * @LastModified: June 2022\n  */\n public class NamedNodeMapImpl\n     implements NamedNodeMap, Serializable {\n@@ -196,7 +196,7 @@ public Node setNamedItem(Node arg)\n         } else {\n             i = -1 - i; // Insert point (may be end of list)\n             if (null == nodes) {\n-                nodes = new ArrayList<>(5);\n+                nodes = new ArrayList<>();\n             }\n             nodes.add(i, arg);\n         }\n@@ -246,7 +246,7 @@ public Node setNamedItemNS(Node arg)\n             } else {\n                 i = -1 - i; // Insert point (may be end of list)\n                 if (null == nodes) {\n-                    nodes = new ArrayList<>(5);\n+                    nodes = new ArrayList<>();\n                 }\n                 nodes.add(i, arg);\n             }\n@@ -561,7 +561,7 @@ protected int addItem (Node arg) {\n             else {\n                 i = -1 - i; // Insert point (may be end of list)\n                 if (null == nodes) {\n-                    nodes = new ArrayList<>(5);\n+                    nodes = new ArrayList<>();\n                 }\n                 nodes.add(i, arg);\n             }"
      },
      {
        "sha": "4fe80935ed184e2fbced1752ac14cc8d2057a3cf",
        "filename": "src/java.xml/share/legal/dom.md",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Flegal%2Fdom.md",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Flegal%2Fdom.md",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.xml%2Fshare%2Flegal%2Fdom.md?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,20 @@\n ## DOM Level 3 Core Specification v1.0\n \n+### W3C Software Notice\n+<pre>\n+Copyright © 2004 World Wide Web Consortium, (Massachusetts Institute of Technology,\n+European Research Consortium for Informatics and Mathematics, Keio University).\n+All Rights Reserved.\n+\n+The DOM bindings are published under the W3C Software Copyright Notice and License.\n+The software license requires \"Notice of any changes or modifications to the W3C\n+files, including the date changes were made.\" Consequently, modified versions of\n+the DOM bindings must document that they do not conform to the W3C standard; in the\n+case of the IDL definitions, the pragma prefix can no longer be 'w3c.org'; in the\n+case of the Java language binding, the package names can no longer be in the\n+'org.w3c' package.\n+</pre>\n+\n ### W3C License\n <pre>\n "
      },
      {
        "sha": "bc566b7d2dbd9746f1085f1d19c70e57cb9654ca",
        "filename": "src/java.xml/share/legal/jcup.md",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Flegal%2Fjcup.md",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjava.xml%2Fshare%2Flegal%2Fjcup.md",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjava.xml%2Fshare%2Flegal%2Fjcup.md?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,8 +1,8 @@\n ## CUP Parser Generator for Java v 0.11b\n \n ### CUP Parser Generator License\n-<pre>\n \n+```\n Copyright 1996-2015 by Scott Hudson, Frank Flannery, C. Scott Ananian, Michael Petter\n \n Permission to use, copy, modify, and distribute this software and its\n@@ -20,5 +20,12 @@ any special, indirect or consequential damages or any damages whatsoever\n resulting from loss of use, data or profits, whether in an action of\n contract, negligence or other tortious action, arising out of or in\n connection with the use or performance of this software.\n+```\n+---\n+```\n+This is an open source license. It is also GPL-Compatible (see entry for\n+\"Standard ML of New Jersey\"). The portions of CUP output which are hard-coded\n+into the CUP source code are (naturally) covered by this same license, as is\n+the CUP runtime code linked with the generated parser.\n+```\n \n-</pre>"
      },
      {
        "sha": "47c8217a255a3db90c9b82f05aa8ae69acce35d7",
        "filename": "src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Attr.java",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FAttr.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FAttr.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FAttr.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -862,7 +862,7 @@ public Object attribLazyConstantValue(Env<AttrContext> env,\n             Type itype = attribExpr(variable.init, env, type);\n             if (variable.isImplicitlyTyped()) {\n                 //fixup local variable type\n-                type = variable.type = variable.sym.type = chk.checkLocalVarType(variable, itype.baseType(), variable.name);\n+                type = variable.type = variable.sym.type = chk.checkLocalVarType(variable, itype, variable.name);\n             }\n             if (itype.constValue() != null) {\n                 return coerce(itype, type).constValue();\n@@ -1314,7 +1314,7 @@ public void visitVarDef(JCVariableDecl tree) {\n                     attribExpr(tree.init, initEnv, v.type);\n                     if (tree.isImplicitlyTyped()) {\n                         //fixup local variable type\n-                        v.type = chk.checkLocalVarType(tree, tree.init.type.baseType(), tree.name);\n+                        v.type = chk.checkLocalVarType(tree, tree.init.type, tree.name);\n                     }\n                 }\n                 if (tree.isImplicitlyTyped()) {\n@@ -2594,7 +2594,7 @@ Type adjustMethodReturnType(Symbol msym, Type qualifierType, Name methodName, Li\n                     argtypes.isEmpty()) {\n                 // as a special case, x.getClass() has type Class<? extends |X|>\n                 return new ClassType(restype.getEnclosingType(),\n-                        List.of(new WildcardType(types.erasure(qualifierType),\n+                        List.of(new WildcardType(types.erasure(qualifierType.baseType()),\n                                 BoundKind.EXTENDS,\n                                 syms.boundClass)),\n                         restype.tsym,"
      },
      {
        "sha": "946aa242e7b86d0b6ada210aeaa99f74f0b97121",
        "filename": "src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Check.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FCheck.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FCheck.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FCheck.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -985,7 +985,7 @@ Type checkLocalVarType(DiagnosticPosition pos, Type t, Name name) {\n         }\n \n         //upward project the initializer type\n-        return types.upward(t, types.captures(t));\n+        return types.upward(t, types.captures(t)).baseType();\n     }\n \n     Type checkMethod(final Type mtype,"
      },
      {
        "sha": "c8696c81ffae8c4559290e2c9a62c1647de195ad",
        "filename": "src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FResolve.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FResolve.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FResolve.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -3656,7 +3656,9 @@ class ConstructorReferenceLookupHelper extends ReferenceLookupHelper {\n                 List<Type> typeargtypes, MethodResolutionPhase maxPhase) {\n             super(referenceTree, names.init, site, argtypes, typeargtypes, maxPhase);\n             if (site.isRaw()) {\n-                this.site = new ClassType(site.getEnclosingType(), site.tsym.type.getTypeArguments(), site.tsym, site.getMetadata());\n+                this.site = new ClassType(site.getEnclosingType(),\n+                        !(site.tsym.isInner() && site.getEnclosingType().isRaw()) ?\n+                                site.tsym.type.getTypeArguments() : List.nil(), site.tsym, site.getMetadata());\n                 needsInference = true;\n             }\n         }"
      },
      {
        "sha": "fda59d6ddaadfe5c6ffd0e505e9b339e10e1ed70",
        "filename": "src/jdk.compiler/share/classes/com/sun/tools/javac/comp/TransPatterns.java",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FTransPatterns.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FTransPatterns.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fcomp%2FTransPatterns.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -341,9 +341,8 @@ private void handleSwitch(JCTree tree,\n             JCCase lastCase = cases.last();\n \n             if (hasTotalPattern && !hasNullCase) {\n-                JCCase last = lastCase;\n-                if (last.labels.stream().noneMatch(l -> l.hasTag(Tag.DEFAULTCASELABEL))) {\n-                    last.labels = last.labels.prepend(makeLit(syms.botType, null));\n+                if (cases.stream().flatMap(c -> c.labels.stream()).noneMatch(l -> l.hasTag(Tag.DEFAULTCASELABEL))) {\n+                    lastCase.labels = lastCase.labels.prepend(makeLit(syms.botType, null));\n                     hasNullCase = true;\n                 }\n             }"
      },
      {
        "sha": "c57b3b6eb199eddbd65fec0ca0f23c5037465734",
        "filename": "src/jdk.compiler/share/classes/com/sun/tools/javac/parser/ReferenceParser.java",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fparser%2FReferenceParser.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fparser%2FReferenceParser.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fparser%2FReferenceParser.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -25,6 +25,9 @@\n \n package com.sun.tools.javac.parser;\n \n+import com.sun.source.tree.AnnotatedTypeTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.source.util.TreeScanner;\n import com.sun.tools.javac.parser.Tokens.TokenKind;\n import com.sun.tools.javac.tree.JCTree;\n import com.sun.tools.javac.util.List;\n@@ -193,6 +196,21 @@ private List<JCTree> parseParams(String s) throws ParseException {\n         if (p.token().kind != TokenKind.EOF)\n             throw new ParseException(\"dc.ref.unexpected.input\");\n \n+        if (new TypeAnnotationFinder().scan(paramTypes, null) != null)\n+            throw new ParseException(\"dc.ref.annotations.not.allowed\");\n+\n         return paramTypes.toList();\n     }\n-}\n+\n+    static class TypeAnnotationFinder extends TreeScanner<Tree, Void> {\n+        @Override\n+        public Tree visitAnnotatedType(AnnotatedTypeTree t, Void ignore) {\n+            return t;\n+        }\n+\n+        @Override\n+        public Tree reduce(Tree t1, Tree t2) {\n+            return t1 != null ? t1 : t2;\n+        }\n+    }\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "209b891982e3b7f9c953b2326d05dc13082c3adb",
        "filename": "src/jdk.compiler/share/classes/com/sun/tools/javac/resources/compiler.properties",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fcompiler.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fcompiler.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fcompiler.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -3269,6 +3269,9 @@ compiler.err.dc.unterminated.signature=\\\n compiler.err.dc.unterminated.string=\\\n     unterminated string\n \n+compiler.err.dc.ref.annotations.not.allowed=\\\n+    annotations not allowed\n+\n ###\n # errors related to modules\n "
      },
      {
        "sha": "1d44f341cab45fc11eab2476293644eeeb29bc1f",
        "filename": "src/jdk.compiler/share/classes/com/sun/tools/javac/resources/javac.properties",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fjavac.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fjavac.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fjavac.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -363,8 +363,8 @@ These extra options are subject to change without notice.\n \n javac.msg.bug=\\\n An exception has occurred in the compiler ({0}). \\\n-Please file a bug against the Java compiler via the Java bug reporting page (http://bugreport.java.com) \\\n-after checking the Bug Database (http://bugs.java.com) for duplicates. \\\n+Please file a bug against the Java compiler via the Java bug reporting page (https://bugreport.java.com) \\\n+after checking the Bug Database (https://bugs.java.com) for duplicates. \\\n Include your program, the following diagnostic, and the parameters passed to the Java compiler in your report. Thank you.\n \n javac.msg.io=\\"
      },
      {
        "sha": "d7fe10a1333476574caeed4bd87284719afcfa01",
        "filename": "src/jdk.compiler/share/classes/com/sun/tools/javac/resources/javac_ja.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fjavac_ja.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fjavac_ja.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fjavac_ja.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -208,7 +208,7 @@ javac.msg.usage=\\u4F7F\\u7528\\u65B9\\u6CD5: {0} <options> <source files>\\n\\u4F7F\\u\n \n javac.msg.usage.nonstandard.footer=\\u3053\\u306E\\u8FFD\\u52A0\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u4E88\\u544A\\u306A\\u3057\\u306B\\u5909\\u66F4\\u3055\\u308C\\u308B\\u3053\\u3068\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\n \n-javac.msg.bug=\\u30B3\\u30F3\\u30D1\\u30A4\\u30E9\\u3067\\u4F8B\\u5916\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F({0})\\u3002Bug Database (http://bugs.java.com)\\u3067\\u91CD\\u8907\\u304C\\u306A\\u3044\\u304B\\u3092\\u3054\\u78BA\\u8A8D\\u306E\\u3046\\u3048\\u3001Java bug\\u30EC\\u30DD\\u30FC\\u30C8\\u30FB\\u30DA\\u30FC\\u30B8(http://bugreport.java.com)\\u3067Java\\u30B3\\u30F3\\u30D1\\u30A4\\u30E9\\u306B\\u5BFE\\u3059\\u308Bbug\\u306E\\u767B\\u9332\\u3092\\u304A\\u9858\\u3044\\u3044\\u305F\\u3057\\u307E\\u3059\\u3002\\u30EC\\u30DD\\u30FC\\u30C8\\u306B\\u306F\\u3001\\u305D\\u306E\\u30D7\\u30ED\\u30B0\\u30E9\\u30E0\\u3001\\u4E0B\\u8A18\\u306E\\u8A3A\\u65AD\\u5185\\u5BB9\\u3001\\u304A\\u3088\\u3073Java\\u30B3\\u30F3\\u30D1\\u30A4\\u30E9\\u306B\\u6E21\\u3057\\u305F\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u3092\\u542B\\u3081\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u3054\\u5354\\u529B\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3059\\u3002\n+javac.msg.bug=\\u30B3\\u30F3\\u30D1\\u30A4\\u30E9\\u3067\\u4F8B\\u5916\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F({0})\\u3002Bug Database (https://bugs.java.com)\\u3067\\u91CD\\u8907\\u304C\\u306A\\u3044\\u304B\\u3092\\u3054\\u78BA\\u8A8D\\u306E\\u3046\\u3048\\u3001Java bug\\u30EC\\u30DD\\u30FC\\u30C8\\u30FB\\u30DA\\u30FC\\u30B8(https://bugreport.java.com)\\u3067Java\\u30B3\\u30F3\\u30D1\\u30A4\\u30E9\\u306B\\u5BFE\\u3059\\u308Bbug\\u306E\\u767B\\u9332\\u3092\\u304A\\u9858\\u3044\\u3044\\u305F\\u3057\\u307E\\u3059\\u3002\\u30EC\\u30DD\\u30FC\\u30C8\\u306B\\u306F\\u3001\\u305D\\u306E\\u30D7\\u30ED\\u30B0\\u30E9\\u30E0\\u3001\\u4E0B\\u8A18\\u306E\\u8A3A\\u65AD\\u5185\\u5BB9\\u3001\\u304A\\u3088\\u3073Java\\u30B3\\u30F3\\u30D1\\u30A4\\u30E9\\u306B\\u6E21\\u3057\\u305F\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u3092\\u542B\\u3081\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u3054\\u5354\\u529B\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3059\\u3002\n \n javac.msg.io=\\n\\n\\u5165\\u51FA\\u529B\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\\u3002\\n\\u8A73\\u7D30\\u306F\\u6B21\\u306E\\u30B9\\u30BF\\u30C3\\u30AF\\u30C8\\u30EC\\u30FC\\u30B9\\u3067\\u8ABF\\u67FB\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\n\n "
      },
      {
        "sha": "c1d5a8c8d77a9839800e01bc711930644327572b",
        "filename": "src/jdk.compiler/share/classes/com/sun/tools/javac/resources/javac_zh_CN.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fjavac_zh_CN.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fjavac_zh_CN.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.compiler%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjavac%2Fresources%2Fjavac_zh_CN.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -208,7 +208,7 @@ javac.msg.usage=\\u7528\\u6CD5: {0} <\\u9009\\u9879> <\\u6E90\\u6587\\u4EF6>\\n\\u4F7F\\u7\n \n javac.msg.usage.nonstandard.footer=\\u8FD9\\u4E9B\\u989D\\u5916\\u9009\\u9879\\u5982\\u6709\\u66F4\\u6539, \\u6055\\u4E0D\\u53E6\\u884C\\u901A\\u77E5\\u3002\n \n-javac.msg.bug=\\u7F16\\u8BD1\\u5668 ({0}) \\u4E2D\\u51FA\\u73B0\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\u5982\\u679C\\u5728 Bug Database (http://bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u8BE5\\u9519\\u8BEF\\uFF0C\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (http://bugreport.java.com) \\u5EFA\\u7ACB\\u8BE5 Java \\u7F16\\u8BD1\\u5668 Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u60A8\\u7684\\u7A0B\\u5E8F\\u3001\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u4EE5\\u53CA\\u4F20\\u9012\\u5230 Java \\u7F16\\u8BD1\\u5668\\u7684\\u53C2\\u6570\\u3002\\u8C22\\u8C22\\u3002\n+javac.msg.bug=\\u7F16\\u8BD1\\u5668 ({0}) \\u4E2D\\u51FA\\u73B0\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\u5982\\u679C\\u5728 Bug Database (https://bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u8BE5\\u9519\\u8BEF\\uFF0C\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (https://bugreport.java.com) \\u5EFA\\u7ACB\\u8BE5 Java \\u7F16\\u8BD1\\u5668 Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u60A8\\u7684\\u7A0B\\u5E8F\\u3001\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u4EE5\\u53CA\\u4F20\\u9012\\u5230 Java \\u7F16\\u8BD1\\u5668\\u7684\\u53C2\\u6570\\u3002\\u8C22\\u8C22\\u3002\n \n javac.msg.io=\\n\\n\\u53D1\\u751F\\u8F93\\u5165/\\u8F93\\u51FA\\u9519\\u8BEF\\u3002\\n\\u6709\\u5173\\u8BE6\\u7EC6\\u4FE1\\u606F, \\u8BF7\\u53C2\\u9605\\u4EE5\\u4E0B\\u5806\\u6808\\u8DDF\\u8E2A\\u3002\\n\n "
      },
      {
        "sha": "00fedc8d0e003fe8ae1197a07ca1d5678e6c85a7",
        "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/Config.java",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FConfig.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FConfig.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FConfig.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -358,7 +358,7 @@ private static String expand(final String s) throws IOException {\n         try {\n             return PropertyExpander.expand(s);\n         } catch (Exception e) {\n-            throw new RuntimeException(e.getMessage());\n+            throw new RuntimeException(e.getMessage(), e);\n         }\n     }\n \n@@ -396,6 +396,10 @@ private ConfigurationException excLine(String msg) {\n         return new ConfigurationException(msg + \", line \" + st.lineno());\n     }\n \n+    private ConfigurationException excLine(String msg, Throwable e) {\n+        return new ConfigurationException(msg + \", line \" + st.lineno(), e);\n+    }\n+\n     private void parse() throws IOException {\n         while (true) {\n             int token = nextToken();\n@@ -792,7 +796,7 @@ private long parseMechanism(String mech) throws IOException {\n             try {\n                 return Functions.getMechanismId(mech);\n             } catch (IllegalArgumentException e) {\n-                throw excLine(\"Unknown mechanism: \" + mech);\n+                throw excLine(\"Unknown mechanism: \" + mech, e);\n             }\n         }\n     }\n@@ -952,7 +956,7 @@ private long parseObjectClass() throws IOException {\n         try {\n             return Functions.getObjectClassId(name);\n         } catch (IllegalArgumentException e) {\n-            throw excLine(\"Unknown object class \" + name);\n+            throw excLine(\"Unknown object class \" + name, e);\n         }\n     }\n \n@@ -964,7 +968,7 @@ private long parseKeyAlgorithm() throws IOException {\n             try {\n                 return Functions.getKeyId(name);\n             } catch (IllegalArgumentException e) {\n-                throw excLine(\"Unknown key algorithm \" + name);\n+                throw excLine(\"Unknown key algorithm \" + name, e);\n             }\n         }\n     }\n@@ -976,7 +980,7 @@ private long decodeAttributeName(String name) throws IOException {\n             try {\n                 return Functions.getAttributeId(name);\n             } catch (IllegalArgumentException e) {\n-                throw excLine(\"Unknown attribute name \" + name);\n+                throw excLine(\"Unknown attribute name \" + name, e);\n             }\n         }\n     }\n@@ -1032,4 +1036,8 @@ class ConfigurationException extends IOException {\n     ConfigurationException(String msg) {\n         super(msg);\n     }\n+\n+    ConfigurationException(String msg, Throwable e) {\n+        super(msg, e);\n+    }\n }"
      },
      {
        "sha": "eaac4f008c42fe1ca0ef8cf2e41a3354dcad5daf",
        "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11AEADCipher.java",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11AEADCipher.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11AEADCipher.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11AEADCipher.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2019, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -140,7 +140,7 @@ private enum Transformation {\n             try {\n                 engineSetPadding(algoParts[2]);\n             } catch (NoSuchPaddingException e) {\n-                throw new NoSuchAlgorithmException();\n+                throw new NoSuchAlgorithmException(e);\n             }\n         } else if (algoParts[0].equals(\"ChaCha20-Poly1305\")) {\n             fixedKeySize = 32;"
      },
      {
        "sha": "8a309549e3ace88e3935bdd8a7cf8e95b400c8ce",
        "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Cipher.java",
        "status": "modified",
        "additions": 23,
        "deletions": 7,
        "changes": 30,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11Cipher.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11Cipher.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11Cipher.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -808,13 +808,21 @@ private int implDoFinal(byte[] out, int outOfs, int outLen)\n                 if (paddingObj != null) {\n                     int startOff = 0;\n                     if (reqBlockUpdates) {\n-                        startOff = padBufferLen;\n+                        // call C_EncryptUpdate first if the padBuffer is full\n+                        // to make room for padding bytes\n+                        if (padBufferLen == padBuffer.length) {\n+                            k = token.p11.C_EncryptUpdate(session.id(),\n+                                0, padBuffer, 0, padBufferLen,\n+                                0, out, outOfs, outLen);\n+                        } else {\n+                            startOff = padBufferLen;\n+                        }\n                     }\n                     int actualPadLen = paddingObj.setPaddingBytes(padBuffer,\n                             startOff, requiredOutLen - bytesBuffered);\n-                    k = token.p11.C_EncryptUpdate(session.id(),\n+                    k += token.p11.C_EncryptUpdate(session.id(),\n                             0, padBuffer, 0, startOff + actualPadLen,\n-                            0, out, outOfs, outLen);\n+                            0, out, outOfs + k, outLen - k);\n                 }\n                 // Some implementations such as the NSS Software Token do not\n                 // cancel the operation upon a C_EncryptUpdate failure (as\n@@ -896,13 +904,21 @@ private int implDoFinal(ByteBuffer outBuffer)\n                 if (paddingObj != null) {\n                     int startOff = 0;\n                     if (reqBlockUpdates) {\n-                        startOff = padBufferLen;\n+                        // call C_EncryptUpdate first if the padBuffer is full\n+                        // to make room for padding bytes\n+                        if (padBufferLen == padBuffer.length) {\n+                            k = token.p11.C_EncryptUpdate(session.id(),\n+                                0, padBuffer, 0, padBufferLen,\n+                                outAddr, outArray, outOfs, outLen);\n+                        } else {\n+                            startOff = padBufferLen;\n+                        }\n                     }\n                     int actualPadLen = paddingObj.setPaddingBytes(padBuffer,\n                             startOff, requiredOutLen - bytesBuffered);\n-                    k = token.p11.C_EncryptUpdate(session.id(),\n+                    k += token.p11.C_EncryptUpdate(session.id(),\n                             0, padBuffer, 0, startOff + actualPadLen,\n-                            outAddr, outArray, outOfs, outLen);\n+                            outAddr, outArray, outOfs + k, outLen - k);\n                 }\n                 // Some implementations such as the NSS Software Token do not\n                 // cancel the operation upon a C_EncryptUpdate failure (as"
      },
      {
        "sha": "1301f8f2bcb2965130ff21f5c3dc523bbb9d3181",
        "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11KeyPairGenerator.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11KeyPairGenerator.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11KeyPairGenerator.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11KeyPairGenerator.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -145,7 +145,7 @@ public void initialize(int keySize, SecureRandom random) {\n         try {\n             checkKeySize(keySize, null);\n         } catch (InvalidAlgorithmParameterException e) {\n-            throw new InvalidParameterException(e.getMessage());\n+            throw (InvalidParameterException) new InvalidParameterException(e.getMessage()).initCause(e);\n         }\n         this.params = null;\n         if (algorithm.equals(\"EC\")) {"
      },
      {
        "sha": "f4e68358b537247273bddb327d32d4cf60d6b459",
        "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11KeyStore.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11KeyStore.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11KeyStore.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11KeyStore.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1323,7 +1323,7 @@ private PrivateKey loadPkey(Session session, long oHandle)\n                 RSAKeyFactory.checkKeyLengths(keyLength, null,\n                     -1, Integer.MAX_VALUE);\n             } catch (InvalidKeyException e) {\n-                throw new KeyStoreException(e.getMessage());\n+                throw new KeyStoreException(e.getMessage(), e);\n             }\n \n             return P11Key.privateKey(session,"
      },
      {
        "sha": "31932f77a1225a2bb1acbebe7807dc472bb3a294",
        "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11PSSSignature.java",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11PSSSignature.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11PSSSignature.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11PSSSignature.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2019, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -569,10 +569,10 @@ protected void engineUpdate(byte[] b, int ofs, int len)\n         case T_UPDATE:\n             try {\n                 if (mode == M_SIGN) {\n-                    System.out.println(this + \": Calling C_SignUpdate\");\n+                    if (DEBUG) System.out.println(this + \": Calling C_SignUpdate\");\n                     token.p11.C_SignUpdate(session.id(), 0, b, ofs, len);\n                 } else {\n-                    System.out.println(this + \": Calling C_VerfifyUpdate\");\n+                    if (DEBUG) System.out.println(this + \": Calling C_VerfifyUpdate\");\n                     token.p11.C_VerifyUpdate(session.id(), 0, b, ofs, len);\n                 }\n                 bytesProcessed += len;\n@@ -618,11 +618,11 @@ protected void engineUpdate(ByteBuffer byteBuffer) {\n             int ofs = byteBuffer.position();\n             try {\n                 if (mode == M_SIGN) {\n-                    System.out.println(this + \": Calling C_SignUpdate\");\n+                    if (DEBUG) System.out.println(this + \": Calling C_SignUpdate\");\n                     token.p11.C_SignUpdate\n                         (session.id(), addr + ofs, null, 0, len);\n                 } else {\n-                    System.out.println(this + \": Calling C_VerifyUpdate\");\n+                    if (DEBUG) System.out.println(this + \": Calling C_VerifyUpdate\");\n                     token.p11.C_VerifyUpdate\n                         (session.id(), addr + ofs, null, 0, len);\n                 }"
      },
      {
        "sha": "091020380f0388eec27bfc5be8ceeac02e63d0d8",
        "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Signature.java",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11Signature.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11Signature.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FP11Signature.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -433,7 +433,7 @@ private void checkRSAKeyLength(int len) throws InvalidKeyException {\n             padding = RSAPadding.getInstance\n                 (RSAPadding.PAD_BLOCKTYPE_1, (len + 7) >> 3);\n         } catch (InvalidAlgorithmParameterException iape) {\n-            throw new InvalidKeyException(iape.getMessage());\n+            throw new InvalidKeyException(iape.getMessage(), iape);\n         }\n         int maxDataSize = padding.getMaxDataSize();\n         int encodedLength = switch (algorithm) {\n@@ -804,7 +804,7 @@ private static byte[] dsaToASN1(byte[] signature) {\n             DerValue result = new DerValue(DerValue.tag_Sequence,\n                                            outseq.toByteArray());\n             return result.toByteArray();\n-        } catch (java.io.IOException e) {\n+        } catch (IOException e) {\n             throw new RuntimeException(\"Internal error\", e);\n         }\n     }"
      },
      {
        "sha": "aee9625a7c35aec392b08f4a56f8975d178f3ba2",
        "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/SessionManager.java",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FSessionManager.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FSessionManager.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2FSessionManager.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -207,7 +207,12 @@ void demoteObjSession(Session session) {\n             // will be added to correct pool on release, nothing to do now\n             return;\n         }\n-        opSessions.release(session);\n+        // Objects could have been added to this session by other thread between\n+        // check in Session.removeObject method and objSessions.remove call\n+        // higher. Therefore releaseSession method, which performs additional\n+        // check for objects, is used here to avoid placing this session\n+        // in wrong pool due to race condition.\n+        releaseSession(session);\n     }\n \n     private Session openSession() throws PKCS11Exception {"
      },
      {
        "sha": "172625357969d429a89cca340c4f7a58cd2b7fe4",
        "filename": "src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/wrapper/PKCS11Exception.java",
        "status": "modified",
        "additions": 25,
        "deletions": 2,
        "changes": 27,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2Fwrapper%2FPKCS11Exception.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2Fwrapper%2FPKCS11Exception.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.cryptoki%2Fshare%2Fclasses%2Fsun%2Fsecurity%2Fpkcs11%2Fwrapper%2FPKCS11Exception.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -209,14 +209,37 @@ static enum RV {\n         }\n     };\n \n+    public static enum RV_VENDOR {\n+        // NSS\n+        CKR_NSS_CERTDB_FAILED(0xCE534351L),\n+        CKR_NSS_KEYDB_FAILED(0xCE534352L);\n+\n+        private final long value;\n+\n+        RV_VENDOR(long value) {\n+            this.value = value;\n+        }\n+    };\n+\n     private static String lookup(long errorCode) {\n         for (RV r : RV.values()) {\n             if (r.value == errorCode) {\n                 return r.name();\n             }\n         }\n-        // for unknown PKCS11 return values, just use hex as its string\n-        return \"0x\" + Functions.toFullHexString((int)errorCode);\n+        // for unknown PKCS11 return values, use hex as its string\n+        String res = \"0x\" + Functions.toFullHexString((int)errorCode);\n+        // for vendor-defined values, check the enum for vendors and include\n+        // potential matches\n+        if ((errorCode & 0x80000000L) != 0) {\n+            for (RV_VENDOR r : RV_VENDOR.values()) {\n+                if (r.value == errorCode) {\n+                    res += \"(\" + r.name() + \")\";\n+                    break;\n+                }\n+            }\n+        }\n+        return res;\n     }\n \n     /**"
      },
      {
        "sha": "6c53dabce17b03d05b83d19bb3d1f1a26818790d",
        "filename": "src/jdk.crypto.mscapi/windows/native/libsunmscapi/security.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 5,
        "changes": 30,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.mscapi%2Fwindows%2Fnative%2Flibsunmscapi%2Fsecurity.cpp",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.crypto.mscapi%2Fwindows%2Fnative%2Flibsunmscapi%2Fsecurity.cpp",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.crypto.mscapi%2Fwindows%2Fnative%2Flibsunmscapi%2Fsecurity.cpp?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -128,22 +128,43 @@ void ThrowExceptionWithMessage(JNIEnv *env, const char *exceptionName,\n     }\n }\n \n+void ThrowExceptionWithMessageAndErrcode(JNIEnv *env, const char *exceptionName,\n+                                         const char *msg, DWORD dwError) {\n+    char szMessage[500];\n+    szMessage[0] = '\\0';\n+    char szMessage2[1024];\n+    szMessage2[0] = '\\0';\n+\n+    DWORD res = FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM, NULL, dwError,\n+        NULL, szMessage, sizeof(szMessage), NULL);\n+    if (res == 0) {\n+        strcpy(szMessage, \"Unknown error\");\n+    }\n+    snprintf(szMessage2, sizeof(szMessage2), \"%s: error %lu, %s\", msg, dwError, szMessage);\n+\n+    ThrowExceptionWithMessage(env, exceptionName, szMessage2);\n+}\n+\n+\n /*\n  * Throws an arbitrary Java exception.\n  * The exception message is a Windows system error message.\n  */\n void ThrowException(JNIEnv *env, const char *exceptionName, DWORD dwError)\n {\n-    char szMessage[1024];\n+    char szMessage[500];\n     szMessage[0] = '\\0';\n+    char szMessage2[1024];\n+    szMessage2[0] = '\\0';\n \n     DWORD res = FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM, NULL, dwError,\n         NULL, szMessage, sizeof(szMessage), NULL);\n     if (res == 0) {\n         strcpy(szMessage, \"Unknown error\");\n     }\n+    snprintf(szMessage2, sizeof(szMessage2), \"error %lu, %s\", dwError, szMessage);\n \n-    ThrowExceptionWithMessage(env, exceptionName, szMessage);\n+    ThrowExceptionWithMessage(env, exceptionName, szMessage2);\n }\n \n /*\n@@ -1834,8 +1855,7 @@ JNIEXPORT void JNICALL Java_sun_security_mscapi_CKeyStore_destroyKeyContainer\n         // Destroying the default key container is not permitted\n         // (because it may contain more one keypair).\n         if (pszKeyContainerName == NULL) {\n-\n-            ThrowException(env, KEYSTORE_EXCEPTION, NTE_BAD_KEYSET_PARAM);\n+            ThrowExceptionWithMessage(env, KEYSTORE_EXCEPTION, \"key container name was NULL, NTE_BAD_KEYSET_PARAM\");\n             __leave;\n         }\n \n@@ -1847,7 +1867,7 @@ JNIEXPORT void JNICALL Java_sun_security_mscapi_CKeyStore_destroyKeyContainer\n             PROV_RSA_FULL,\n             CRYPT_DELETEKEYSET) == FALSE)\n         {\n-            ThrowException(env, KEYSTORE_EXCEPTION, GetLastError());\n+            ThrowExceptionWithMessageAndErrcode(env, KEYSTORE_EXCEPTION, \"CryptAcquireContext failure\", GetLastError());\n             __leave;\n         }\n "
      },
      {
        "sha": "ee4b0f33d47e8f6b1c9cbb88e06c085509548b82",
        "filename": "src/jdk.hotspot.agent/doc/clhsdb.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.hotspot.agent%2Fdoc%2Fclhsdb.html",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.hotspot.agent%2Fdoc%2Fclhsdb.html",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.hotspot.agent%2Fdoc%2Fclhsdb.html?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -90,7 +90,7 @@ <h3>Annotated output of CLHSDB help command</h3>\n   vmstructsdump <font color=\"red\">dump hotspot type library in text</font>\n   verbose true | false <font color=\"red\">turn on/off verbose mode</font>\n   versioncheck [ true | false ] <font color=\"red\">turn on/off debuggee VM version check</font>\n-  whatis address <font color=\"red\">print info about any arbitrary address</font>\n+  whatis address <font color=\"red\">print info about any arbitrary address. alias for findpc command</font>\n   where { -a | id } <font color=\"red\">print Java stack trace of given Java thread or all Java threads (-a)</font>\n </code>\n </pre>"
      },
      {
        "sha": "bc696e8f1c68d7f5f8c767297f01d955c5c9314f",
        "filename": "src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/CommandProcessor.java",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.hotspot.agent%2Fshare%2Fclasses%2Fsun%2Fjvm%2Fhotspot%2FCommandProcessor.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.hotspot.agent%2Fshare%2Fclasses%2Fsun%2Fjvm%2Fhotspot%2FCommandProcessor.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.hotspot.agent%2Fshare%2Fclasses%2Fsun%2Fjvm%2Fhotspot%2FCommandProcessor.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -613,6 +613,18 @@ public void doit(Tokens t) {\n                 }\n             }\n         },\n+        // \"whatis\" is just an alias for \"findpc\". It's kept around for compatiblity reasons.\n+        new Command(\"whatis\", \"whatis address\", false) {\n+            public void doit(Tokens t) {\n+                if (t.countTokens() != 1) {\n+                    usage();\n+                } else {\n+                    Address a = VM.getVM().getDebugger().parseAddress(t.nextToken());\n+                    PointerLocation loc = PointerFinder.find(a);\n+                    loc.printOn(out);\n+                }\n+            }\n+        },\n         new Command(\"symbol\", \"symbol address\", false) {\n             public void doit(Tokens t) {\n                 if (t.countTokens() != 1) {"
      },
      {
        "sha": "311e644c34575178acfbd568022256b61cf3346d",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/CompilerToVM.java",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FCompilerToVM.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FCompilerToVM.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FCompilerToVM.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -210,6 +210,14 @@ public static CompilerToVM compilerToVM() {\n \n     native HotSpotResolvedJavaType lookupClass(Class<?> javaClass);\n \n+    /**\n+     * Resolves the entry at index {@code cpi} in {@code constantPool} to an interned String object.\n+     *\n+     * The behavior of this method is undefined if {@code cpi} does not denote an\n+     * {@code JVM_CONSTANT_String}.\n+     */\n+    native JavaConstant getUncachedStringInPool(HotSpotConstantPool constantPool, int cpi);\n+\n     /**\n      * Resolves the entry at index {@code cpi} in {@code constantPool} to an object, looking in the\n      * constant pool cache first."
      },
      {
        "sha": "8bdc7f2fd4d8f5792e5611ebca1a6611ebbd397e",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotConstantPool.java",
        "status": "modified",
        "additions": 77,
        "deletions": 32,
        "changes": 109,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotConstantPool.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotConstantPool.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotConstantPool.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -245,11 +245,23 @@ private static int rawIndexToConstantPoolCacheIndex(int rawIndex, int opcode) {\n         if (opcode == Bytecodes.INVOKEDYNAMIC) {\n             index = rawIndex;\n             // See: ConstantPool::is_invokedynamic_index\n-            assert index < 0 : \"not an invokedynamic constant pool index \" + index;\n+            if (index >= 0) {\n+                throw new IllegalArgumentException(\"not an invokedynamic constant pool index \" + index);\n+            }\n         } else {\n-            assert opcode == Bytecodes.GETFIELD || opcode == Bytecodes.PUTFIELD || opcode == Bytecodes.GETSTATIC || opcode == Bytecodes.PUTSTATIC || opcode == Bytecodes.INVOKEINTERFACE ||\n-                            opcode == Bytecodes.INVOKEVIRTUAL || opcode == Bytecodes.INVOKESPECIAL || opcode == Bytecodes.INVOKESTATIC : \"unexpected invoke opcode \" + opcode;\n-            index = rawIndex + config().constantPoolCpCacheIndexTag;\n+            if (opcode == Bytecodes.GETFIELD ||\n+                            opcode == Bytecodes.PUTFIELD ||\n+                            opcode == Bytecodes.GETSTATIC ||\n+                            opcode == Bytecodes.PUTSTATIC ||\n+                            opcode == Bytecodes.INVOKEINTERFACE ||\n+                            opcode == Bytecodes.INVOKEVIRTUAL ||\n+                            opcode == Bytecodes.INVOKESPECIAL ||\n+                            opcode == Bytecodes.INVOKESTATIC) {\n+                index = rawIndex + config().constantPoolCpCacheIndexTag;\n+            } else {\n+                throw new IllegalArgumentException(\"unexpected opcode \" + opcode);\n+\n+            }\n         }\n         return index;\n     }\n@@ -281,7 +293,9 @@ private static boolean isInvokedynamicIndex(int index) {\n      * See {@code ConstantPool::decode_invokedynamic_index}.\n      */\n     private static int decodeInvokedynamicIndex(int i) {\n-        assert isInvokedynamicIndex(i) : i;\n+        if (!isInvokedynamicIndex(i)) {\n+            throw new IllegalArgumentException(\"not an invokedynamic index: \" + i);\n+        }\n         return ~i;\n     }\n \n@@ -301,7 +315,7 @@ public long getMetadataHandle() {\n      * @return constant pool tag\n      */\n     private JvmConstant getTagAt(int index) {\n-        assert checkBounds(index);\n+        checkBounds(index);\n         HotSpotVMConfig config = config();\n         final long metaspaceConstantPoolTags = UNSAFE.getAddress(getMetaspaceConstantPool() + config.constantPoolTagsOffset);\n         final int tag = UNSAFE.getByteVolatile(null, metaspaceConstantPoolTags + config.arrayU1DataOffset + index);\n@@ -318,7 +332,7 @@ private JvmConstant getTagAt(int index) {\n      * @return constant pool entry\n      */\n     long getEntryAt(int index) {\n-        assert checkBounds(index);\n+        checkBounds(index);\n         int offset = index * runtime().getHostJVMCIBackend().getTarget().wordSize;\n         return UNSAFE.getAddress(getMetaspaceConstantPool() + config().constantPoolSize + offset);\n     }\n@@ -330,7 +344,7 @@ long getEntryAt(int index) {\n      * @return integer constant pool entry at index\n      */\n     private int getIntAt(int index) {\n-        assert checkTag(index, constants.jvmInteger);\n+        checkTag(index, constants.jvmInteger);\n         int offset = index * runtime().getHostJVMCIBackend().getTarget().wordSize;\n         return UNSAFE.getInt(getMetaspaceConstantPool() + config().constantPoolSize + offset);\n     }\n@@ -342,7 +356,7 @@ private int getIntAt(int index) {\n      * @return long constant pool entry\n      */\n     private long getLongAt(int index) {\n-        assert checkTag(index, constants.jvmLong);\n+        checkTag(index, constants.jvmLong);\n         int offset = index * runtime().getHostJVMCIBackend().getTarget().wordSize;\n         return UNSAFE.getLong(getMetaspaceConstantPool() + config().constantPoolSize + offset);\n     }\n@@ -354,7 +368,7 @@ private long getLongAt(int index) {\n      * @return float constant pool entry\n      */\n     private float getFloatAt(int index) {\n-        assert checkTag(index, constants.jvmFloat);\n+        checkTag(index, constants.jvmFloat);\n         int offset = index * runtime().getHostJVMCIBackend().getTarget().wordSize;\n         return UNSAFE.getFloat(getMetaspaceConstantPool() + config().constantPoolSize + offset);\n     }\n@@ -366,7 +380,7 @@ private float getFloatAt(int index) {\n      * @return float constant pool entry\n      */\n     private double getDoubleAt(int index) {\n-        assert checkTag(index, constants.jvmDouble);\n+        checkTag(index, constants.jvmDouble);\n         int offset = index * runtime().getHostJVMCIBackend().getTarget().wordSize;\n         return UNSAFE.getDouble(getMetaspaceConstantPool() + config().constantPoolSize + offset);\n     }\n@@ -378,7 +392,7 @@ private double getDoubleAt(int index) {\n      * @return {@code JVM_CONSTANT_NameAndType} constant pool entry\n      */\n     private int getNameAndTypeAt(int index) {\n-        assert checkTag(index, constants.jvmNameAndType);\n+        checkTag(index, constants.jvmNameAndType);\n         int offset = index * runtime().getHostJVMCIBackend().getTarget().wordSize;\n         return UNSAFE.getInt(getMetaspaceConstantPool() + config().constantPoolSize + offset);\n     }\n@@ -460,7 +474,7 @@ private int getKlassRefIndexAt(int index) {\n      * @return klass reference index\n      */\n     private int getUncachedKlassRefIndexAt(int index) {\n-        assert checkTagIsFieldOrMethod(index);\n+        checkTagIsFieldOrMethod(index);\n         int offset = index * runtime().getHostJVMCIBackend().getTarget().wordSize;\n         final int refIndex = UNSAFE.getInt(getMetaspaceConstantPool() + config().constantPoolSize + offset);\n         // klass ref index is in the low 16-bits.\n@@ -471,24 +485,26 @@ private int getUncachedKlassRefIndexAt(int index) {\n      * Checks that the constant pool index {@code index} is in the bounds of the constant pool.\n      *\n      * @param index constant pool index\n-     * @throws AssertionError if the check fails\n+     * @throws IndexOutOfBoundsException if the check fails\n      */\n-    private boolean checkBounds(int index) {\n-        assert 0 <= index && index < length() : \"index \" + index + \" not between 0 and \" + length();\n-        return true;\n+    private void checkBounds(int index) {\n+        if (index < 1 || index >= length()) {\n+            throw new IndexOutOfBoundsException(\"index \" + index + \" not between 1 and \" + length());\n+        }\n     }\n \n     /**\n      * Checks that the constant pool tag at index {@code index} is equal to {@code tag}.\n      *\n      * @param index constant pool index\n      * @param tag expected tag\n-     * @throws AssertionError if the check fails\n+     * @throws IllegalArgumentException if the check fails\n      */\n-    private boolean checkTag(int index, JvmConstant tag) {\n+    private void checkTag(int index, JvmConstant tag) {\n         final JvmConstant tagAt = getTagAt(index);\n-        assert tagAt == tag : \"constant pool tag at index \" + index + \" is \" + tagAt + \" but expected \" + tag;\n-        return true;\n+        if (tagAt != tag) {\n+            throw new IllegalArgumentException(\"constant pool tag at index \" + index + \" is \" + tagAt + \" but expected \" + tag);\n+        }\n     }\n \n     /**\n@@ -497,12 +513,13 @@ private boolean checkTag(int index, JvmConstant tag) {\n      * {@link JvmConstants#jvmInterfaceMethodref}.\n      *\n      * @param index constant pool index\n-     * @throws AssertionError if the check fails\n+     * @throws IllegalArgumentException if the check fails\n      */\n-    private boolean checkTagIsFieldOrMethod(int index) {\n+    private void checkTagIsFieldOrMethod(int index) {\n         final JvmConstant tagAt = getTagAt(index);\n-        assert tagAt == constants.jvmFieldref || tagAt == constants.jvmMethodref || tagAt == constants.jvmInterfaceMethodref : tagAt;\n-        return true;\n+        if (tagAt != constants.jvmFieldref && tagAt != constants.jvmMethodref && tagAt != constants.jvmInterfaceMethodref) {\n+            throw new IllegalArgumentException(\"constant pool tag at index \" + index + \" is \" + tagAt);\n+        }\n     }\n \n     @Override\n@@ -518,9 +535,29 @@ private int flags() {\n         return UNSAFE.getInt(getMetaspaceConstantPool() + config().constantPoolFlagsOffset);\n     }\n \n+    /**\n+     * Gets the {@link JavaConstant} for the {@code ConstantValue} attribute of a field.\n+     */\n+    JavaConstant getStaticFieldConstantValue(int cpi) {\n+        final JvmConstant tag = getTagAt(cpi);\n+        switch (tag.name) {\n+            case \"Integer\":\n+                return JavaConstant.forInt(getIntAt(cpi));\n+            case \"Long\":\n+                return JavaConstant.forLong(getLongAt(cpi));\n+            case \"Float\":\n+                return JavaConstant.forFloat(getFloatAt(cpi));\n+            case \"Double\":\n+                return JavaConstant.forDouble(getDoubleAt(cpi));\n+            case \"String\":\n+                return compilerToVM().getUncachedStringInPool(this, cpi);\n+            default:\n+                throw new IllegalArgumentException(\"Illegal entry for a ConstantValue attribute:\" + tag);\n+        }\n+    }\n+\n     @Override\n     public Object lookupConstant(int cpi) {\n-        assert cpi != 0;\n         final JvmConstant tag = getTagAt(cpi);\n         switch (tag.name) {\n             case \"Integer\":\n@@ -557,7 +594,7 @@ public Object lookupConstant(int cpi) {\n \n     @Override\n     public String lookupUtf8(int cpi) {\n-        assert checkTag(cpi, constants.jvmUtf8);\n+        checkTag(cpi, constants.jvmUtf8);\n         return compilerToVM().getSymbol(getEntryAt(cpi));\n     }\n \n@@ -568,7 +605,10 @@ public Signature lookupSignature(int cpi) {\n \n     @Override\n     public JavaConstant lookupAppendix(int cpi, int opcode) {\n-        assert Bytecodes.isInvoke(opcode);\n+        if (!Bytecodes.isInvoke(opcode)) {\n+            throw new IllegalArgumentException(\"expected an invoke bytecode at \" + cpi + \", got \" + opcode);\n+        }\n+\n         final int index = rawIndexToConstantPoolCacheIndex(cpi, opcode);\n         return compilerToVM().lookupAppendixInPool(this, index);\n     }\n@@ -702,10 +742,14 @@ public JavaField lookupField(int cpi, ResolvedJavaMethod method, int opcode) {\n     public int rawIndexToConstantPoolIndex(int rawIndex, int opcode) {\n         int index;\n         if (isInvokedynamicIndex(rawIndex)) {\n-            assert opcode == Bytecodes.INVOKEDYNAMIC;\n+            if (opcode != Bytecodes.INVOKEDYNAMIC) {\n+                throw new IllegalArgumentException(\"expected INVOKEDYNAMIC at \" + rawIndex + \", got \" + opcode);\n+            }\n             index = decodeInvokedynamicIndex(rawIndex) + config().constantPoolCpCacheIndexTag;\n         } else {\n-            assert opcode != Bytecodes.INVOKEDYNAMIC;\n+            if (opcode == Bytecodes.INVOKEDYNAMIC) {\n+                throw new IllegalArgumentException(\"unexpected INVOKEDYNAMIC at \" + rawIndex);\n+            }\n             index = rawIndexToConstantPoolCacheIndex(rawIndex, opcode);\n         }\n         return compilerToVM().constantPoolRemapInstructionOperandFromCache(this, index);\n@@ -716,6 +760,7 @@ public void loadReferencedType(int cpi, int opcode) {\n         loadReferencedType(cpi, opcode, true /* initialize */);\n     }\n \n+    @Override\n     @SuppressWarnings(\"fallthrough\")\n     public void loadReferencedType(int cpi, int opcode, boolean initialize) {\n         int index;\n@@ -777,7 +822,7 @@ public void loadReferencedType(int cpi, int opcode, boolean initialize) {\n                 if (tag == constants.jvmMethodref) {\n                     if (Bytecodes.isInvokeHandleAlias(opcode) && isSignaturePolymorphicHolder(type)) {\n                         final int methodRefCacheIndex = rawIndexToConstantPoolCacheIndex(cpi, opcode);\n-                        assert checkTag(compilerToVM().constantPoolRemapInstructionOperandFromCache(this, methodRefCacheIndex), constants.jvmMethodref);\n+                        checkTag(compilerToVM().constantPoolRemapInstructionOperandFromCache(this, methodRefCacheIndex), constants.jvmMethodref);\n                         compilerToVM().resolveInvokeHandleInPool(this, methodRefCacheIndex);\n                     }\n                 }\n@@ -829,7 +874,7 @@ static boolean isSignaturePolymorphicHolder(final ResolvedJavaType type) {\n     public boolean isResolvedDynamicInvoke(int cpi, int opcode) {\n         if (Bytecodes.isInvokeHandleAlias(opcode)) {\n             final int methodRefCacheIndex = rawIndexToConstantPoolCacheIndex(cpi, opcode);\n-            assert checkTag(compilerToVM().constantPoolRemapInstructionOperandFromCache(this, methodRefCacheIndex), constants.jvmMethodref);\n+            checkTag(compilerToVM().constantPoolRemapInstructionOperandFromCache(this, methodRefCacheIndex), constants.jvmMethodref);\n             int op = compilerToVM().isResolvedInvokeHandleInPool(this, methodRefCacheIndex);\n             return op == opcode;\n         }"
      },
      {
        "sha": "b0f7f297d74b2b681024fc9dd43a0199901edfdf",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotJDKReflection.java",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotJDKReflection.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotJDKReflection.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotJDKReflection.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -283,7 +283,7 @@ JavaConstant boxPrimitive(JavaConstant source) {\n      * Gets a {@link Method} object corresponding to {@code method}. This method guarantees the same\n      * {@link Method} object is returned if called twice on the same {@code method} value.\n      */\n-    private static Executable getMethod(HotSpotResolvedJavaMethodImpl method) {\n+    static Executable getMethod(HotSpotResolvedJavaMethodImpl method) {\n         assert !method.isClassInitializer() : method;\n         if (method.toJavaCache == null) {\n             synchronized (method) {\n@@ -303,7 +303,7 @@ private static Executable getMethod(HotSpotResolvedJavaMethodImpl method) {\n      * {@code f} and annotation class {@code a}, the same object is returned for each call to\n      * {@code f.getAnnotation(a)}).\n      */\n-    private static Field getField(HotSpotResolvedJavaFieldImpl field) {\n+    static Field getField(HotSpotResolvedJavaFieldImpl field) {\n         HotSpotResolvedObjectTypeImpl declaringClass = field.getDeclaringClass();\n         synchronized (declaringClass) {\n             HashMap<HotSpotResolvedJavaFieldImpl, Field> cache = declaringClass.reflectionFieldCache;"
      },
      {
        "sha": "0e64c406983fcb6773306c3124133c1c1305a446",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.java",
        "status": "modified",
        "additions": 35,
        "deletions": 1,
        "changes": 36,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotJVMCIRuntime.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotJVMCIRuntime.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotJVMCIRuntime.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -35,6 +35,8 @@\n import java.lang.invoke.ConstantCallSite;\n import java.lang.invoke.MethodHandle;\n import java.lang.ref.WeakReference;\n+import java.lang.reflect.Executable;\n+import java.lang.reflect.Field;\n import java.nio.ByteBuffer;\n import java.nio.ByteOrder;\n import java.util.ArrayList;\n@@ -60,6 +62,8 @@\n import jdk.vm.ci.common.NativeImageReinitialize;\n import jdk.vm.ci.meta.JavaKind;\n import jdk.vm.ci.meta.JavaType;\n+import jdk.vm.ci.meta.ResolvedJavaField;\n+import jdk.vm.ci.meta.ResolvedJavaMethod;\n import jdk.vm.ci.meta.ResolvedJavaType;\n import jdk.vm.ci.meta.UnresolvedJavaType;\n import jdk.vm.ci.runtime.JVMCI;\n@@ -767,7 +771,7 @@ public boolean test(ResolvedJavaType type) {\n     }\n \n     /**\n-     * Get the {@link Class} corresponding to {@code type}.\n+     * Gets the {@link Class} corresponding to {@code type}.\n      *\n      * @param type the type for which a {@link Class} is requested\n      * @return the original Java class corresponding to {@code type} or {@code null} if this runtime\n@@ -781,6 +785,36 @@ public Class<?> getMirror(ResolvedJavaType type) {\n         return null;\n     }\n \n+    /**\n+     * Gets the {@link Executable} corresponding to {@code method}.\n+     *\n+     * @param method the method for which an {@link Executable} is requested\n+     * @return the original Java method or constructor corresponding to {@code method} or\n+     *         {@code null} if this runtime does not support mapping {@link ResolvedJavaMethod}\n+     *         instances to {@link Executable} instances\n+     */\n+    public Executable getMirror(ResolvedJavaMethod method) {\n+        if (method instanceof HotSpotResolvedJavaMethodImpl && reflection instanceof HotSpotJDKReflection) {\n+            return HotSpotJDKReflection.getMethod((HotSpotResolvedJavaMethodImpl) method);\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Gets the {@link Field} corresponding to {@code field}.\n+     *\n+     * @param field the field for which a {@link Field} is requested\n+     * @return the original Java field corresponding to {@code field} or {@code null} if this\n+     *         runtime does not support mapping {@link ResolvedJavaField} instances to {@link Field}\n+     *         instances\n+     */\n+    public Field getMirror(ResolvedJavaField field) {\n+        if (field instanceof HotSpotResolvedJavaFieldImpl && reflection instanceof HotSpotJDKReflection) {\n+            return HotSpotJDKReflection.getField((HotSpotResolvedJavaFieldImpl) field);\n+        }\n+        return null;\n+    }\n+\n     static class ErrorCreatingCompiler implements JVMCICompiler {\n         private final RuntimeException t;\n "
      },
      {
        "sha": "dec8c0e895c41dfa33d519bb478572e31955960a",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotProfilingInfo.java",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotProfilingInfo.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotProfilingInfo.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotProfilingInfo.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -45,6 +45,9 @@ final class HotSpotProfilingInfo implements ProfilingInfo {\n     HotSpotProfilingInfo(HotSpotMethodData methodData, HotSpotResolvedJavaMethod method, boolean includeNormal, boolean includeOSR) {\n         this.methodData = methodData;\n         this.method = method;\n+        if (!method.getDeclaringClass().isLinked()) {\n+            throw new IllegalArgumentException(method.format(\"%H.%n(%p) must be linked\"));\n+        }\n         this.includeNormal = includeNormal;\n         this.includeOSR = includeOSR;\n         this.isMature = methodData.isProfileMature();"
      },
      {
        "sha": "06c25a810a8e17a6271889fd0fdacf64ce0a158a",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotResolvedJavaFieldImpl.java",
        "status": "modified",
        "additions": 16,
        "deletions": 9,
        "changes": 25,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotResolvedJavaFieldImpl.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotResolvedJavaFieldImpl.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotResolvedJavaFieldImpl.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -22,10 +22,10 @@\n  */\n package jdk.vm.ci.hotspot;\n \n+import static jdk.internal.misc.Unsafe.ADDRESS_SIZE;\n import static jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.runtime;\n import static jdk.vm.ci.hotspot.HotSpotVMConfig.config;\n import static jdk.vm.ci.hotspot.UnsafeAccess.UNSAFE;\n-import static jdk.internal.misc.Unsafe.ADDRESS_SIZE;\n \n import java.lang.annotation.Annotation;\n \n@@ -45,28 +45,26 @@ class HotSpotResolvedJavaFieldImpl implements HotSpotResolvedJavaField {\n     private JavaType type;\n \n     /**\n-     * Value of {@code fieldDescriptor::access_flags()}.\n+     * Offset (in bytes) of field from start of its storage container (i.e. {@code instanceOop} or\n+     * {@code Klass*}).\n      */\n     private final int offset;\n \n     /**\n      * Value of {@code fieldDescriptor::index()}.\n      */\n-    private final short index;\n+    private final int index;\n \n     /**\n      * This value contains all flags as stored in the VM including internal ones.\n      */\n     private final int modifiers;\n \n-    HotSpotResolvedJavaFieldImpl(HotSpotResolvedObjectTypeImpl holder, JavaType type, long offset, int modifiers, int index) {\n+    HotSpotResolvedJavaFieldImpl(HotSpotResolvedObjectTypeImpl holder, JavaType type, int offset, int modifiers, int index) {\n         this.holder = holder;\n         this.type = type;\n-        this.index = (short) index;\n-        assert this.index == index;\n-        assert offset != -1;\n-        assert offset == (int) offset : \"offset larger than int\";\n-        this.offset = (int) offset;\n+        this.index = index;\n+        this.offset = offset;\n         this.modifiers = modifiers;\n     }\n \n@@ -143,6 +141,10 @@ public JavaType getType() {\n \n     }\n \n+    /**\n+     * Gets the offset (in bytes) of field from start of its storage container (i.e.\n+     * {@code instanceOop} or {@code Klass*}).\n+     */\n     @Override\n     public int getOffset() {\n         return offset;\n@@ -214,4 +216,9 @@ public <T extends Annotation> T getAnnotation(Class<T> annotationClass) {\n         }\n         return runtime().reflection.getFieldAnnotation(this, annotationClass);\n     }\n+\n+    @Override\n+    public JavaConstant getConstantValue() {\n+        return holder.createFieldInfo(index).getConstantValue();\n+    }\n }"
      },
      {
        "sha": "127ce5cf6d180e6306bba0ddd75a523c4889500d",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.java",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotResolvedJavaMethodImpl.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotResolvedJavaMethodImpl.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotResolvedJavaMethodImpl.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -258,7 +258,11 @@ public byte[] getCode() {\n \n     @Override\n     public int getCodeSize() {\n-        return UNSAFE.getChar(getConstMethod() + config().constMethodCodeSizeOffset);\n+        int codeSize = UNSAFE.getChar(getConstMethod() + config().constMethodCodeSizeOffset);\n+        if (codeSize > 0 && !getDeclaringClass().isLinked()) {\n+            return -1;\n+        }\n+        return codeSize;\n     }\n \n     @Override"
      },
      {
        "sha": "19f7cc0b03728c4e4a63864e1e475d796eb1fa45",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.java",
        "status": "modified",
        "additions": 35,
        "deletions": 1,
        "changes": 36,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotResolvedObjectTypeImpl.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotResolvedObjectTypeImpl.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotResolvedObjectTypeImpl.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -576,7 +576,7 @@ public int getVtableLength() {\n         return result;\n     }\n \n-    HotSpotResolvedJavaField createField(JavaType type, long offset, int rawFlags, int index) {\n+    HotSpotResolvedJavaField createField(JavaType type, int offset, int rawFlags, int index) {\n         return new HotSpotResolvedJavaFieldImpl(this, type, offset, rawFlags, index);\n     }\n \n@@ -684,6 +684,10 @@ private int getSignatureIndex() {\n             return readFieldSlot(config().fieldInfoSignatureIndexOffset);\n         }\n \n+        private int getConstantValueIndex() {\n+            return readFieldSlot(config().fieldInfoConstantValueIndexOffset);\n+        }\n+\n         public int getOffset() {\n             HotSpotVMConfig config = config();\n             final int lowPacked = readFieldSlot(config.fieldInfoLowPackedOffset);\n@@ -719,6 +723,19 @@ public String getSignature() {\n             return isInternal() ? config().symbolAt(signatureIndex) : getConstantPool().lookupUtf8(signatureIndex);\n         }\n \n+        /**\n+         * Gets the {@link JavaConstant} for the {@code ConstantValue} attribute of this field.\n+         *\n+         * @return {@code null} if this field has no {@code ConstantValue} attribute\n+         */\n+        public JavaConstant getConstantValue() {\n+            int cvIndex = getConstantValueIndex();\n+            if (cvIndex == 0) {\n+                return null;\n+            }\n+            return constantPool.getStaticFieldConstantValue(cvIndex);\n+        }\n+\n         public JavaType getType() {\n             String signature = getSignature();\n             return runtime().lookupType(signature, HotSpotResolvedObjectTypeImpl.this, false);\n@@ -978,11 +995,28 @@ public HotSpotResolvedObjectType getEnclosingType() {\n \n     @Override\n     public ResolvedJavaMethod[] getDeclaredConstructors() {\n+        link();\n+        return runtime().compilerToVm.getDeclaredConstructors(this);\n+    }\n+\n+    @Override\n+    public ResolvedJavaMethod[] getDeclaredConstructors(boolean forceLink) {\n+        if (forceLink) {\n+            link();\n+        }\n         return runtime().compilerToVm.getDeclaredConstructors(this);\n     }\n \n     @Override\n     public ResolvedJavaMethod[] getDeclaredMethods() {\n+        return getDeclaredMethods(true);\n+    }\n+\n+    @Override\n+    public ResolvedJavaMethod[] getDeclaredMethods(boolean forceLink) {\n+        if (forceLink) {\n+            link();\n+        }\n         return runtime().compilerToVm.getDeclaredMethods(this);\n     }\n "
      },
      {
        "sha": "9e25b8d1a998aa15aac2f3efbc83957a1814bae1",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotVMConfig.java",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotVMConfig.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotVMConfig.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.hotspot%2Fsrc%2Fjdk%2Fvm%2Fci%2Fhotspot%2FHotSpotVMConfig.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -120,6 +120,7 @@ String getHostArchitectureName() {\n     final int fieldInfoAccessFlagsOffset = getConstant(\"FieldInfo::access_flags_offset\", Integer.class);\n     final int fieldInfoNameIndexOffset = getConstant(\"FieldInfo::name_index_offset\", Integer.class);\n     final int fieldInfoSignatureIndexOffset = getConstant(\"FieldInfo::signature_index_offset\", Integer.class);\n+    final int fieldInfoConstantValueIndexOffset = getConstant(\"FieldInfo::initval_index_offset\", Integer.class);\n     final int fieldInfoLowPackedOffset = getConstant(\"FieldInfo::low_packed_offset\", Integer.class);\n     final int fieldInfoHighPackedOffset = getConstant(\"FieldInfo::high_packed_offset\", Integer.class);\n     final int fieldInfoFieldSlots = getConstant(\"FieldInfo::field_slots\", Integer.class);"
      },
      {
        "sha": "6da622cf07d8fa0658096e55982c367c1c8376ea",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.meta/src/jdk/vm/ci/meta/ConstantPool.java",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FConstantPool.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FConstantPool.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FConstantPool.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -46,6 +46,24 @@ public interface ConstantPool {\n      */\n     void loadReferencedType(int cpi, int opcode);\n \n+    /**\n+     * Ensures that the type referenced by the specified constant pool entry is loaded. This can be\n+     * used to compile time resolve a type. It works for field, method, or type constant pool\n+     * entries.\n+     *\n+     * @param cpi the index of the constant pool entry that references the type\n+     * @param opcode the opcode of the instruction that references the type\n+     * @param initialize if {@code true}, the referenced type is either guaranteed to be initialized\n+     *            upon return or an initialization exception is thrown\n+     */\n+    default void loadReferencedType(int cpi, int opcode, boolean initialize) {\n+        if (initialize) {\n+            loadReferencedType(cpi, opcode);\n+        } else {\n+            throw new UnsupportedOperationException();\n+        }\n+    }\n+\n     /**\n      * Looks up the type referenced by the constant pool entry at {@code cpi} as referenced by the\n      * {@code opcode} bytecode instruction."
      },
      {
        "sha": "2d8e253e2edfbdaf320ba8139efe1bb5df97d5ba",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.meta/src/jdk/vm/ci/meta/ResolvedJavaField.java",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FResolvedJavaField.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FResolvedJavaField.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FResolvedJavaField.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -40,6 +40,10 @@ public interface ResolvedJavaField extends JavaField, ModifiersProvider, Annotat\n     @Override\n     int getModifiers();\n \n+    /**\n+     * Returns the offset of the field relative to the base of its storage container (e.g.,\n+     * {@code instanceOop} for an instance field or {@code Klass*} for a static field on HotSpot).\n+     */\n     int getOffset();\n \n     default boolean isFinal() {\n@@ -63,4 +67,15 @@ default boolean isFinal() {\n      */\n     @Override\n     ResolvedJavaType getDeclaringClass();\n+\n+    /**\n+     * Gets the value of the {@code ConstantValue} attribute ({@jvms 4.7.2}) associated with this\n+     * field.\n+     *\n+     * @return {@code null} if this field has no {@code ConstantValue} attribute\n+     * @throws UnsupportedOperationException if this operation is not supported\n+     */\n+    default JavaConstant getConstantValue() {\n+        throw new UnsupportedOperationException();\n+    }\n }"
      },
      {
        "sha": "7bd15a37c10b3ff02060da73bba4edb3b2a141d3",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.meta/src/jdk/vm/ci/meta/ResolvedJavaMethod.java",
        "status": "modified",
        "additions": 16,
        "deletions": 18,
        "changes": 34,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FResolvedJavaMethod.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FResolvedJavaMethod.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FResolvedJavaMethod.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2009, 2019, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -36,24 +36,26 @@\n public interface ResolvedJavaMethod extends JavaMethod, InvokeTarget, ModifiersProvider, AnnotatedElement {\n \n     /**\n-     * Returns the bytecode of this method, if the method has code. The returned byte array does not\n-     * contain breakpoints or non-Java bytecodes. This may return null if the\n-     * {@linkplain #getDeclaringClass() declaring class} is not\n-     * {@linkplain ResolvedJavaType#isLinked() linked}.\n+     * Returns the method's bytecode. The returned bytecode does not contain breakpoints or non-Java\n+     * bytecodes. This will return {@code null} if {@link #getCodeSize()} returns {@code <= 0} or if\n+     * {@link #hasBytecodes()} returns {@code false}.\n      *\n-     * The contained constant pool indices may not be the ones found in the original class file but\n+     * The contained constant pool indexes may not be the ones found in the original class file but\n      * they can be used with the JVMCI API (e.g. methods in {@link ConstantPool}).\n      *\n-     * @return the bytecode of the method, or {@code null} if {@code getCodeSize() == 0} or if the\n-     *         code is not ready.\n+     * @return {@code null} if {@code getLinkedCodeSize() <= 0} otherwise the bytecode of the method\n+     *         whose length is guaranteed to be {@code > 0}\n      */\n     byte[] getCode();\n \n     /**\n-     * Returns the size of the bytecode of this method, if the method has code. This is equivalent\n-     * to {@link #getCode()}. {@code length} if the method has code.\n+     * Returns the size of the method's bytecode. If this method returns a value {@code > 0} then\n+     * {@link #getCode()} will not return {@code null}.\n      *\n-     * @return the size of the bytecode in bytes, or 0 if no bytecode is available\n+     * @return 0 if the method has no bytecode, {@code -1} if the method does have bytecode but its\n+     *         {@linkplain #getDeclaringClass() declaring class} is not\n+     *         {@linkplain ResolvedJavaType#isLinked() linked} otherwise the size of the bytecode in\n+     *         bytes (guaranteed to be {@code > 0})\n      */\n     int getCodeSize();\n \n@@ -439,15 +441,11 @@ default <T extends Annotation> T[] getParameterAnnotations(Class<T> annotationCl\n     }\n \n     /**\n-     * Checks whether the method has bytecodes associated with it. Note that even if this method\n-     * returns {@code true}, {@link #getCode} can return {@code null} if\n-     * {@linkplain #getDeclaringClass() declaring class} is not\n-     * {@linkplain ResolvedJavaType#isLinked() linked}.\n-     *\n-     * @return {@code this.getCodeSize() != 0}\n+     * @see #getCodeSize()\n+     * @return {@code getCodeSize() > 0}\n      */\n     default boolean hasBytecodes() {\n-        return getCodeSize() != 0;\n+        return getCodeSize() > 0;\n     }\n \n     /**"
      },
      {
        "sha": "faff741c7941ac436b70f0cec2c1151e74fa47f5",
        "filename": "src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.meta/src/jdk/vm/ci/meta/ResolvedJavaType.java",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FResolvedJavaType.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FResolvedJavaType.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.internal.vm.ci%2Fshare%2Fclasses%2Fjdk.vm.ci.meta%2Fsrc%2Fjdk%2Fvm%2Fci%2Fmeta%2FResolvedJavaType.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -339,13 +339,33 @@ default ResolvedJavaMethod resolveConcreteMethod(ResolvedJavaMethod method, Reso\n      */\n     ResolvedJavaMethod[] getDeclaredConstructors();\n \n+    /**\n+     * Returns an array reflecting all the constructors declared by this type. This method is\n+     * similar to {@link Class#getDeclaredConstructors()} in terms of returned constructors.\n+     *\n+     * @param forceLink if {@code true}, forces this type to be {@link #link linked}\n+     */\n+    default ResolvedJavaMethod[] getDeclaredConstructors(boolean forceLink) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n     /**\n      * Returns an array reflecting all the methods declared by this type. This method is similar to\n      * {@link Class#getDeclaredMethods()} in terms of returned methods. Calling this method forces\n      * this type to be {@link #link linked}.\n      */\n     ResolvedJavaMethod[] getDeclaredMethods();\n \n+    /**\n+     * Returns an array reflecting all the methods declared by this type. This method is similar to\n+     * {@link Class#getDeclaredMethods()} in terms of returned methods.\n+     *\n+     * @param forceLink if {@code true}, forces this type to be {@link #link linked}\n+     */\n+    default ResolvedJavaMethod[] getDeclaredMethods(boolean forceLink) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n     /**\n      * Returns the {@code <clinit>} method for this class if there is one.\n      */"
      },
      {
        "sha": "ebebeb965a0350108243c6a42808eee3096dc44a",
        "filename": "src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/resources/doclets.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Fdoclets%2Ftoolkit%2Fresources%2Fdoclets.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Fdoclets%2Ftoolkit%2Fresources%2Fdoclets.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Fdoclets%2Ftoolkit%2Fresources%2Fdoclets.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -49,7 +49,7 @@ doclet.internal.exception=An internal exception has occurred. \\n\\\n \\t({0})\n doclet.internal.report.bug=\\\n Please file a bug against the javadoc tool via the Java bug reporting page\\n\\\n-(http://bugreport.java.com) after checking the Bug Database (http://bugs.java.com)\\n\\\n+(https://bugreport.java.com) after checking the Bug Database (https://bugs.java.com)\\n\\\n for duplicates. Include error messages and the following diagnostic in your report. Thank you.\n doclet.File_not_found=File not found: {0}\n doclet.Copy_Overwrite_warning=File {0} not copied to {1} due to existing file with same name..."
      },
      {
        "sha": "138236d147376868030e059951fb854ac20f0f85",
        "filename": "src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/resources/doclets_ja.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Fdoclets%2Ftoolkit%2Fresources%2Fdoclets_ja.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Fdoclets%2Ftoolkit%2Fresources%2Fdoclets_ja.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Fdoclets%2Ftoolkit%2Fresources%2Fdoclets_ja.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -45,7 +45,7 @@ doclet.exception.read.file=\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u8AAD\\u53D6\\u308A\\u4E2\n doclet.exception.write.file=\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u66F8\\u8FBC\\u307F\\u4E2D\\u306B\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F: {0}\\n\\t({1})\n doclet.exception.read.resource=\\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30EA\\u30BD\\u30FC\\u30B9\\u306E\\u8AAD\\u53D6\\u308A\\u4E2D\\u306B\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F: {0}\\n\\t({1})\n doclet.internal.exception=\\u5185\\u90E8\\u4F8B\\u5916\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\\u3002 \\n\\t({0})\n-doclet.internal.report.bug=Bug Database (http://bugs.java.com)\\u3067\\u91CD\\u8907\\u304C\\u306A\\u3044\\u304B\\u3092\\u3054\\u78BA\\u8A8D\\u306E\\u3046\\u3048\\u3001Java bug\\u30EC\\u30DD\\u30FC\\u30C8\\u30FB\\u30DA\\u30FC\\u30B8\\n(http://bugreport.java.com)\\u3067javadoc\\u30C4\\u30FC\\u30EB\\u306B\\u5BFE\\u3059\\u308Bbug\\u306E\\u767B\\u9332\\u3092\\u304A\\u9858\\u3044\\u3044\\u305F\\u3057\\u307E\\u3059\\u3002\\n\\u30EC\\u30DD\\u30FC\\u30C8\\u306B\\u306F\\u3001\\u30A8\\u30E9\\u30FC\\u30FB\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3068\\u6B21\\u306E\\u8A3A\\u65AD\\u5185\\u5BB9\\u3092\\u542B\\u3081\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u3054\\u5354\\u529B\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3059\\u3002\n+doclet.internal.report.bug=Bug Database (https://bugs.java.com)\\u3067\\u91CD\\u8907\\u304C\\u306A\\u3044\\u304B\\u3092\\u3054\\u78BA\\u8A8D\\u306E\\u3046\\u3048\\u3001Java bug\\u30EC\\u30DD\\u30FC\\u30C8\\u30FB\\u30DA\\u30FC\\u30B8\\n(https://bugreport.java.com)\\u3067javadoc\\u30C4\\u30FC\\u30EB\\u306B\\u5BFE\\u3059\\u308Bbug\\u306E\\u767B\\u9332\\u3092\\u304A\\u9858\\u3044\\u3044\\u305F\\u3057\\u307E\\u3059\\u3002\\n\\u30EC\\u30DD\\u30FC\\u30C8\\u306B\\u306F\\u3001\\u30A8\\u30E9\\u30FC\\u30FB\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3068\\u6B21\\u306E\\u8A3A\\u65AD\\u5185\\u5BB9\\u3092\\u542B\\u3081\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u3054\\u5354\\u529B\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3059\\u3002\n doclet.File_not_found=\\u30D5\\u30A1\\u30A4\\u30EB\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093: {0}\n doclet.Copy_Overwrite_warning=\\u30D5\\u30A1\\u30A4\\u30EB{0}\\u306F\\u540C\\u3058\\u540D\\u524D\\u306E\\u30D5\\u30A1\\u30A4\\u30EB\\u304C\\u3042\\u308B\\u306E\\u3067{1}\\u306B\\u30B3\\u30D4\\u30FC\\u3055\\u308C\\u307E\\u305B\\u3093\\u3067\\u3057\\u305F...\n doclet.Copy_Ignored_warning=\\u30D5\\u30A1\\u30A4\\u30EB{0}\\u306F\\u30B3\\u30D4\\u30FC\\u3055\\u308C\\u307E\\u305B\\u3093\\u3067\\u3057\\u305F: \\u540D\\u524D\\u304C\\u7121\\u52B9\\u3067\\u3059"
      },
      {
        "sha": "feba4d66d0b90b3b4775c42f3cd782b385600f44",
        "filename": "src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/resources/doclets_zh_CN.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Fdoclets%2Ftoolkit%2Fresources%2Fdoclets_zh_CN.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Fdoclets%2Ftoolkit%2Fresources%2Fdoclets_zh_CN.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Fdoclets%2Ftoolkit%2Fresources%2Fdoclets_zh_CN.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -45,7 +45,7 @@ doclet.exception.read.file=\\u8BFB\\u53D6\\u6587\\u4EF6\\u65F6\\u51FA\\u9519: {0}\\n\\t({\n doclet.exception.write.file=\\u5199\\u5165\\u6587\\u4EF6\\u65F6\\u51FA\\u9519: {0}\\n\\t({1})\n doclet.exception.read.resource=\\u8BFB\\u53D6\\u7CFB\\u7EDF\\u8D44\\u6E90\\u65F6\\u51FA\\u9519: {0}\\n\\t({1})\n doclet.internal.exception=\\u51FA\\u73B0\\u5185\\u90E8\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\n\\t({0})\n-doclet.internal.report.bug=\\u5982\\u679C\\u5728 Bug Database (http://bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u91CD\\u590D\\u9879, \\n\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (http://bugreport.java.com) \\u9488\\u5BF9\\u8BE5 \\njavadoc \\u5DE5\\u5177\\u5EFA\\u7ACB Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u9519\\u8BEF\\u6D88\\u606F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n+doclet.internal.report.bug=\\u5982\\u679C\\u5728 Bug Database (https://bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u91CD\\u590D\\u9879, \\n\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (https://bugreport.java.com) \\u9488\\u5BF9\\u8BE5 \\njavadoc \\u5DE5\\u5177\\u5EFA\\u7ACB Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u9519\\u8BEF\\u6D88\\u606F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n doclet.File_not_found=\\u627E\\u4E0D\\u5230\\u6587\\u4EF6: {0}\n doclet.Copy_Overwrite_warning=\\u672A\\u5C06\\u6587\\u4EF6{0}\\u590D\\u5236\\u5230 {1}, \\u56E0\\u4E3A\\u73B0\\u6709\\u6587\\u4EF6\\u5177\\u6709\\u76F8\\u540C\\u540D\\u79F0...\n doclet.Copy_Ignored_warning=\\u672A\\u590D\\u5236\\u6587\\u4EF6 {0}\\uFF1A\\u540D\\u79F0\\u65E0\\u6548"
      },
      {
        "sha": "cc90dfd357ecf16365c119334a9242f5eaf266d9",
        "filename": "src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/resources/javadoc.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2Fresources%2Fjavadoc.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2Fresources%2Fjavadoc.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2Fresources%2Fjavadoc.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -304,7 +304,7 @@ main.internal.error=an internal error has occurred\n main.unexpected.exception=an unexpected exception was caught: {0}\n doclet.internal.report.bug=\\\n Please file a bug against the javadoc tool via the Java bug reporting page\\n\\\n-(http://bugreport.java.com) after checking the Bug Database (http://bugs.java.com)\\n\\\n+(https://bugreport.java.com) after checking the Bug Database (https://bugs.java.com)\\n\\\n for duplicates. Include error messages and the following diagnostic in your report. Thank you.\n main.not_a_doclet=\\\n     Class {0} is not a valid doclet.\\n\\"
      },
      {
        "sha": "b8794162195d61de5098c9595d3c0d625f73de4b",
        "filename": "src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/resources/javadoc_ja.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2Fresources%2Fjavadoc_ja.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2Fresources%2Fjavadoc_ja.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2Fresources%2Fjavadoc_ja.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -191,7 +191,7 @@ main.warnings.Werror=\\u8B66\\u544A\\u304C\\u898B\\u3064\\u304B\\u308A-Werror\\u304C\\u63\n main.unknown.error=\\u4E0D\\u660E\\u306A\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\n main.internal.error=\\u5185\\u90E8\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\n main.unexpected.exception=\\u4E88\\u671F\\u3057\\u306A\\u3044\\u4F8B\\u5916\\u304C\\u6355\\u6349\\u3055\\u308C\\u307E\\u3057\\u305F: {0}\n-doclet.internal.report.bug=Bug Database (http://bugs.java.com)\\u3067\\u91CD\\u8907\\u304C\\u306A\\u3044\\u304B\\u3092\\u3054\\u78BA\\u8A8D\\u306E\\u3046\\u3048\\u3001Java bug\\u30EC\\u30DD\\u30FC\\u30C8\\u30FB\\u30DA\\u30FC\\u30B8\\n(http://bugreport.java.com)\\u3067javadoc\\u30C4\\u30FC\\u30EB\\u306B\\u5BFE\\u3059\\u308Bbug\\u306E\\u767B\\u9332\\u3092\\u304A\\u9858\\u3044\\u3044\\u305F\\u3057\\u307E\\u3059\\u3002\\n\\u30EC\\u30DD\\u30FC\\u30C8\\u306B\\u306F\\u3001\\u30A8\\u30E9\\u30FC\\u30FB\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3068\\u6B21\\u306E\\u8A3A\\u65AD\\u5185\\u5BB9\\u3092\\u542B\\u3081\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u3054\\u5354\\u529B\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3059\\u3002\n+doclet.internal.report.bug=Bug Database (https://bugs.java.com)\\u3067\\u91CD\\u8907\\u304C\\u306A\\u3044\\u304B\\u3092\\u3054\\u78BA\\u8A8D\\u306E\\u3046\\u3048\\u3001Java bug\\u30EC\\u30DD\\u30FC\\u30C8\\u30FB\\u30DA\\u30FC\\u30B8\\n(https://bugreport.java.com)\\u3067javadoc\\u30C4\\u30FC\\u30EB\\u306B\\u5BFE\\u3059\\u308Bbug\\u306E\\u767B\\u9332\\u3092\\u304A\\u9858\\u3044\\u3044\\u305F\\u3057\\u307E\\u3059\\u3002\\n\\u30EC\\u30DD\\u30FC\\u30C8\\u306B\\u306F\\u3001\\u30A8\\u30E9\\u30FC\\u30FB\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3068\\u6B21\\u306E\\u8A3A\\u65AD\\u5185\\u5BB9\\u3092\\u542B\\u3081\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u3054\\u5354\\u529B\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3059\\u3002\n main.not_a_doclet=\\u30AF\\u30E9\\u30B9{0}\\u306F\\u6709\\u52B9\\u306A\\u30C9\\u30C3\\u30AF\\u30EC\\u30C3\\u30C8\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\\n\\u30CE\\u30FC\\u30C8: JDK 13\\u304B\\u3089\\u3001com.sun.javadoc API\\u306F\\u30B5\\u30DD\\u30FC\\u30C8\\u3055\\u308C\\u306A\\u304F\\u306A\\u308A\\u307E\\u3057\\u305F\\u3002\n javadoc.class_not_found=\\u30AF\\u30E9\\u30B9{0}\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\n javadoc.error=\\u30A8\\u30E9\\u30FC"
      },
      {
        "sha": "a358fece2e41c68a8b6d2dbfac9923407a9b7032",
        "filename": "src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/resources/javadoc_zh_CN.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2Fresources%2Fjavadoc_zh_CN.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2Fresources%2Fjavadoc_zh_CN.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.javadoc%2Fshare%2Fclasses%2Fjdk%2Fjavadoc%2Finternal%2Ftool%2Fresources%2Fjavadoc_zh_CN.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -191,7 +191,7 @@ main.warnings.Werror=\\u53D1\\u73B0\\u8B66\\u544A, \\u4F46\\u6307\\u5B9A\\u4E86 -Werror\n main.unknown.error=\\u51FA\\u73B0\\u672A\\u77E5\\u9519\\u8BEF\n main.internal.error=\\u51FA\\u73B0\\u5185\\u90E8\\u9519\\u8BEF\n main.unexpected.exception=\\u6355\\u83B7\\u5230\\u610F\\u5916\\u7684\\u5F02\\u5E38\\u9519\\u8BEF: {0}\n-doclet.internal.report.bug=\\u5982\\u679C\\u5728 Bug Database (http://bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u91CD\\u590D\\u9879, \\n\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (http://bugreport.java.com) \\u9488\\u5BF9\\u8BE5 \\njavadoc \\u5DE5\\u5177\\u5EFA\\u7ACB Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u9519\\u8BEF\\u6D88\\u606F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n+doclet.internal.report.bug=\\u5982\\u679C\\u5728 Bug Database (https://bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u91CD\\u590D\\u9879, \\n\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (https://bugreport.java.com) \\u9488\\u5BF9\\u8BE5 \\njavadoc \\u5DE5\\u5177\\u5EFA\\u7ACB Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u9519\\u8BEF\\u6D88\\u606F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n main.not_a_doclet=\\u7C7B {0} \\u4E0D\\u662F\\u6709\\u6548 doclet\\u3002\\n\\u6CE8\\u610F\\uFF1A\\u4ECE JDK 13 \\u5F00\\u59CB\\uFF0C\\u4E0D\\u518D\\u652F\\u6301 com.sun.javadoc API\\u3002\n javadoc.class_not_found=\\u627E\\u4E0D\\u5230\\u7C7B{0}\\u3002\n javadoc.error=\\u9519\\u8BEF"
      },
      {
        "sha": "adba1c86a460687b2cd52eec80a5c0ca449a60ee",
        "filename": "src/jdk.jdeps/share/classes/com/sun/tools/jdeps/InverseDepsAnalyzer.java",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdeps%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjdeps%2FInverseDepsAnalyzer.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdeps%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjdeps%2FInverseDepsAnalyzer.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jdeps%2Fshare%2Fclasses%2Fcom%2Fsun%2Ftools%2Fjdeps%2FInverseDepsAnalyzer.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -145,9 +145,12 @@ public Set<Deque<Archive>> inverseDependences() throws IOException {\n                 .forEach(m -> {\n                     builder.addNode(m);\n                     m.descriptor().requires().stream()\n-                        .map(Requires::name)\n-                        .map(configuration::findModule)  // must be present\n-                        .forEach(v -> builder.addEdge(v.get(), m));\n+                        // filter \"requires static\" if the module is not resolved in the configuration\n+                        .filter(req -> !req.modifiers().contains(Requires.Modifier.STATIC)\n+                            || configuration.findModule(req.name()).isPresent())\n+                            .map(Requires::name)\n+                            .map(configuration::findModule)  // must be present\n+                            .forEach(v -> builder.addEdge(v.get(), m));\n                 });\n \n             // add the dependences from the analysis"
      },
      {
        "sha": "b5f8fb29fca7c1c145290bf9697441190e5af811",
        "filename": "src/jdk.jdwp.agent/share/native/libjdwp/classTrack.c",
        "status": "modified",
        "additions": 4,
        "deletions": 96,
        "changes": 100,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FclassTrack.c",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FclassTrack.c",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FclassTrack.c?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -37,6 +37,7 @@\n #include \"util.h\"\n #include \"bag.h\"\n #include \"classTrack.h\"\n+#include \"eventHandler.h\"\n \n #define NOT_TAGGED 0\n \n@@ -46,64 +47,14 @@\n static jvmtiEnv* trackingEnv;\n \n /*\n- * A bag containing all the deleted classes' signatures. Must be accessed under\n- * classTrackLock.\n+ * Invoke the callback when classes are freed.\n  */\n-struct bag* deletedSignatures;\n-\n-/*\n- * Lock to keep integrity of deletedSignatures.\n- */\n-static jrawMonitorID classTrackLock;\n-\n-/*\n- * Invoke the callback when classes are freed, find and record the signature\n- * in deletedSignatures. Those are only used in addPreparedClass() by the\n- * same thread.\n- */\n-static void JNICALL\n+void JNICALL\n cbTrackingObjectFree(jvmtiEnv* jvmti_env, jlong tag)\n {\n-    debugMonitorEnter(classTrackLock);\n-    if (deletedSignatures == NULL) {\n-      debugMonitorExit(classTrackLock);\n-      return;\n-    }\n-    *(char**)bagAdd(deletedSignatures) = (char*)jlong_to_ptr(tag);\n-\n-    debugMonitorExit(classTrackLock);\n-}\n-\n-/*\n- * Called after class unloads have occurred.\n- * The signatures of classes which were unloaded are returned.\n- */\n-struct bag *\n-classTrack_processUnloads(JNIEnv *env)\n-{\n-    if (deletedSignatures == NULL) {\n-      return NULL;\n-    }\n-\n-    /* Allocate new bag outside classTrackLock lock to avoid deadlock.\n-     *\n-     * Note: jvmtiAllocate/jvmtiDeallocate() may be blocked by ongoing safepoints.\n-     * It is dangerous to call them (via bagCreateBag/bagDestroyBag()) while holding monitor(s),\n-     * because jvmti may post events, e.g. JVMTI_EVENT_OBJECT_FREE at safepoints and event processing\n-     * code may acquire the same monitor(s), e.g. classTrackLock in cbTrackingObjectFree(),\n-     * which can lead to deadlock.\n-     */\n-    struct bag* new_bag = bagCreateBag(sizeof(char*), 10);\n-    debugMonitorEnter(classTrackLock);\n-    struct bag* deleted = deletedSignatures;\n-    deletedSignatures = new_bag;\n-    debugMonitorExit(classTrackLock);\n-    return deleted;\n+    eventHandler_synthesizeUnloadEvent((char*)jlong_to_ptr(tag), getEnv());\n }\n \n-/*\n- * Add a class to the prepared class table.\n- */\n void\n classTrack_addPreparedClass(JNIEnv *env_unused, jclass klass)\n {\n@@ -162,8 +113,6 @@ setupEvents()\n void\n classTrack_initialize(JNIEnv *env)\n {\n-    deletedSignatures = NULL;\n-    classTrackLock = debugMonitorCreate(\"Deleted class tag lock\");\n     trackingEnv = getSpecialJvmti();\n     if (trackingEnv == NULL) {\n         EXIT_ERROR(AGENT_ERROR_INTERNAL, \"Failed to allocate tag-tracking jvmtiEnv\");\n@@ -195,44 +144,3 @@ classTrack_initialize(JNIEnv *env)\n         EXIT_ERROR(error,\"loaded classes array\");\n     }\n }\n-\n-/*\n- * Called to activate class-tracking when a listener registers for EI_GC_FINISH.\n- */\n-void\n-classTrack_activate(JNIEnv *env)\n-{\n-    // Allocate bag outside classTrackLock lock to avoid deadlock.\n-    // See comments in classTrack_processUnloads() for details.\n-    struct bag* new_bag = bagCreateBag(sizeof(char*), 1000);\n-    debugMonitorEnter(classTrackLock);\n-    deletedSignatures = new_bag;\n-    debugMonitorExit(classTrackLock);\n-}\n-\n-static jboolean\n-cleanDeleted(void *signatureVoid, void *arg)\n-{\n-    char* sig = *(char**)signatureVoid;\n-    jvmtiDeallocate(sig);\n-    return JNI_TRUE;\n-}\n-\n-/*\n- * Called when agent detaches.\n- */\n-void\n-classTrack_reset(void)\n-{\n-    debugMonitorEnter(classTrackLock);\n-    struct bag* to_delete = deletedSignatures;\n-    deletedSignatures = NULL;\n-    debugMonitorExit(classTrackLock);\n-\n-    // Deallocate bag outside classTrackLock to avoid deadlock.\n-    // See comments in classTrack_processUnloads() for details.\n-    if (to_delete != NULL) {\n-      bagEnumerateOver(to_delete, cleanDeleted, NULL);\n-      bagDestroyBag(to_delete);\n-    }\n-}"
      },
      {
        "sha": "860b5cc1903376850bca0fafbec14c8c6abb95fd",
        "filename": "src/jdk.jdwp.agent/share/native/libjdwp/debugInit.c",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FdebugInit.c",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FdebugInit.c",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FdebugInit.c?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -792,7 +792,6 @@ debugInit_reset(JNIEnv *env)\n     threadControl_reset();\n     util_reset();\n     commonRef_reset(env);\n-    classTrack_reset();\n \n     /*\n      * If this is a server, we are now ready to accept another connection."
      },
      {
        "sha": "c79d27246bcfa1e99b8162dd12828b0ab5f9b0c3",
        "filename": "src/jdk.jdwp.agent/share/native/libjdwp/eventHandler.c",
        "status": "modified",
        "additions": 5,
        "deletions": 43,
        "changes": 48,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FeventHandler.c",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FeventHandler.c",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FeventHandler.c?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -457,16 +457,10 @@ reportEvents(JNIEnv *env, jbyte sessionID, jthread thread, EventIndex ei,\n     }\n }\n \n-/* A bagEnumerateFunction.  Create a synthetic class unload event\n- * for every class no longer present.  Analogous to event_callback\n- * combined with a handler in a unload specific (no event\n- * structure) kind of way.\n- */\n-static jboolean\n-synthesizeUnloadEvent(void *signatureVoid, void *envVoid)\n+/* Create a synthetic class unload event for the specified signature. */\n+jboolean\n+eventHandler_synthesizeUnloadEvent(char *signature, JNIEnv *env)\n {\n-    JNIEnv *env = (JNIEnv *)envVoid;\n-    char *signature = *(char **)signatureVoid;\n     char *classname;\n     HandlerNode *node;\n     jbyte eventSessionID = currentSessionID;\n@@ -560,39 +554,10 @@ event_callback(JNIEnv *env, EventInfo *evinfo)\n     currentException = JNI_FUNC_PTR(env,ExceptionOccurred)(env);\n     JNI_FUNC_PTR(env,ExceptionClear)(env);\n \n-    /* See if a garbage collection finish event happened earlier.\n-     *\n-     * Note: The \"if\" is an optimization to avoid entering the lock on every\n-     *       event; garbageCollected may be zapped before we enter\n-     *       the lock but then this just becomes one big no-op.\n-     */\n-    if ( garbageCollected > 0 ) {\n-        struct bag *unloadedSignatures = NULL;\n-\n-        /* We want to compact the hash table of all\n-         * objects sent to the front end by removing objects that have\n-         * been collected.\n-         */\n+    /* See if a garbage collection finish event happened earlier. */\n+    if ( garbageCollected > 0) {\n         commonRef_compact();\n-\n-        /* We also need to simulate the class unload events. */\n-\n-        debugMonitorEnter(handlerLock);\n-\n-        /* Clear garbage collection counter */\n         garbageCollected = 0;\n-\n-        /* Analyze which class unloads occurred */\n-        unloadedSignatures = classTrack_processUnloads(env);\n-\n-        debugMonitorExit(handlerLock);\n-\n-        /* Generate the synthetic class unload events and/or just cleanup.  */\n-        if ( unloadedSignatures != NULL ) {\n-            (void)bagEnumerateOver(unloadedSignatures, synthesizeUnloadEvent,\n-                             (void *)env);\n-            bagDestroyBag(unloadedSignatures);\n-        }\n     }\n \n     thread = evinfo->thread;\n@@ -1627,9 +1592,6 @@ installHandler(HandlerNode *node,\n \n     node->handlerID = external? ++requestIdCounter : 0;\n     error = eventFilterRestricted_install(node);\n-    if (node->ei == EI_GC_FINISH) {\n-        classTrack_activate(getEnv());\n-    }\n     if (error == JVMTI_ERROR_NONE) {\n         insert(getHandlerChain(node->ei), node);\n     }"
      },
      {
        "sha": "dbc180556ae99f84ee3537a09124824c02f056bf",
        "filename": "src/jdk.jdwp.agent/share/native/libjdwp/eventHandler.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FeventHandler.h",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FeventHandler.h",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jdwp.agent%2Fshare%2Fnative%2Flibjdwp%2FeventHandler.h?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -76,6 +76,7 @@ void eventHandler_reset(jbyte sessionID);\n void eventHandler_lock(void);\n void eventHandler_unlock(void);\n \n+jboolean eventHandler_synthesizeUnloadEvent(char *signature, JNIEnv *env);\n \n jclass getMethodClass(jvmtiEnv *jvmti_env, jmethodID method);\n "
      },
      {
        "sha": "8358825b16e304d907130c6dff528994bfec668a",
        "filename": "src/jdk.jfr/share/classes/jdk/jfr/internal/MetadataRepository.java",
        "status": "modified",
        "additions": 7,
        "deletions": 26,
        "changes": 33,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2FMetadataRepository.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2FMetadataRepository.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2FMetadataRepository.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2016, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -269,9 +269,12 @@ synchronized Instant setOutput(String filename) {\n         if (staleMetadata) {\n             storeDescriptorInJVM();\n         }\n-        awaitUniqueTimestamp();\n         jvm.setOutput(filename);\n-        long nanos = jvm.getChunkStartNanos();\n+        // Each chunk needs a unique start timestamp and\n+        // if the clock resolution is low, two chunks may\n+        // get the same timestamp. Utils.getChunkStartNanos()\n+        // ensures the timestamp is unique for the next chunk\n+        long chunkStart = Utils.getChunkStartNanos();\n         if (filename != null) {\n             RepositoryFiles.notifyNewFile();\n         }\n@@ -282,29 +285,7 @@ synchronized Instant setOutput(String filename) {\n             }\n             unregistered = false;\n         }\n-        return Utils.epochNanosToInstant(nanos);\n-    }\n-\n-    // Each chunk needs a unique start timestamp and\n-    // if the clock resolution is low, two chunks may\n-    // get the same timestamp.\n-    private void awaitUniqueTimestamp() {\n-        if (outputChange == null) {\n-            outputChange = Instant.now();\n-            return;\n-        }\n-        while (true) {\n-            Instant time = Instant.now();\n-            if (!time.equals(outputChange)) {\n-                outputChange = time;\n-                return;\n-            }\n-            try {\n-                Thread.sleep(0, 100);\n-            } catch (InterruptedException iex) {\n-                // ignore\n-            }\n-        }\n+        return Utils.epochNanosToInstant(chunkStart);\n     }\n \n     private void unregisterUnloaded() {"
      },
      {
        "sha": "b896e96165ac870f4a2ac458b39330e19d823bba",
        "filename": "src/jdk.jfr/share/classes/jdk/jfr/internal/PlatformRecorder.java",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2FPlatformRecorder.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2FPlatformRecorder.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2FPlatformRecorder.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -249,7 +249,7 @@ synchronized long start(PlatformRecording recording) {\n             }\n             currentChunk = newChunk;\n             jvm.beginRecording();\n-            startNanos = jvm.getChunkStartNanos();\n+            startNanos = Utils.getChunkStartNanos();\n             startTime = Utils.epochNanosToInstant(startNanos);\n             if (currentChunk != null) {\n                 currentChunk.setStartTime(startTime);\n@@ -270,7 +270,7 @@ synchronized long start(PlatformRecording recording) {\n                 startTime = MetadataRepository.getInstance().setOutput(p);\n                 newChunk.setStartTime(startTime);\n             }\n-            startNanos = jvm.getChunkStartNanos();\n+            startNanos = Utils.getChunkStartNanos();\n             startTime = Utils.epochNanosToInstant(startNanos);\n             recording.setStartTime(startTime);\n             recording.setState(RecordingState.RUNNING);\n@@ -317,7 +317,7 @@ synchronized void stop(PlatformRecording recording) {\n             }\n         }\n         OldObjectSample.emit(recording);\n-        recording.setFinalStartnanos(jvm.getChunkStartNanos());\n+        recording.setFinalStartnanos(Utils.getChunkStartNanos());\n \n         if (endPhysical) {\n             RequestEngine.doChunkEnd();"
      },
      {
        "sha": "35586615672119ab6fdad948d234d1210f98328c",
        "filename": "src/jdk.jfr/share/classes/jdk/jfr/internal/Utils.java",
        "status": "modified",
        "additions": 28,
        "deletions": 1,
        "changes": 29,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2FUtils.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2FUtils.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2FUtils.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2016, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -96,6 +96,7 @@ public final class Utils {\n      * The possible data race is benign and is worth of not introducing any contention here.\n      */\n     private static Metrics[] metrics;\n+    private static Instant lastTimestamp;\n \n     public static void checkAccessFlightRecorder() throws SecurityException {\n         @SuppressWarnings(\"removal\")\n@@ -841,4 +842,30 @@ public static Instant epochNanosToInstant(long epochNanos) {\n     public static long timeToNanos(Instant timestamp) {\n         return timestamp.getEpochSecond() * 1_000_000_000L + timestamp.getNano();\n     }\n+\n+    public static long getChunkStartNanos() {\n+        long nanos = JVM.getJVM().getChunkStartNanos();\n+        // JVM::getChunkStartNanos() may return a bumped timestamp, +1 ns or +2 ns.\n+        // Spin here to give Instant.now() a chance to catch up.\n+        awaitUniqueTimestamp();\n+        return nanos;\n+    }\n+\n+    private static void awaitUniqueTimestamp() {\n+        if (lastTimestamp == null) {\n+            lastTimestamp = Instant.now(); // lazy initialization\n+        }\n+        while (true) {\n+            Instant time = Instant.now();\n+            if (!time.equals(lastTimestamp)) {\n+                lastTimestamp = time;\n+                return;\n+            }\n+            try {\n+                Thread.sleep(0, 100);\n+            } catch (InterruptedException iex) {\n+                // ignore\n+            }\n+        }\n+    }\n }"
      },
      {
        "sha": "5e14c2dae899b74d02499abb6676f7d7080a07fa",
        "filename": "src/jdk.jfr/share/classes/jdk/jfr/internal/instrument/RandomAccessFileInstrumentor.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2Finstrument%2FRandomAccessFileInstrumentor.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2Finstrument%2FRandomAccessFileInstrumentor.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jfr%2Fshare%2Fclasses%2Fjdk%2Fjfr%2Finternal%2Finstrument%2FRandomAccessFileInstrumentor.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -156,7 +156,7 @@ public void write(byte b[]) throws IOException {\n             write(b);\n             bytesWritten = b.length;\n         } finally {\n-            long duration = EventHandler.timestamp();\n+            long duration = EventHandler.timestamp() - start;\n             if (handler.shouldCommit(duration)) {\n                 handler.write(start, duration, path, bytesWritten);\n             }"
      },
      {
        "sha": "74a7c487e1f93fe1dd3ad1ba438cda2922c71fa5",
        "filename": "src/jdk.jfr/share/conf/jfr/default.jfc",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fconf%2Fjfr%2Fdefault.jfc",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fconf%2Fjfr%2Fdefault.jfc",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jfr%2Fshare%2Fconf%2Fjfr%2Fdefault.jfc?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -521,6 +521,10 @@\n       <setting name=\"enabled\" control=\"compiler-enabled-failure\">false</setting>\n     </event>\n \n+    <event name=\"jdk.JITRestart\">\n+      <setting name=\"enabled\" control=\"compiler-enabled\">true</setting>\n+    </event>\n+\n     <event name=\"jdk.CodeSweeperConfiguration\">\n       <setting name=\"enabled\" control=\"compiler-enabled\">true</setting>\n       <setting name=\"period\">beginChunk</setting>"
      },
      {
        "sha": "df9c599661d433c76400986ee60cd8c6bb5d0ca3",
        "filename": "src/jdk.jfr/share/conf/jfr/profile.jfc",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fconf%2Fjfr%2Fprofile.jfc",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jfr%2Fshare%2Fconf%2Fjfr%2Fprofile.jfc",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jfr%2Fshare%2Fconf%2Fjfr%2Fprofile.jfc?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -521,6 +521,10 @@\n       <setting name=\"enabled\" control=\"compiler-enabled-failure\">false</setting>\n     </event>\n \n+    <event name=\"jdk.JITRestart\">\n+      <setting name=\"enabled\" control=\"compiler-enabled\">true</setting>\n+    </event>\n+\n     <event name=\"jdk.CodeSweeperConfiguration\">\n       <setting name=\"enabled\" control=\"compiler-enabled\">true</setting>\n       <setting name=\"period\">beginChunk</setting>"
      },
      {
        "sha": "cb70252c180d5ae033e8dfba033082f40c26b591",
        "filename": "src/jdk.jlink/share/classes/jdk/tools/jlink/resources/jlink.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jlink%2Fshare%2Fclasses%2Fjdk%2Ftools%2Fjlink%2Fresources%2Fjlink.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jlink%2Fshare%2Fclasses%2Fjdk%2Ftools%2Fjlink%2Fresources%2Fjlink.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jlink%2Fshare%2Fclasses%2Fjdk%2Ftools%2Fjlink%2Fresources%2Fjlink.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -92,7 +92,7 @@ main.opt.verbose=\\\n \n main.msg.bug=\\\n An exception has occurred in jlink. \\\n-Please file a bug at the Java Bug Database (http://bugreport.java.com/bugreport/) \\\n+Please file a bug at the Java Bug Database (https://bugreport.java.com/bugreport/) \\\n after checking the database for duplicates. \\\n Include your program and the following diagnostic in your report.  Thank you.\n "
      },
      {
        "sha": "c4e1cde0b6acb9c8811be12c60fd77840e25fbcc",
        "filename": "src/jdk.jlink/share/classes/jdk/tools/jlink/resources/jlink_ja.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jlink%2Fshare%2Fclasses%2Fjdk%2Ftools%2Fjlink%2Fresources%2Fjlink_ja.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jlink%2Fshare%2Fclasses%2Fjdk%2Ftools%2Fjlink%2Fresources%2Fjlink_ja.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jlink%2Fshare%2Fclasses%2Fjdk%2Ftools%2Fjlink%2Fresources%2Fjlink_ja.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -55,7 +55,7 @@ main.opt.ignore-signing-information=\\      --ignore-signing-information      \\u7\n \n main.opt.verbose=\\  -v\\u3001--verbose                         \\u8A73\\u7D30\\u306A\\u30C8\\u30EC\\u30FC\\u30B9\\u3092\\u6709\\u52B9\\u306B\\u3057\\u307E\\u3059\n \n-main.msg.bug=jlink\\u3067\\u4F8B\\u5916\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\\u3002\\u30C7\\u30FC\\u30BF\\u30D9\\u30FC\\u30B9\\u3067\\u91CD\\u8907\\u304C\\u306A\\u3044\\u304B\\u3092\\u3054\\u78BA\\u8A8D\\u306E\\u3046\\u3048\\u3001Java Bug Database (http://bugreport.java.com/bugreport/)\\u3067bug\\u306E\\u767B\\u9332\\u3092\\u304A\\u9858\\u3044\\u3044\\u305F\\u3057\\u307E\\u3059\\u3002\\u30EC\\u30DD\\u30FC\\u30C8\\u306B\\u306F\\u3001\\u305D\\u306E\\u30D7\\u30ED\\u30B0\\u30E9\\u30E0\\u3068\\u6B21\\u306E\\u8A3A\\u65AD\\u5185\\u5BB9\\u3092\\u542B\\u3081\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u3054\\u5354\\u529B\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3059\\u3002\n+main.msg.bug=jlink\\u3067\\u4F8B\\u5916\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\\u3002\\u30C7\\u30FC\\u30BF\\u30D9\\u30FC\\u30B9\\u3067\\u91CD\\u8907\\u304C\\u306A\\u3044\\u304B\\u3092\\u3054\\u78BA\\u8A8D\\u306E\\u3046\\u3048\\u3001Java Bug Database (https://bugreport.java.com/bugreport/)\\u3067bug\\u306E\\u767B\\u9332\\u3092\\u304A\\u9858\\u3044\\u3044\\u305F\\u3057\\u307E\\u3059\\u3002\\u30EC\\u30DD\\u30FC\\u30C8\\u306B\\u306F\\u3001\\u305D\\u306E\\u30D7\\u30ED\\u30B0\\u30E9\\u30E0\\u3068\\u6B21\\u306E\\u8A3A\\u65AD\\u5185\\u5BB9\\u3092\\u542B\\u3081\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u3054\\u5354\\u529B\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3059\\u3002\n \n main.extended.help=\\u4F7F\\u7528\\u53EF\\u80FD\\u306A\\u30D7\\u30E9\\u30B0\\u30A4\\u30F3\\u306E\\u30EA\\u30B9\\u30C8:\n "
      },
      {
        "sha": "8c6c9feb39fb2ec28c128cb4345c7e35a0aa6af7",
        "filename": "src/jdk.jlink/share/classes/jdk/tools/jlink/resources/jlink_zh_CN.properties",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jlink%2Fshare%2Fclasses%2Fjdk%2Ftools%2Fjlink%2Fresources%2Fjlink_zh_CN.properties",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.jlink%2Fshare%2Fclasses%2Fjdk%2Ftools%2Fjlink%2Fresources%2Fjlink_zh_CN.properties",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.jlink%2Fshare%2Fclasses%2Fjdk%2Ftools%2Fjlink%2Fresources%2Fjlink_zh_CN.properties?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -55,7 +55,7 @@ main.opt.ignore-signing-information=\\      --ignore-signing-information        \\\n \n main.opt.verbose=\\  -v, --verbose                         \\u542F\\u7528\\u8BE6\\u7EC6\\u8DDF\\u8E2A\n \n-main.msg.bug=jlink \\u4E2D\\u51FA\\u73B0\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\u5982\\u679C\\u5728 Java Bug Database (http://bugreport.java.com/bugreport/) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u8BE5\\u9519\\u8BEF, \\u8BF7\\u5728\\u8BE5\\u6570\\u636E\\u5E93\\u4E2D\\u5EFA\\u7ACB Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u60A8\\u7684\\u7A0B\\u5E8F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n+main.msg.bug=jlink \\u4E2D\\u51FA\\u73B0\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\u5982\\u679C\\u5728 Java Bug Database (https://bugreport.java.com/bugreport/) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u8BE5\\u9519\\u8BEF, \\u8BF7\\u5728\\u8BE5\\u6570\\u636E\\u5E93\\u4E2D\\u5EFA\\u7ACB Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u60A8\\u7684\\u7A0B\\u5E8F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n \n main.extended.help=\\u53EF\\u7528\\u63D2\\u4EF6\\u5217\\u8868:\n "
      },
      {
        "sha": "1f437ae8ec29c61c8f166e0c63523149216c111f",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_de.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_de.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_de.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_de.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"Franz\\u00f6sisch-Guiana Sommerzeit\", \"GFST\",\n                                               \"Franz\\u00F6sisch-Guiana Zeit\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"Suriname Zeit\", \"SRT\","
      },
      {
        "sha": "126010ba396ee074d62f8793115c599b5299f88b",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_es.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_es.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_es.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_es.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"Hora de verano de la Guayana Francesa\", \"GFST\",\n                                               \"Hora de la Guayana Francesa\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"Hora de Surinam\", \"SRT\","
      },
      {
        "sha": "bd6bceb6ddd04b6a5660d053b67679097204fc68",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_fr.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_fr.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_fr.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_fr.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"Heure d'\\u00e9t\\u00e9 de Guyane fran\\u00e7aise\", \"GFST\",\n                                               \"Heure de Guyane fran\\u00E7aise\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"Heure du Surinam\", \"SRT\","
      },
      {
        "sha": "7f55e19fff5f591ebf90b24ab53d46acd1425a9f",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_it.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_it.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_it.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_it.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"Ora estiva della Guyana Francese\", \"GFST\",\n                                               \"Ora della Guyana Francese\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"Ora di Suriname\", \"SRT\","
      },
      {
        "sha": "fe00a00404d29eae6d27d2bbf1eaa7189c61ab9d",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_ja.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_ja.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_ja.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_ja.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"\\u4ecf\\u9818\\u30ae\\u30a2\\u30ca\\u590f\\u6642\\u9593\", \"GFST\",\n                                               \"\\u30D5\\u30E9\\u30F3\\u30B9\\u9818\\u30AE\\u30A2\\u30CA\\u6642\\u9593\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"\\u30b9\\u30ea\\u30ca\\u30e0\\u6642\\u9593\", \"SRT\","
      },
      {
        "sha": "3b0f44a2e4ebb28b752a7b5bda995b44a261cf7d",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_ko.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_ko.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_ko.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_ko.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"\\ud504\\ub791\\uc2a4\\ub839 \\uae30\\uc544\\ub098 \\uc77c\\uad11\\uc808\\uc57d\\uc2dc\\uac04\", \"GFST\",\n                                               \"\\uD504\\uB791\\uC2A4\\uB839 \\uAE30\\uC544\\uB098 \\uD45C\\uC900\\uC2DC\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"\\uc218\\ub9ac\\ub0a8 \\uc2dc\\uac04\", \"SRT\","
      },
      {
        "sha": "557e0bf90016bae6737b63a550bc65e170935b27",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_pt_BR.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_pt_BR.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_pt_BR.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_pt_BR.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"Fuso hor\\u00e1rio de ver\\u00e3o da Guiana Francesa\", \"GFST\",\n                                               \"Hor\\u00E1rio da Guiana Francesa\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"Fuso hor\\u00e1rio do Suriname\", \"SRT\","
      },
      {
        "sha": "d4b1377b430a68e5e4b7d8a2e0c30ca982fe3088",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_sv.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_sv.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_sv.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_sv.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"Franska Guyana, sommartid\", \"GFST\",\n                                               \"Franska Guyana-tid\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"Surinam, normaltid\", \"SRT\","
      },
      {
        "sha": "8224549464f3a8e34aa30bd2079f19469e05d459",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_zh_CN.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_zh_CN.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_zh_CN.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_zh_CN.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"\\u6cd5\\u5c5e\\u572d\\u4e9a\\u90a3\\u590f\\u4ee4\\u65f6\", \"GFST\",\n                                               \"\\u6CD5\\u5C5E\\u572D\\u4E9A\\u90A3\\u65F6\\u95F4\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"\\u82cf\\u5229\\u5357\\u65f6\\u95f4\", \"SRT\","
      },
      {
        "sha": "3d28bfa2cd666bc6c9b3194ad35de625f26ad907",
        "filename": "src/jdk.localedata/share/classes/sun/util/resources/ext/TimeZoneNames_zh_TW.java",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/adoptium/jdk17u/blob/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_zh_TW.java",
        "raw_url": "https://github.com/adoptium/jdk17u/raw/41c9d7dc572340e80f46bc40bd673cc2c14ec3e1/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_zh_TW.java",
        "contents_url": "https://api.github.com/repos/adoptium/jdk17u/contents/src%2Fjdk.localedata%2Fshare%2Fclasses%2Fsun%2Futil%2Fresources%2Fext%2FTimeZoneNames_zh_TW.java?ref=41c9d7dc572340e80f46bc40bd673cc2c14ec3e1",
        "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 1997, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -427,7 +427,8 @@ protected final Object[][] getContents() {\n                                               \"\\u6cd5\\u5c6c\\u572d\\u4e9e\\u90a3\\u590f\\u4ee4\\u6642\\u9593\", \"GFST\",\n                                               \"\\u6CD5\\u5C6C\\u572D\\u4E9E\\u90A3\\u6642\\u9593\", \"GFT\"}},\n             {\"America/Cayman\", EST},\n-            {\"America/Chihuahua\", MST},\n+            {\"America/Chihuahua\", CST},\n+            {\"America/Ciudad_Juarez\", MST},\n             {\"America/Creston\", MST},\n             {\"America/Coral_Harbour\", EST},\n             {\"America/Cordoba\", AGT},\n@@ -516,7 +517,7 @@ protected final Object[][] getContents() {\n             {\"America/North_Dakota/Center\", CST},\n             {\"America/North_Dakota/New_Salem\", CST},\n             {\"America/Nuuk\", WGT},\n-            {\"America/Ojinaga\", MST},\n+            {\"America/Ojinaga\", CST},\n             {\"America/Panama\", EST},\n             {\"America/Pangnirtung\", EST},\n             {\"America/Paramaribo\", new String[] {\"\\u8607\\u5229\\u5357\\u6642\\u9593\", \"SRT\","
      }
    ]
  }